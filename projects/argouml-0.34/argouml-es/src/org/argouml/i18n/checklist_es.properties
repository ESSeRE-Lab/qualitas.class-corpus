# $Id: checklist_es.properties 267 2010-04-22 18:16:05Z er_conde $
# Copyright (c) 2003-2006 The Regents of the University of California. All
# Rights Reserved. Permission to use, copy, modify, and distribute this
# software and its documentation without fee, and without a written
# agreement is hereby granted, provided that the above copyright notice
# and this paragraph appear in all copies.  This software program and
# documentation are copyrighted by The Regents of the University of
# California. The software program and documentation are supplied "AS
# IS", without any accompanying services from The Regents. The Regents
# does not warrant that the operation of the program will be
# uninterrupted or error-free. The end-user understands that the program
# was developed for research purposes and is advised not to rely
# exclusively on the program for any reason.  IN NO EVENT SHALL THE
# UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT,
# SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS,
# ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF
# THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE. THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE
# PROVIDED HEREUNDER IS ON AN "AS IS" BASIS, AND THE UNIVERSITY OF
# CALIFORNIA HAS NO OBLIGATIONS TO PROVIDE MAINTENANCE, SUPPORT,
# UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
# 
# Keys in alphabetical order.
# Don't sort the lines! That will probably make a mess since they values
# span several lines.
#
# To recover editable version of this file use:
#    native2ascii -reverse -encoding ISO8859_1 <cvs_filename> <editable_filename>
#
# BE SURE to convert ASCII before commiting by using the command
#    native2ascii -encoding ISO8859_1 <editable_filename> <cvs_filename> 
#
checklist.actor.encoding = Codificaci\u00f3n
checklist.actor.encoding.convert-to-attribute = Deber\u00eda haber una clase propia para <ocl>self</ocl> o ser un atributo simple de otra clase?
checklist.actor.encoding.do-just-one-thing = \u00bfHace <ocl>self</ocl> una sola cosa y la hace bien?
checklist.actor.encoding.break-into-parts = Podr\u00eda dividirse <ocl>self</ocl> en dos o m\u00e1s clases?
checklist.actor.location = Localizaci\u00f3n
checklist.actor.location.move-somewhere = \u00bfPodr\u00eda <ocl>self</ocl> estar definida en un lugar diferente de esta jerarqu\u00eda de clases?
checklist.actor.location.planned-subclasses = \u00bfTiene planeado subclasificar <ocl>self</ocl>?
checklist.actor.location.eliminate-from-model = \u00bfPodr\u00eda eliminar <ocl>self</ocl> del modelo?
checklist.actor.location.eliminates-or-affects-something-else = \u00bfHay alguna otra clase del modelo que deber\u00eda ser revisada o eliminada porque sirve al mismo prop\u00f3sito que <ocl>self</ocl>?
checklist.actor.naming = Nombrado
checklist.actor.naming.describe-clearly = \u00bfDescribe claramente la clase el nombre '<ocl>self</ocl>'?
checklist.actor.naming.is-noun = 	\u00bf'<ocl>self</ocl>' es un nombre o una sintagma nominal?
checklist.actor.naming.misinterpret = 	\u00bfPodr\u00eda ser malinterpretado el significado del nombre '<ocl>self</ocl>'?
checklist.actor.updates = Actualizaciones
checklist.actor.updates.reasons-for-update = \u00bfPor qu\u00e9 motivos una instancia de <ocl>self</ocl> es actualizada?
checklist.actor.updates.affects-something-else = \u00bfHay alg\u00fan otro objeto que deba ser actualizado cuando <ocl>self</ocl> es actualizado?
checklist.actor.value = Valor
checklist.actor.value.start-with-meaningful-values = \u00bfComienzan todos los atributos de <ocl>self</ocl> con valores significativos?
checklist.actor.value.convert-to-invariant = \u00bfPodr\u00eda escribir un invariante para esta clase?
checklist.actor.value.establish-invariant-in-constructors = \u00bfEstablecen la invariante de la clase todos los constructores?
checklist.actor.value.maintain-invariant = \u00bfMantienen la invariante de la clase todas las operaciones?   
checklist.association.encoding = Codificaci\u00f3n
checklist.association.encoding.convert-to-attribute = \u00bfDeber\u00eda <ocl>self</ocl> estar en su propia clase o ser solo un atributo de una clase?
checklist.association.encoding.do-just-one-thing = \u00bfHace <ocl>self</ocl> exactamente una sola cosa y la hace bien?
checklist.association.encoding.break-into-parts = \u00bfPodr\u00eda dividirse <ocl>self</ocl> en dos o m\u00e1s classes?
checklist.association.location = Localizaci\u00f3n
checklist.association.location.move-somewhere = \u00bfPodr\u00eda <ocl>self</ocl> estar definida en una posici\u00f3n diferente de esta jerarqu\u00eda de clases?
checklist.association.location.planned-subclasses = \u00bfPlaneas crear subclases de <ocl>self</ocl>?
checklist.association.location.eliminate-from-model = \u00bfPodr\u00eda eliminar del modelo a <ocl>self</ocl>?
checklist.association.location.eliminates-or-affects-something-else = \u00bfHay alguna otra clase en el modelo que seba ser revisada o eliminada porque sirva al mismo prop\u00f3sito que <ocl>self</ocl>?
checklist.association.naming = Nombrado
checklist.association.naming.describe-clearly = \u00bfEl nombre '<ocl>self</ocl>' describe claramente la clase?
checklist.association.naming.is-noun = 	\u00bfEs '<ocl>self</ocl>' un nombre o un sintagma nominal?
checklist.association.naming.misinterpret = \u00bfPodr\u00eda malinterpretarse el significado de '<ocl>self</ocl>'?
checklist.association.updates = Actualizaciones
checklist.association.updates.reasons-for-update = \u00bfPor qu\u00e9 motivos deber\u00eda ser actualizada una instancia de <ocl>self</ocl>?
checklist.association.updates.affects-something-else = \u00bfHay alg\u00fan otro objeto que deba ser actualizado cuando <ocl>self</ocl> es actualizado?
checklist.association.value = Valor
checklist.association.value.start-with-meaningful-values = \u00bfComienzan todos los atributos de <ocl>self</ocl> con valores significativos?
checklist.association.value.convert-to-invariant = \u00bfPodr\u00eda escribir un invariante para esta clase?
checklist.association.value.establish-invariant-in-constructors = \u00bfEstablecen la invariante de la clase todos los constructores?
checklist.association.value.maintain-invariant = \u00bfMantienen la invariante de la clase todas las operaciones?
checklist.attribute.encoding = Codificaci\u00f3n
checklist.attribute.encoding.is-too-restrictive = \u00bfEs el tipo <ocl>self.type</ocl> demasiado restrictivo para representar todos los posibles valores de <ocl>self</ocl>?
checklist.attribute.encoding.allow-impossible-values = \u00bfEl tipo <ocl>self.type</ocl> permite valores para <ocl>self</ocl> que nunca podr\u00e1n ser correctos?
checklist.attribute.encoding.combine-with-other = \u00bfPodr\u00eda combinarse <ocl>self</ocl> con algun otro atributo de <ocl>self.owner</ocl> (por ejemplo, {owner.structuralFeature})?
checklist.attribute.encoding.break-into-parts = \u00bfPodr\u00eda descomponerse <ocl>self</ocl> en dos o m\u00e1s partes (por ejemplo, un n\u00famero de telefono puede descomponerse en un prefijo y un n\u00famero)?
checklist.attribute.encoding.is-computable = Podr\u00eda calcularse <ocl>self</ocl> a partir de otros atributos en vez de almacenarse?
checklist.attribute.location = Localizaci\u00f3n
checklist.attribute.location.move-somewhere = \u00bfPodr\u00eda definirse <ocl>self</ocl> en una clase diferente que este asociada con <ocl>self.owner</ocl>?
checklist.attribute.location.move-up-hierarchy = \u00bfPodr\u00eda moverse <ocl>self</ocl> m\u00e1s arriba en la jerarqu\u00eda de herencia para aplicarla a <ocl>owner.name</ocl> y a otras clases?
checklist.attribute.location.include-all = \u00bf<ocl>self</ocl> se aplica a todas las instancias de la clase <ocl>self.owner</ocl> incluyendo instancias de sus subclases?
checklist.attribute.location.could-be-eliminated = \u00bfPodr\u00eda eliminar del modelo a <ocl>self</ocl>?
checklist.attribute.location.eliminates-or-affects-something-else = \u00bfHay otro atributo en el modelo que deber\u00eda ser revisado o eliminado porque sirve al mismo prop\u00f3sito que <ocl>self</ocl>?
checklist.attribute.naming = Nombrado
checklist.attribute.naming.describe-clearly = \u00bfEl nombre '<ocl>self</ocl>' describe claramente el atributo?
checklist.attribute.naming.is-noun = 	\u00bfEs '<ocl>self</ocl>' un nombre o un sintagma nominal?
checklist.attribute.naming.misinterpret = \u00bfPodr\u00eda malinterpretarse el significado de '<ocl>self</ocl>'?
checklist.attribute.updates = Actualizaciones
checklist.attribute.updates.reasons-for-update = \u00bfPor qu\u00e9 motivos ser\u00e1 actualizado <ocl>self</ocl>?
checklist.attribute.updates.affects-something-else = \u00bfHay alg\u00fan otro atributo que deba ser actualizado cuando sea actualizado <ocl>self</ocl>?
checklist.attribute.updates.exists-method-for-update = \u00bfHay algun m\u00e9todo que deba ser llamado cuando sea actualizado <ocl>self</ocl> ?
checklist.attribute.updates.exists-method-for-specific-value = \u00bfHay alg\u00fan m\u00e9todo que deba ser llamado cuando a <ocl>self</ocl> se le asigne un valor determinado?
checklist.attribute.value = Valor
checklist.attribute.value.default-value = \u00bfDeber\u00eda tener <ocl>self</ocl> un valor inicial (o por defecto)?
checklist.attribute.value.correct-default-value = \u00bfEs correcto el valor inicial <ocl>self.initialValue</ocl>?
checklist.attribute.value.is-correctness-checkable = \u00bfPodr\u00edas escribir una expresi\u00f3n para comprobar si <ocl>self</ocl> es correcto? \u00bfy veros\u00edmiles?        
checklist.class.encoding = Codificaci\u00f3n
checklist.class.encoding.convert-to-attribute = \u00bfDeber\u00eda <ocl>self</ocl> estar en su propia clase o ser un atributo de otra?
checklist.class.encoding.do-just-one-thing = \u00bfHace <ocl>self</ocl> exactamente una sola cosa y la hace bien?
checklist.class.encoding.break-into-parts = \u00bfPodr\u00eda <ocl>self</ocl> ser dividido en dos o m\u00e1s clases?
checklist.class.location = Localizaci\u00f3n
checklist.class.location.move-somewhere = \u00bfPodr\u00eda <ocl>self</ocl> estar definida en una posici\u00f3n diferente de esta jerarqu\u00eda de clases?
checklist.class.location.planned-subclasses = \u00bfPlanea crear subclases de <ocl>self</ocl>?
checklist.class.location.eliminate-from-model = \u00bfPodr\u00eda eliminar del modelo a <ocl>self</ocl>?
checklist.class.location.eliminates-or-affects-something-else = \u00bfHay alguna otra clase en el modelo que deba ser revisada o eliminada porque sirve al mismo prop\u00f3sito que <ocl>self</ocl>?
checklist.class.naming = Nombrado
checklist.class.naming.describe-clearly = \u00bfDescribe claramente la clase el nombre '<ocl>self</ocl>'?
checklist.class.naming.is-noun = 	\u00bfEs '<ocl>self</ocl>' un nombre o una sintagma nominal?
checklist.class.naming.misinterpret = 	\u00bfPodr\u00eda malinterpretarse el significado de '<ocl>self</ocl>'?
checklist.class.updates = Actualizaciones
checklist.class.updates.reasons-for-update = \u00bfPor qu\u00e9 motivos ser\u00e1 actualizada una instancia de <ocl>self</ocl>?
checklist.class.updates.affects-something-else = \u00bfExiste algun otro objeto que deba ser actualizado cuando sea actualizado <ocl>self</ocl>?
checklist.class.value = Valor
checklist.class.value.start-with-meaningful-values = \u00bfComienzan todos los atributos de <ocl>self</ocl> con valores significativos?
checklist.class.value.convert-to-invariant = \u00bfPodr\u00eda escribir un invariante para esta clase?
checklist.class.value.establish-invariant-in-constructors = \u00bfEstablecen la invariante de la clase todos los constructores?
checklist.class.value.maintain-invariant = \u00bfMantienen la invariante de la clase todas las operaciones?
checklist.instance.actions = Acciones
checklist.instance.actions.list-entry-actions = \u00bfQue acci\u00f3n deber\u00eda realizarse al entrar en <ocl>self</ocl>?
checklist.instance.actions.update-attribute-on-entry = \u00bfDeber\u00eda actualizarse alg\u00fan atributo al entrar en <ocl>self</ocl>?
checklist.instance.actions.list-exit-action = \u00bfQue acci\u00f3n deber\u00eda realizarse al salir de <ocl>self</ocl>?
checklist.instance.actions.update-attribute-on-exit = \u00bfDeber\u00eda actualizarse algun atributo al salir de <ocl>self</ocl>?
checklist.instance.actions.list-do-action = \u00bfQue acci\u00f3n deber\u00eda realizarse mientras este en <ocl>self</ocl>?
checklist.instance.actions.maintained-state = \u00bfLas acciones de estado mantienen <ocl>self</ocl> como el estado actual?
checklist.instance.general = General
checklist.instance.general.describe-clearly = \u00bfDescribe esta instancia de <ocl>self</ocl> la instancia?
checklist.instance.naming = Nombrado
checklist.instance.naming.describe-clearly = \u00bfEl nombre '<ocl>self</ocl>' describe claramente la instancia?
checklist.instance.naming.denotes-state = \u00bf'<ocl>self</ocl>' denota un estado en vez de una actividad?
checklist.instance.naming.misinterpret = \u00bfPodr\u00eda malinterpretarse el significado de '<ocl>self</ocl>'?
checklist.instance.structure = Estructura
checklist.instance.structure.merged-with-other = \u00bfDeber\u00eda <ocl>self</ocl> ser su propio estado o podr\u00eda combinarse con otro estado?
checklist.instance.structure.do-just-one-thing = \u00bfHace <ocl>self</ocl> exactamente una sola cosa y la hace bien?
checklist.instance.structure.break-into-parts = \u00bfPodr\u00eda dividirse <ocl>self</ocl> en dos o m\u00e1s estados?
checklist.instance.structure.can-write-characteristic-equation = \u00bfPodr\u00eda escribir una ecuaci\u00f3n caracter\u00edstica para <ocl>self</ocl>?
checklist.instance.structure.belong = 	\u00bf<ocl>self</ocl> pertenece a esta m\u00e1quina de estados o a otra?
checklist.instance.structure.make-internal = \u00bfDeber\u00eda <ocl>self</ocl> ser un estado inicial?
checklist.instance.structure.is-state-in-another-machine-exclusive = \u00bfEs algun estado de otra m\u00e1quina exclusivo con <ocl>self</ocl>?
checklist.instance.transitions = Transiciones
checklist.instance.transitions.need-another-transition-into = \u00bfDeber\u00eda haber otra transici\u00f3n en <ocl>self</ocl>?
checklist.instance.transitions.use-all-transitions-into = \u00bfPueden ser usadas todas las transiciones de <ocl>self</ocl>?
checklist.instance.transitions.combine-with-other-incoming = \u00bfPodr\u00edan combinarse algunas transiciones entrantes??
checklist.instance.transitions.need-another-transition-out-of = \u00bfDeber\u00eda haber otra transici\u00f3n fuera de <ocl>self</ocl>?
checklist.instance.transitions.use-all-transitions-out-of = \u00bfPueden usarse todas las transiciones de <ocl>self</ocl>?
checklist.instance.transitions.are-transitions-out-of-exclusive = \u00bfEs exclusiva cada transici\u00f3n saliente?
checklist.instance.transitions.combine-with-other-outgoing = \u00bfPodr\u00edan combinarse algunas transiciones salientes?
checklist.interface.encoding = Codificaci\u00f3n
checklist.interface.encoding.convert-to-attribute = \u00bfDeber\u00eda <ocl>self</ocl> estar en su propia clase o ser s\u00f3lo un atributo de una clase?
checklist.interface.encoding.do-just-one-thing = \u00bfHace <ocl>self</ocl> exactamente una sola cosa y la hace bien?
checklist.interface.encoding.break-into-parts = \u00bfPodr\u00eda dividirse <ocl>self</ocl> en dos o m\u00e1s classes?
checklist.interface.location = Localizaci\u00f3n
checklist.interface.location.move-somewhere = \u00bfPodr\u00eda <ocl>self</ocl> estar definida en una posici\u00f3n diferente de esta jerarqu\u00eda de clases?
checklist.interface.location.planned-subclasses = \u00bfHa planeado crear subclases de <ocl>self</ocl>?
checklist.interface.location.eliminate-from-model = \u00bfPodr\u00eda eliminar del modelo a <ocl>self</ocl>?
checklist.interface.location.eliminates-or-affects-something-else = \u00bfHay otra clase en el modelo que deber\u00eda ser revisada o eliminada porque sirve al mismo prop\u00f3sito que <ocl>self</ocl>?
checklist.interface.naming = Nombrado
checklist.interface.naming.describe-clearly = \u00bfEl nombre '<ocl>self</ocl>' describe claramente la clase?
checklist.interface.naming.is-noun = 	\u00bfEs '<ocl>self</ocl>' un nombre o un sintagma nominal?
checklist.interface.naming.misinterpret = \u00bfPodr\u00eda malinterpretarse el significado de '<ocl>self</ocl>'?
checklist.interface.updates = Actualizaciones
checklist.interface.updates.reasons-for-update = \u00bfPor qu\u00e9 motivos sera actualizada la instancia de <ocl>self</ocl>?
checklist.interface.updates.affects-something-else = \u00bfHay alg\u00fan otro objeto que deba ser actualizado cuando <ocl>self</ocl> es actualizado?
checklist.interface.value = Valor
checklist.interface.value.start-with-meaningful-values = \u00bfComienzan todos los atributos de <ocl>self</ocl> con valores significativos?
checklist.interface.value.convert-to-invariant = \u00bfPodr\u00eda escribir un invariante para esta clase?
checklist.interface.value.establish-invariant-in-constructors = \u00bfEstablecen la invariante de la clase todos los constructores?
checklist.interface.value.maintain-invariant = \u00bfMantienen la invariante de la clase todas las operaciones?
checklist.link.encoding = Codificaci\u00f3n
checklist.link.encoding.convert-to-attribute = \u00bfDeber\u00eda <ocl>self</ocl> estar en su propia clase o ser s\u00f3lo un atributo de una clase?
checklist.link.encoding.do-just-one-thing = \u00bfHace <ocl>self</ocl> exactamente una sola cosa y la hace bien?
checklist.link.encoding.break-into-parts = \u00bfPodr\u00eda dividirse <ocl>self</ocl> en dos o m\u00e1s classes?
checklist.link.location = Localizaci\u00f3n
checklist.link.location.move-somewhere = \u00bfPodr\u00eda <ocl>self</ocl> estar definida en una posici\u00f3n diferente de esta jerarqu\u00eda de clases?
checklist.link.location.planned-subclasses = \u00bfPlanea tener subclases de <ocl>self</ocl>?
checklist.link.location.eliminate-from-model = \u00bfPodr\u00eda eliminar del modelo a <ocl>self</ocl>?
checklist.link.location.eliminates-or-affects-something-else = \u00bfHay alguna otra clase en el modelo que seba ser revisada o eliminada porque sirva al mismo prop\u00f3sito que <ocl>self</ocl>?
checklist.link.naming = Nombrado
checklist.link.naming.describe-clearly = \u00bfEl nombre '<ocl>self</ocl>' describe claramente la clase?
checklist.link.naming.is-noun = 	\u00bfEs '<ocl>self</ocl>' un nombre o un sintagma nominal?
checklist.link.naming.misinterpret = 	\u00bfPodr\u00eda malinterpretarse el significado de '<ocl>self</ocl>'?
checklist.link.updates = Updates
checklist.link.updates.reasons-for-update = \u00bfPor qu\u00e9 motivos ser\u00e1 actualizada una instancia de <ocl>self</ocl>?
checklist.link.updates.affects-something-else = \u00bfHay alg\u00fan otro objeto que deba ser actualizado cuando lo sea <ocl>self</ocl> ?
checklist.link.value = Valor
checklist.link.value.start-with-meaningful-values = \u00bfComienzan todos los atributos de <ocl>self</ocl> con valores significativos?
checklist.link.value.convert-to-invariant = \u00bfPodr\u00eda escribir un invariante para esta clase?
checklist.link.value.establish-invariant-in-constructors = \u00bfEstablecen la invariante de la clase todos los constructores?
checklist.link.value.maintain-invariant = \u00bfMantienen la invariante de la clase todas las operaciones?
checklist.operation.encoding = Codificaci\u00f3n
checklist.operation.encoding.is-returntype-too-restrictive = \u00bfEl tipo de retorno '<ocl>self.returnType</ocl>' es demasiado restrictivo para representar todos los valores devueltos por <ocl>self</ocl>?
checklist.operation.encoding.does-returntype-allow-impossible-values = \u00bf'<ocl>self.returnType</ocl>' permite valores de retorno que nunca pueden ser correctos?
checklist.operation.encoding.combine-with-other = \u00bfPodr\u00eda <ocl>self</ocl> combinarse con otra operaci\u00f3n de <ocl>self.owner</ocl> (por ejemplo, <ocl>self.owner.behavioralFeature</ocl>)?
checklist.operation.encoding.break-into-parts = \u00bfPodr\u00eda dividirse <ocl>self</ocl> en dos o m\u00e1s partes (por ejemplo, pre-procesamiento, procesamiento principal, y post-procesamiento)?
checklist.operation.encoding.break-into-series = \u00bfPodr\u00eda <ocl>self</ocl> ser reemplazado por llamadas del cliente a operaciones m\u00e1s simples?
checklist.operation.encoding.reduce-number-of-calls = \u00bfPodr\u00eda <ocl>self</ocl> ser combinada con otras operaciones para reducir el n\u00famero de llamadas que deben hacer los clientes?
checklist.operation.location = Localizaci\u00f3n
checklist.operation.location.move-somewhere = \u00bfPodr\u00eda <ocl>self</ocl> estar definida en una clase diferente que est\u00e9 asociada con <ocl>self.owner</ocl>?
checklist.operation.location.move-up-hierarchy = \u00bfPodr\u00eda mover <ocl>self</ocl> m\u00e1s arriba de la jerarqu\u00eda para aplicar <ocl>self.owner</ocl> a otras clases?
checklist.operation.location.include-all = \u00bf<ocl>self</ocl> se aplica a todas las instancias de la clase <ocl>self.owner</ocl> incluyendo instancias de sus subclases?
checklist.operation.location.could-be-eliminated = \u00bfPodr\u00eda eliminar del modelo a <ocl>self</ocl>?
checklist.operation.location.eliminates-or-affects-something-else = \u00bfHay otra operaci\u00f3n en el modelo que deba ser revisada o eliminada porque sirva al mismo prop\u00f3sito que <ocl>self</ocl>?
checklist.operation.naming = Nombrado
checklist.operation.naming.describe-clearly = \u00bfDescribe claramente la operaci\u00f3n el nombre '<ocl>self</ocl>'?
checklist.operation.naming.is-verb = 	\u00bf'<ocl>self</ocl>' es un verbo o una frase?
checklist.operation.naming.misinterpret = \u00bfPodr\u00eda malinterpretarse el significado de '<ocl>self</ocl>'?
checklist.operation.naming.do-just-one-thing = \u00bf<ocl>self</ocl> hace exactamente una cosa y la hace bien?
checklist.operation.value = Valor
checklist.operation.value.handle-all-inputs = \u00bfPuede <ocl>self</ocl> manejar todas las entradas posibles?
checklist.operation.value.are-special-cases = \u00bfHay algunas entradas especiales que deban ser manejadas por separado?
checklist.operation.value.is-correctness-checkable = \u00bfPodr\u00edas escribir una expresi\u00f3n para comprobar si los argumentos de <ocl>self</ocl> son correctos? \u00bfy veros\u00edmiles?
checklist.operation.value.express-preconditions-possible = \u00bfPuede expresar las precondiciones de <ocl>self</ocl>?
checklist.operation.value.express-postconditions-possible = \u00bfPuede expresar las postcondiciones de <ocl>self</ocl>?
checklist.operation.value.how-behave-preconditions-violated = \u00bfC\u00f3mo se comportar\u00eda <ocl>self</ocl> si las precondiciones fueran infringidas?
checklist.operation.value.how-behave-postconditions-not-achieved = \u00bfC\u00f3mo se comportar\u00eda <ocl>self</ocl> si las postcondiciones fueran infringidas?
checklist.state.actions = Acciones
checklist.state.actions.list-entry-actions = \u00bfQu\u00e9 acci\u00f3n deber\u00eda realizarse al entrar en <ocl>self</ocl>?
checklist.state.actions.update-attribute-on-entry = \u00bfDeber\u00eda actualizarse algun atributo al entrar en <ocl>self</ocl>?
checklist.state.actions.list-exit-action = \u00bfQu\u00e9 acci\u00f3n deber\u00eda realizarse al salir de <ocl>self</ocl>?
checklist.state.actions.update-attribute-on-exit = \u00bfDeber\u00eda actualizarse algun atributo al salir de <ocl>self</ocl>?
checklist.state.actions.list-do-action = \u00bfQue acci\u00f3n deber\u00eda realizarse mientras este en <ocl>self</ocl>?
checklist.state.actions.maintained-state = \u00bfLas acciones de estado mantienen <ocl>self</ocl> como el estado actual?
checklist.state.naming = Nombrado
checklist.state.naming.describe-clearly = \u00bfDescribe claramente el estado el nombre '<ocl>self</ocl>'?
checklist.state.naming.denotes-state = 	\u00bfDenota '<ocl>self</ocl>' un estado en vez de una actividad?
checklist.state.naming.misinterpret = 	\u00bfPodr\u00eda malinterpretarse el significado de '<ocl>self</ocl>'?
checklist.state.structure = Estructura
checklist.state.structure.merged-with-other = \u00bfDeber\u00eda <ocl>self</ocl> ser su propio estado o podr\u00eda ser combinado con otro estado?
checklist.state.structure.do-just-one-thing = \u00bfHace <ocl>self</ocl> exactamente una sola cosa y la hace bien?
checklist.state.structure.break-into-parts = \u00bfPodr\u00eda dividirse <ocl>self</ocl> en dos o m\u00e1s states?
checklist.state.structure.can-write-characteristic-equation = \u00bfPodr\u00eda escribir una ecuaci\u00f3n caracter\u00edstica para <ocl>self</ocl>?
checklist.state.structure.belong = 	\u00bf<ocl>self</ocl> pertence a esta m\u00e1quina de estados o a otra?
checklist.state.structure.make-internal = \u00bfDeber\u00eda <ocl>self</ocl> ser un estado inicial?
checklist.state.structure.is-state-in-another-machine-exclusive = \u00bfHay alg\u00fan estado en otra m\u00e1quina exclusivo con <ocl>self</ocl>?
checklist.state.transitions = Transiciones
checklist.state.transitions.need-another-transition-into = \u00bfDeber\u00eda haber otra transici\u00f3n en <ocl>self</ocl>?
checklist.state.transitions.use-all-transitions-into = \u00bfPueden ser usadas todas las transiciones en <ocl>self</ocl>?
checklist.state.transitions.combine-with-other-incoming = \u00bfPodr\u00edan combinarse algunas de las transiciones entrantes?
checklist.state.transitions.need-another-transition-out-of = \u00bfDeber\u00eda haber otra transici\u00f3n fuera de <ocl>self</ocl>?
checklist.state.transitions.use-all-transitions-out-of = \u00bfPueden ser usadas todas las transiciones fuera de <ocl>self</ocl>?
checklist.state.transitions.are-transitions-out-of-exclusive = \u00bfEs exclusiva cada transici\u00f3n saliente?
checklist.state.transitions.combine-with-other-outgoing = \u00bfPodr\u00edan combinarse algunas transiciones salientes?
checklist.transition.actions = Acciones
checklist.transition.actions.should-have = \u00bfDeber\u00eda tener una acci\u00f3n esta transici\u00f3n?
checklist.transition.actions.should-have-exit = \u00bfDeber\u00eda ser una acci\u00f3n de salida la acci\u00f3n de esta transici\u00f3n?
checklist.transition.actions.should-have-entry = \u00bfDeber\u00eda ser una acci\u00f3n de entrada la acci\u00f3n de esta transici\u00f3n?
checklist.transition.actions.is-precondition-met = \u00bfSe alcanza siempre la precondici\u00f3n de esta acci\u00f3n?
checklist.transition.actions.is-postcondition-consistant-with-destination = \u00bfEs consistente la postcondici\u00f3n de esta acci\u00f3n con el destino?
checklist.transition.guard = Guarda
checklist.transition.guard.taken-too-often = \u00bfPodr\u00eda esta transici\u00f3n realizarse muy a menudo?
checklist.transition.guard.is-too-restrictive = Es demasiado restrictiva la condici\u00f3n de esta transici\u00f3n?
checklist.transition.guard.break-into-parts = \u00bfPodr\u00eda ser dividida en dos o m\u00e1s transiciones?
checklist.transition.structure = Estructura
checklist.transition.structure.start-somewhere-else = \u00bfDeber\u00eda comenzar en una fuente diferente esta transici\u00f3n?
checklist.transition.structure.end-somewhere-else = \u00bfDeber\u00eda terminar esta transici\u00f3n en un destino diferente?
checklist.transition.structure.need-another-like-this = \u00bfDeber\u00eda haber otra transici\u00f3n \"como\" esta?
checklist.transition.structure.unneeded-because-of-this = \u00bfHay otra transici\u00f3n no necesaria debido a esta?
checklist.transition.trigger = Disparador
checklist.transition.trigger.needed = 	\u00bfNecesita un disparador esta transici\u00f3n?
checklist.transition.trigger.happen-too-often = \u00bfOcurre muy a menudo este disparador?
checklist.transition.trigger.happen-too-rarely = \u00bfOcurre muy raramente este disparador?
checklist.usecase.encoding = Codificaci\u00f3n
checklist.usecase.encoding.convert-to-attribute = \u00bfDeber\u00eda <ocl>self</ocl> estar en su propia clase o ser solo un atributo de una clase?
checklist.usecase.encoding.do-just-one-thing = \u00bfHace <ocl>self</ocl> exactamente una sola cosa y la hace bien?
checklist.usecase.encoding.break-into-parts = \u00bfPodr\u00eda dividirse <ocl>self</ocl> en dos o m\u00e1s classes?
checklist.usecase.location = Localizaci\u00f3n
checklist.usecase.location.move-somewhere = \u00bfPodr\u00eda <ocl>self</ocl> estar definida en una posici\u00f3n diferente de esta jerarqu\u00eda de clases?
checklist.usecase.location.planned-subclasses = \u00bfPlanea crear subclases de <ocl>self</ocl>?
checklist.usecase.location.eliminate-from-model = \u00bfPodr\u00eda eliminar del modelo a <ocl>self</ocl>?
checklist.usecase.location.eliminates-or-affects-something-else = \u00bfExiste alguna otra clase en el modelo que deba ser revisada o eliminada porque sirve al mismo prop\u00f3sito que <ocl>self</ocl>?
checklist.usecase.naming = Nombrado
checklist.usecase.naming.describe-clearly = \u00bfEl nombre '<ocl>self</ocl>' describe claramente la clase?
checklist.usecase.naming.is-noun = 	\u00bfEs '<ocl>self</ocl>' un nombre o una sintagma nominal?
checklist.usecase.naming.misinterpret = \u00bfPodr\u00eda malinterpretarse el significado de '<ocl>self</ocl>'?
checklist.usecase.updates = Actualizaciones
checklist.usecase.updates.reasons-for-update = \u00bfPor qu\u00e9 razones ser\u00e1 actualizada una instancia de <ocl>self</ocl>?
checklist.usecase.updates.affects-something-else = \u00bfHay algun otro objeto que deba ser actualizado cuando <ocl>self</ocl> es actualizado?
checklist.usecase.value = Valor
checklist.usecase.value.convert-to-invariant = \u00bfPodr\u00eda escribir un invariante para esta clase?
checklist.usecase.value.establish-invariant-in-constructors = \u00bfEstablecen la invariante de la clase todos los constructores?
checklist.usecase.value.maintain-invariant = \u00bfMantienen la invariante de la clase todas las operaciones?
checklist.usecase.value.start-with-meaningful-values = \u00bfComienzan con nombres significativos todos los atributos de <ocl>self</ocl>?