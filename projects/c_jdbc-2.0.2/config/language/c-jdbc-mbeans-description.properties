############################################
################  MBEANS  ##################
############################################

   ### ControllerMBeanDescription
mbean.controller.description=The C-JDBC controller registers itself in the RMI registry and waits for C-JDBC driver requests.
   ### Attributes
mbean.controller.attribute.BindName=The controller's name
mbean.controller.attribute.MajorVersion=The Major Version number.
mbean.controller.attribute.MinorVersion=The Minor Version number.
mbean.controller.attribute.controllers=Information about the available virtual databases.
mbean.controller.attribute.PortNumber=Port number to connect to this controller instance.
mbean.controller.attribute.VirtualDatabases=Returns information about the available virtual databases
   ### Constructors
mbean.controller.constructor.0=Creates a new instance of C-JDBC controller with a default name.
mbean.controller.constructor.1=Creates a new instance of C-JDBC controller with a specific name.
mbean.controller.constructor.1.parameter.name.0=bindName
mbean.controller.constructor.1.parameter.description.0=Bind Name to use for this controller
   ### Operations
mbean.controller.viewInfo=Display all available information on this controller.

mbean.controller.addDriver=Try to add a driver to use with this controller. Secury settings apply.
mbean.controller.addDriver.parameter.name.0=filename
mbean.controller.addDriver.parameter.description.0=Path to the file to get configuration from.

mbean.controller.refreshLogConfiguration=Refreshs the logging system configuration by re-reading the log4j.properties file.

mbean.controller.removecontroller=Prevents this controller from accessing the given database in the future.
mbean.controller.removecontroller.parameter.name.0=virtualname
mbean.controller.removecontroller.parameter.description.0=The name of the virtual database to remove

mbean.controller.removeVirtualDatabase=Prevent the controller from accessing a virtual database thereafter
mbean.controller.removeVirtualDatabase.parameter.name.0=virtualname
mbean.controller.removeVirtualDatabase.parameter.description.0=The virtual database name to remove

mbean.controller.loadXmlConfiguration=Read a XML configuration file and load only the controller specified in the arguments list
mbean.controller.loadXmlConfiguration.parameter.name.0=filename
mbean.controller.loadXmlConfiguration.parameter.name.1=virtualName
mbean.controller.loadXmlConfiguration.parameter.name.2=autoEnable
mbean.controller.loadXmlConfiguration.parameter.name.3=checkPoint
mbean.controller.loadXmlConfiguration.parameter.description.0=Path to the xml file to load data from.
mbean.controller.loadXmlConfiguration.parameter.description.1=The only one name of the virtual database to load.
mbean.controller.loadXmlConfiguration.parameter.description.2=Should we enable the backends associated to this virtual database now?
mbean.controller.loadXmlConfiguration.parameter.description.3=Checkpoint to initialize the virtual database from.

mbean.controller.loadXML=Load a set of virtual databases from this xml file. The file should be compliant to c-jdbc.dtd
mbean.controller.loadXML.parameter.name.0=filename
mbean.controller.loadXML.parameter.description.0=Path to the xml file to use.

mbean.controller.saveConfiguration=Save the actual configuration of the controller into a default location.

   ### VirtualDatabaseMBeanDescription
mbean.virtualdatabase.description=A VirtualDatabase represents a database from client point of view and hide the complexity of the cluster distribution to the client. The client always uses the virtual database name and the C-JDBC virtualdatabase will use the real connections when an SQL request comes in.
  ### Constructors
mbean.virtualdatabase.constructor.6=Creates a new VirtualDatabase instance
mbean.virtualdatabase.constructor.6.parameter.name.0=name
mbean.virtualdatabase.constructor.6.parameter.name.1=maxConnections
mbean.virtualdatabase.constructor.6.parameter.name.2=pool
mbean.virtualdatabase.constructor.6.parameter.name.3=minThreads
mbean.virtualdatabase.constructor.6.parameter.name.4=maxThreads
mbean.virtualdatabase.constructor.6.parameter.name.5=maxThreadIdleTime
mbean.virtualdatabase.constructor.6.parameter.description.0=The virtual database name
mbean.virtualdatabase.constructor.6.parameter.description.1=Maximum number of concurrent connections
mbean.virtualdatabase.constructor.6.parameter.description.2=Should we use a pool of threads for handling connections
mbean.virtualdatabase.constructor.6.parameter.description.3=Minimum number of threads in the pool
mbean.virtualdatabase.constructor.6.parameter.description.4=Maximum number of threads in the pool
mbean.virtualdatabase.constructor.6.parameter.description.5=Maximum time a thread can remain idle before being removed from the pool
  ### Attributes
mbean.virtualdatabase.attribute.AllBackendNames=List of the database backends name.
mbean.virtualdatabase.attribute.Name=The virtual database name.
   ### Operations
mbean.virtualdatabase.getBackendInformation=Returns information about the specified backend.
mbean.virtualdatabase.getBackendInformation.parameter.name.0=backendName
mbean.virtualdatabase.getBackendInformation.parameter.description.0=The database backend logical name.

mbean.virtualdatabase.enableBackend=Enables a backend that has been previously added to this virtual database and that is in the disabled state. The backend is enabled without further check.
mbean.virtualdatabase.enableBackend.parameter.name.0=backendName
mbean.virtualdatabase.enableBackend.parameter.description.0=The database backend logical name.

mbean.virtualdatabase.enableBackendFromCheckpoint=Plays all the queries since the given checkpoint and enables the backend when it is completely synchronized. The backend must have been previously added to this virtual database and be in the disabled state.
mbean.virtualdatabase.enableBackendFromCheckpoint.parameter.name.0=backendName
mbean.virtualdatabase.enableBackendFromCheckpoint.parameter.description.0=The database backend logical name.
mbean.virtualdatabase.enableBackendFromCheckpoint.parameter.name.1=checkpointName 
mbean.virtualdatabase.enableBackendFromCheckpoint.parameter.description.1=The checkpoint name to restart from

mbean.virtualdatabase.disableBackend=Disables a backend that is currently enabled on this virtual database (without further check).
mbean.virtualdatabase.disableBackend.parameter.name.0=databaseBackendName
mbean.virtualdatabase.disableBackend.parameter.description.0=The database backend logical name to enable

mbean.virtualdatabase.disableBackendForCheckpoint=Disables a backend once all the pending write queries are executed. A checkpoint is inserted in the recovery log. The backend must belong to this virtual database and be in the enabled state.
mbean.virtualdatabase.disableBackendForCheckpoint.parameter.name.0=databaseBackendName 
mbean.virtualdatabase.disableBackendForCheckpoint.parameter.description.0=The database backend logical name to disable
mbean.virtualdatabase.disableBackendForCheckpoint.parameter.name.1=checkpointName
mbean.virtualdatabase.disableBackendForCheckpoint.parameter.description.1=The checkpoint name to store


