#!/bin/sh
#
# Author: Tee Teoh <tteoh at cbnco.com>
#
# /etc/init.d/cjdbc
#
### BEGIN INIT INFO
# Provides:       cjdbc
# Description:    Start cjdbc controller
### END INIT INFO
 
# Check for missing binaries (stale symlinks should not happen)
CONTROLLER_BIN=/opt/c-jdbc-1.1-bin/bin/abrazo.sh
CONSOLE_BIN=/opt/c-jdbc-1.1-bin/bin/console.sh
 
test -x $CONTROLLER_BIN || exit 5
test -x $CONSOLE_BIN || exit 5
 
# Shell functions sourced from /etc/rc.status:
#      rc_check         check and set local and overall rc status
#      rc_status        check and set local and overall rc status
#      rc_status -v     ditto but be verbose in local rc status
#      rc_status -v -r  ditto and clear the local rc status
#      rc_status -s     display "skipped" and exit with status 3
#      rc_status -u     display "unused" and exit with status 3
#      rc_failed        set local and overall rc status to failed
#      rc_failed <num>  set local and overall rc status to <num>
#      rc_reset         clear local rc status (overall remains)
#      rc_exit          exit appropriate to overall rc status
#      rc_active    checks whether a service is activated by symlinks
#      rc_splash arg    sets the boot splash screen to arg (if active)
. /etc/rc.status
                                                                                
# First reset status of this service
rc_reset
                                                                                
# Return values acc. to LSB for all commands but status:
# 0      - success
# 1       - generic or unspecified error
# 2       - invalid or excess argument(s)
# 3       - unimplemented feature (e.g. "reload")
# 4       - user had insufficient privileges
# 5       - program is not installed
# 6       - program is not configured
# 7       - program is not running
# 8--199  - reserved (8--99 LSB, 100--149 distrib, 150--199 appl)
#
# Note that starting an already running service, stopping
# or restarting a not-running service as well as the restart
# with force-reload (in case signaling is not supported) are
# considered a success.
                                                                                
case "$1" in
    start)
        echo -n "Starting cjdbc controller"
        startproc $CONTROLLER_BIN
        rc_status -v
        ;;
    stop)
        echo -n "Shutting down cjdbc controller"
        echo "shutdown 1" | $CONSOLE_BIN -t
        rc_status -v
        ;;
    try-restart)
        $0 status >/dev/null &&  $0 restart
        rc_status
        ;;
    restart)
        $0 stop
        $0 start
        rc_status
        ;;
    status)
        echo -n "Checking for cjdbc controller"
        checkproc $CONTROLLER_BIN
        rc_status -v
        ;;
    *)
        echo "Usage: $0 {start|stop|status|try-restart|restart}"
        exit 1
        ;;
esac
rc_exit

