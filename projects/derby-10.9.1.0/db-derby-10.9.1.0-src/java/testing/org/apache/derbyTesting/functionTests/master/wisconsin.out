ij> --
--   Licensed to the Apache Software Foundation (ASF) under one or more
--   contributor license agreements.  See the NOTICE file distributed with
--   this work for additional information regarding copyright ownership.
--   The ASF licenses this file to You under the Apache License, Version 2.0
--   (the "License"); you may not use this file except in compliance with
--   the License.  You may obtain a copy of the License at
--
--      http://www.apache.org/licenses/LICENSE-2.0
--
--   Unless required by applicable law or agreed to in writing, software
--   distributed under the License is distributed on an "AS IS" BASIS,
--   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
--   See the License for the specific language governing permissions and
--   limitations under the License.
--
-- This test is an adaptation of the Wisconsin benchmark, as documented in
-- The Benchmark Handbook, Second Edition (edited by Jim Gray).  The structure
-- of the tables and the data in the tables are taken from there.
--
-- The original benchmark talks about clustered and non-clustered
-- indexes - as far as I can tell, this really means indexes where the
-- row ordering is or is not the same as in the base table.  It does
-- not mean special types of indexes.  I am putting in queries that
-- use both ordered and unordered indexes, despite the fact that
-- our optimizer does not currently distinguish these cases.
--
-- Another difference is that the original Wisconsin benchmark is a performance
-- test, while this test is only intended to ensure that the optimizer comes
-- up with the right query plan.  Therefore, this test doesn't include those
-- parts of the Wisconsin benchmark where the optimizer has no choice of
-- access path (e.g. single-table query with no indexes), nor does it include
-- the projection and update queries.
--
-- This test only does the first variation of each query, since that is
-- all that is documented in The Benchmark Handbook (it wouldn't be a true
-- academic reference text if everything were spelled out).
--
-- After the original Wisconsin queries are a bunch of queries that use the
-- Wisconsin schema but that were written at Cloudscape specifically for
-- testing our optimizer.
autocommit off;
ij> set isolation serializable;
0 rows inserted/updated/deleted
ij> call SYSCS_UTIL.SYSCS_SET_RUNTIMESTATISTICS(1);
0 rows inserted/updated/deleted
ij> maximumdisplaywidth 8000;
ij> -- Wisconsin Query 3
get cursor c as
	'select * from TENKTUP1
	where unique2 between 0 and 99';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where unique2 between 0 and 99
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
			0 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
			0 
		qualifiers:
			None
ij> commit;
ij> -- Wisconsin Query 4
get cursor c as
	'select * from TENKTUP1
	where unique2 between 792 and 1791';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where unique2 between 792 and 1791
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
			0 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
			0 
		qualifiers:
			None
ij> commit;
ij> -- Wisconsin Query 5
get cursor c as
	'select * from TENKTUP1
	where unique1 between 0 and 99';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where unique1 between 0 and 99
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
			0 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
			0 
		qualifiers:
			None
ij> commit;
ij> -- Wisconsin Query 6
get cursor c as
	'select * from TENKTUP1
	where unique1 between 792 and 1791';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where unique1 between 792 and 1791
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
			0 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
			0 
		qualifiers:
			None
ij> commit;
ij> -- Wisconsin Query 7
get cursor c as
	'select *
	from TENKTUP1
	where unique2 = 2001';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select *
	from TENKTUP1
	where unique2 = 2001
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
			0 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
			0 
		qualifiers:
			None
ij> commit;
ij> -- Wisconsin Query 12
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where (TENKTUP1.unique2 = TENKTUP2.unique2)
	and (TENKTUP2.unique2 < 1000)';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where (TENKTUP1.unique2 = TENKTUP2.unique2)
	and (TENKTUP2.unique2 < 1000)
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Hash Exists Join ResultSet:
<filtered number of opens>
<filtered rows seen from the left>
<filtered rows seen from the right>
Rows filtered = 0
<filtered rows returned>
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Left result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
Right result set:
	Index Row to Base Row ResultSet for TENKTUP2:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Hash Scan ResultSet for TENKTUP2 using index TK2UNIQUE2 at serializable isolation level using share row locking: 
		<filtered number of opens>
		Hash table size = 1000
		Hash key is column number 0
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 0
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Wisconsin Query 13
get cursor c as
	'select * from TENKTUP1, BPRIME
	where (TENKTUP1.unique2 = BPRIME.UNIQUE2)';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, BPRIME
	where (TENKTUP1.unique2 = BPRIME.UNIQUE2)
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for BPRIME at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Wisconsin query 14
-- NOTE: This could benefit from transitive closure, which our optimizer
-- doesn't do (yet).
-- Note that after fix for optimizer bug 5868, in runtime statistics info, we will see 2 qualifiers for table TENKTUP2. This is because as fix for
-- bug 5868, while getting rid of a redundant predicate which is a start and/or stop AND a qualifier, we mark the predicate we are going to keep 
-- as start and/or stop AND as a qualifier. Prior to fix of bug 5868, we were disregarding the qualifier flag on the redundant predicate if it 
-- was a start and/or stop predicate too.
get cursor c as
	'select * from ONEKTUP, TENKTUP1, TENKTUP2
	where (ONEKTUP.unique2 = TENKTUP1.unique2)
	and (TENKTUP1.unique2 = TENKTUP2.unique2)
	and (TENKTUP1.unique2 < 1000)';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from ONEKTUP, TENKTUP1, TENKTUP2
	where (ONEKTUP.unique2 = TENKTUP1.unique2)
	and (TENKTUP1.unique2 = TENKTUP2.unique2)
	and (TENKTUP1.unique2 < 1000)
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Nested Loop Exists Join ResultSet:
<filtered number of opens>
<filtered rows seen from the left>
<filtered rows seen from the right>
Rows filtered = 0
<filtered rows returned>
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Left result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for ONEKTUP at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 1
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					Column[0][0] Id: 0
					Operator: <
					Ordered nulls: false
					Unknown return value: false
					Negate comparison result: false
Right result set:
	Index Row to Base Row ResultSet for TENKTUP2:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				Column[0][0] Id: 0
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
				Column[0][1] Id: 0
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Wisconsin Query 15
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where (TENKTUP1.unique1 = TENKTUP2.unique1)
	and (TENKTUP1.unique1 < 1000)';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where (TENKTUP1.unique1 = TENKTUP2.unique1)
	and (TENKTUP1.unique1 < 1000)
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Hash Exists Join ResultSet:
<filtered number of opens>
<filtered rows seen from the left>
<filtered rows seen from the right>
Rows filtered = 0
<filtered rows returned>
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Left result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
Right result set:
	Index Row to Base Row ResultSet for TENKTUP2:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Hash Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking: 
		<filtered number of opens>
		Hash table size = 1000
		Hash key is column number 0
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 0
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Wisconsin Query 16
get cursor c as
	'select * from TENKTUP1, BPRIME
	where (TENKTUP1.unique1 = BPRIME.unique1)';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, BPRIME
	where (TENKTUP1.unique1 = BPRIME.unique1)
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for BPRIME at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Wisconsin Query 17
-- NOTE: This could benefit from transitive closure, which our optimizer
-- doesn't do (yet).
-- Note that after fix for optimizer bug 5868, in runtime statistics info, we will see 2 qualifiers for table TENKTUP2. This is because as fix for
-- bug 5868, while getting rid of a redundant predicate which is a start and/or stop AND a qualifier, we mark the predicate we are going to keep 
-- as start and/or stop AND as a qualifier. Prior to fix of bug 5868, we were disregarding the qualifier flag on the redundant predicate if it 
-- was a start and/or stop predicate too.
get cursor c as
	'select * from ONEKTUP, TENKTUP1, TENKTUP2
	where (ONEKTUP.unique1 = TENKTUP1.unique1)
	and (TENKTUP1.unique1 = TENKTUP2.unique1)
	and (TENKTUP1.unique1 < 1000)';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from ONEKTUP, TENKTUP1, TENKTUP2
	where (ONEKTUP.unique1 = TENKTUP1.unique1)
	and (TENKTUP1.unique1 = TENKTUP2.unique1)
	and (TENKTUP1.unique1 < 1000)
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Nested Loop Exists Join ResultSet:
<filtered number of opens>
<filtered rows seen from the left>
<filtered rows seen from the right>
Rows filtered = 0
<filtered rows returned>
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Left result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for ONEKTUP at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 0
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					Column[0][0] Id: 0
					Operator: <
					Ordered nulls: false
					Unknown return value: false
					Negate comparison result: false
Right result set:
	Index Row to Base Row ResultSet for TENKTUP2:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				Column[0][0] Id: 0
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
				Column[0][1] Id: 0
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- This is the end of the Wisconsin queries.  Now do some queries that are
-- not part of the original Wisconsin benchmark, using the Wisconsin schema.
-- Single-table queries using index on column 'two'
-- 50% selectivity index that doesn't cover query - should do index scan
get cursor c as
	'select * from TENKTUP1
	where two = 0';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where two = 0
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1TWO at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
ij> commit;
ij> -- 50% selectivity index with 0 matching rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where two = 3';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where two = 3
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1TWO at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
ij> commit;
ij> -- matches 100% of rows - should do table scan
get cursor c as
	'select * from TENKTUP1
	where two >= 0';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where two >= 0
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched=All
	Number of columns fetched=16
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=heap
	start position:
		null
	stop position:
		null
	qualifiers:
		Column[0][0] Id: 2
		Operator: <
		Ordered nulls: false
		Unknown return value: true
		Negate comparison result: true
ij> commit;
ij> -- matches 0 rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where two > 1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where two > 1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1TWO at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			None
		qualifiers:
			None
ij> commit;
ij> -- 50% selectivity index that covers query - should do index scan
get cursor c as
	'select two from TENKTUP1
	where two = 1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	C
Statement Text: 
	select two from TENKTUP1
	where two = 1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Scan ResultSet for TENKTUP1 using index TK1TWO at serializable isolation level using share row locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched={0}
	Number of columns fetched=1
	Number of deleted rows visited=0
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=btree
	Tree height=2
	start position:
		>= on first 1 column(s).
		Ordered null semantics on the following columns: 
	stop position:
		> on first 1 column(s).
		Ordered null semantics on the following columns: 
	qualifiers:
		None
ij> commit;
ij> -- Single-table queries using index on column 'four'
-- 25% selectivity index that doesn't cover query - should do index scan
get cursor c as
	'select * from TENKTUP1
	where four = 0';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where four = 0
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1FOUR at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
ij> commit;
ij> -- 25% selectivity index with 0 matching rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where four = 4';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where four = 4
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1FOUR at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
ij> commit;
ij> -- matches 75% of rows - should do table scan
get cursor c as
	'select * from TENKTUP1
	where four >= 1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where four >= 1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched=All
	Number of columns fetched=16
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=heap
	start position:
		null
	stop position:
		null
	qualifiers:
		Column[0][0] Id: 3
		Operator: <
		Ordered nulls: false
		Unknown return value: true
		Negate comparison result: true
ij> commit;
ij> -- matches 0 rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where four > 3';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where four > 3
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1FOUR at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			None
		qualifiers:
			None
ij> commit;
ij> -- 25% selectivity index that covers query - should do index scan
get cursor c as
	'select four from TENKTUP1
	where four = 2';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	C
Statement Text: 
	select four from TENKTUP1
	where four = 2
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Scan ResultSet for TENKTUP1 using index TK1FOUR at serializable isolation level using share row locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched={0}
	Number of columns fetched=1
	Number of deleted rows visited=0
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=btree
	Tree height=2
	start position:
		>= on first 1 column(s).
		Ordered null semantics on the following columns: 
	stop position:
		> on first 1 column(s).
		Ordered null semantics on the following columns: 
	qualifiers:
		None
ij> commit;
ij> -- Single-table queries using index on column 'twentyPercent'
-- 20% selectivity index that doesn't cover query - should use index
get cursor c as
	'select * from TENKTUP1
	where twentyPercent = 2';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where twentyPercent = 2
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1TWENTYPERCENT at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
ij> commit;
ij> -- 20% selectivity index with 0 matching rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where twentyPercent = 5';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where twentyPercent = 5
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1TWENTYPERCENT at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
ij> commit;
ij> -- matches 60% of rows - should do table scan
get cursor c as
	'select * from TENKTUP1
	where twentyPercent > 1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where twentyPercent > 1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched=All
	Number of columns fetched=16
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=heap
	start position:
		null
	stop position:
		null
	qualifiers:
		Column[0][0] Id: 8
		Operator: <=
		Ordered nulls: false
		Unknown return value: true
		Negate comparison result: true
ij> commit;
ij> -- matches 0 rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where twentyPercent > 4';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where twentyPercent > 4
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1TWENTYPERCENT at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			None
		qualifiers:
			None
ij> commit;
ij> -- 20% selectivity index that covers query - should do index scan
get cursor c as
	'select twentyPercent from TENKTUP1
	where twentyPercent = 3';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select twentyPercent from TENKTUP1
	where twentyPercent = 3
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Scan ResultSet for TENKTUP1 using index TK1TWENTYPERCENT at serializable isolation level using share row locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched={0}
	Number of columns fetched=1
	Number of deleted rows visited=0
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=btree
	Tree height=2
	start position:
		>= on first 1 column(s).
		Ordered null semantics on the following columns: 
	stop position:
		> on first 1 column(s).
		Ordered null semantics on the following columns: 
	qualifiers:
		None
ij> commit;
ij> -- Single-table queries using index on column 'ten'
-- 10% selectivity index that doesn't cover query - should use index
get cursor c as
	'select * from TENKTUP1
	where ten = 5';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where ten = 5
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1TEN at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
ij> commit;
ij> -- 10% selectivity index with 0 matching rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where ten = 10';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where ten = 10
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1TEN at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
ij> commit;
ij> -- matches 50% of rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where ten <= 4';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where ten <= 4
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1TEN at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			None
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
ij> commit;
ij> -- matches 60% of rows - should do table scan
get cursor c as
	'select * from TENKTUP1
	where ten <= 5';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where ten <= 5
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched=All
	Number of columns fetched=16
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=heap
	start position:
		null
	stop position:
		null
	qualifiers:
		Column[0][0] Id: 4
		Operator: <=
		Ordered nulls: false
		Unknown return value: false
		Negate comparison result: false
ij> commit;
ij> -- matches 0 rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where ten > 100';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where ten > 100
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1TEN at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			None
		qualifiers:
			None
ij> commit;
ij> -- 10% selectivity index that covers query - should do index scan
get cursor c as
	'select ten from TENKTUP1
	where ten = 7';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select ten from TENKTUP1
	where ten = 7
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Scan ResultSet for TENKTUP1 using index TK1TEN at serializable isolation level using share row locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched={0}
	Number of columns fetched=1
	Number of deleted rows visited=0
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=btree
	Tree height=2
	start position:
		>= on first 1 column(s).
		Ordered null semantics on the following columns: 
	stop position:
		> on first 1 column(s).
		Ordered null semantics on the following columns: 
	qualifiers:
		None
ij> commit;
ij> -- Single-table queries using index on column 'twenty'
-- 5% selectivity index that doesn't cover query - should use index
get cursor c as
	'select * from TENKTUP1
	where twenty = 17';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where twenty = 17
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1TWENTY at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
ij> commit;
ij> -- 5% selectivity index with 0 matching rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where twenty = 20';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where twenty = 20
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1TWENTY at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
ij> commit;
ij> -- matches 50% of rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where twenty <= 9';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where twenty <= 9
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1TWENTY at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			None
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
ij> commit;
ij> -- matches 55% of rows - should do table scan
get cursor c as
	'select * from TENKTUP1
	where twenty <= 10';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where twenty <= 10
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched=All
	Number of columns fetched=16
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=heap
	start position:
		null
	stop position:
		null
	qualifiers:
		Column[0][0] Id: 5
		Operator: <=
		Ordered nulls: false
		Unknown return value: false
		Negate comparison result: false
ij> commit;
ij> -- matches 0 rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where twenty < 0';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where twenty < 0
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1TWENTY at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			None
		stop position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
ij> commit;
ij> -- 5% selectivity index that covers query - should do index scan
get cursor c as
	'select twenty from TENKTUP1
	where twenty = 19';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select twenty from TENKTUP1
	where twenty = 19
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Scan ResultSet for TENKTUP1 using index TK1TWENTY at serializable isolation level using share row locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched={0}
	Number of columns fetched=1
	Number of deleted rows visited=0
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=btree
	Tree height=2
	start position:
		>= on first 1 column(s).
		Ordered null semantics on the following columns: 
	stop position:
		> on first 1 column(s).
		Ordered null semantics on the following columns: 
	qualifiers:
		None
ij> commit;
ij> -- Single-table queries using index on column 'onePercent'
-- 1% selectivity index that doesn't cover query - should use index
get cursor c as
	'select * from TENKTUP1
	where onePercent = 63';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where onePercent = 63
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1ONEPERCENT at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
ij> commit;
ij> -- 1% selectivity index with 0 matching rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where onePercent = 100';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where onePercent = 100
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1ONEPERCENT at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
ij> commit;
ij> -- matches 50% of rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where onePercent > 49';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where onePercent > 49
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched=All
	Number of columns fetched=16
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=heap
	start position:
		null
	stop position:
		null
	qualifiers:
		Column[0][0] Id: 6
		Operator: <=
		Ordered nulls: false
		Unknown return value: true
		Negate comparison result: true
ij> commit;
ij> -- matches 60% of rows - should do table scan
get cursor c as
	'select * from TENKTUP1
	where onePercent > 40';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where onePercent > 40
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched=All
	Number of columns fetched=16
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=heap
	start position:
		null
	stop position:
		null
	qualifiers:
		Column[0][0] Id: 6
		Operator: <=
		Ordered nulls: false
		Unknown return value: true
		Negate comparison result: true
ij> commit;
ij> -- matches 0 rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where onePercent > 101';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where onePercent > 101
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1ONEPERCENT at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			None
		qualifiers:
			None
ij> commit;
ij> -- 1% selectivity index that covers query - should do index scan
get cursor c as
	'select onePercent from TENKTUP1
	where onePercent = 0';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select onePercent from TENKTUP1
	where onePercent = 0
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Scan ResultSet for TENKTUP1 using index TK1ONEPERCENT at serializable isolation level using share row locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched={0}
	Number of columns fetched=1
	Number of deleted rows visited=0
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=btree
	Tree height=2
	start position:
		>= on first 1 column(s).
		Ordered null semantics on the following columns: 
	stop position:
		> on first 1 column(s).
		Ordered null semantics on the following columns: 
	qualifiers:
		None
ij> commit;
ij> -- Single-table queries using index on column 'evenOnePercent'
-- 1% selectivity index that doesn't cover query - should use index
get cursor c as
	'select * from TENKTUP1
	where evenOnePercent = 64';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where evenOnePercent = 64
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1EVENONEPERCENT at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
ij> commit;
ij> -- 1% selectivity index with 0 matching rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where evenOnePercent = 200';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where evenOnePercent = 200
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1EVENONEPERCENT at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
ij> commit;
ij> -- matches 50% of rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where evenOnePercent > 99';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where evenOnePercent > 99
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched=All
	Number of columns fetched=16
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=heap
	start position:
		null
	stop position:
		null
	qualifiers:
		Column[0][0] Id: 11
		Operator: <=
		Ordered nulls: false
		Unknown return value: true
		Negate comparison result: true
ij> commit;
ij> -- matches 60% of rows - should do table scan
get cursor c as
	'select * from TENKTUP1
	where evenOnePercent > 80';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where evenOnePercent > 80
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched=All
	Number of columns fetched=16
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=heap
	start position:
		null
	stop position:
		null
	qualifiers:
		Column[0][0] Id: 11
		Operator: <=
		Ordered nulls: false
		Unknown return value: true
		Negate comparison result: true
ij> commit;
ij> -- matches 0 rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where evenOnePercent > 198';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where evenOnePercent > 198
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1EVENONEPERCENT at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			None
		qualifiers:
			None
ij> commit;
ij> -- 1% selectivity index that covers query - should do index scan
get cursor c as
	'select evenOnePercent from TENKTUP1
	where evenOnePercent = 0';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select evenOnePercent from TENKTUP1
	where evenOnePercent = 0
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Scan ResultSet for TENKTUP1 using index TK1EVENONEPERCENT at serializable isolation level using share row locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched={0}
	Number of columns fetched=1
	Number of deleted rows visited=0
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=btree
	Tree height=2
	start position:
		>= on first 1 column(s).
		Ordered null semantics on the following columns: 
	stop position:
		> on first 1 column(s).
		Ordered null semantics on the following columns: 
	qualifiers:
		None
ij> commit;
ij> -- Single-table queries using index on column 'oddOnePercent'
-- 1% selectivity index that doesn't cover query - should use index
get cursor c as
	'select * from TENKTUP1
	where oddOnePercent = 63';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where oddOnePercent = 63
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1ODDONEPERCENT at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
ij> commit;
ij> -- 1% selectivity index with 0 matching rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where oddOnePercent = 100';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where oddOnePercent = 100
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1ODDONEPERCENT at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
ij> commit;
ij> -- matches 40% of rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where oddOnePercent > 120';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where oddOnePercent > 120
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1ODDONEPERCENT at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			None
		qualifiers:
			None
ij> commit;
ij> -- matches 60% of rows - should do table scan
get cursor c as
	'select * from TENKTUP1
	where oddOnePercent > 80';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where oddOnePercent > 80
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched=All
	Number of columns fetched=16
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=heap
	start position:
		null
	stop position:
		null
	qualifiers:
		Column[0][0] Id: 12
		Operator: <=
		Ordered nulls: false
		Unknown return value: true
		Negate comparison result: true
ij> commit;
ij> -- matches 0 rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where oddOnePercent > 199';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where oddOnePercent > 199
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1ODDONEPERCENT at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			None
		qualifiers:
			None
ij> commit;
ij> -- 1% selectivity index that covers query - should do index scan
get cursor c as
	'select oddOnePercent from TENKTUP1
	where oddOnePercent = 1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select oddOnePercent from TENKTUP1
	where oddOnePercent = 1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Scan ResultSet for TENKTUP1 using index TK1ODDONEPERCENT at serializable isolation level using share row locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched={0}
	Number of columns fetched=1
	Number of deleted rows visited=0
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=btree
	Tree height=2
	start position:
		>= on first 1 column(s).
		Ordered null semantics on the following columns: 
	stop position:
		> on first 1 column(s).
		Ordered null semantics on the following columns: 
	qualifiers:
		None
ij> commit;
ij> -- Single-table queries using index on column 'stringu1'
-- unique index that doesn't cover query - should use index
get cursor c as
	'select * from TENKTUP1
	where stringu1 = ''AAAAJKLxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx''';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where stringu1 = 'AAAAJKLxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1STRINGU1 at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=3
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
			0 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
			0 
		qualifiers:
			None
ij> commit;
ij> -- unique index with 0 matching rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where stringu1 = ''AAAAZZZxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx''';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where stringu1 = 'AAAAZZZxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1STRINGU1 at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=3
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
			0 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
			0 
		qualifiers:
			None
ij> commit;
ij> -- matches 50% of rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where stringu1 > ''AAAAHKHxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx''';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where stringu1 > 'AAAAHKHxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched=All
	Number of columns fetched=16
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=heap
	start position:
		null
	stop position:
		null
	qualifiers:
		Column[0][0] Id: 13
		Operator: <=
		Ordered nulls: false
		Unknown return value: true
		Negate comparison result: true
ij> commit;
ij> -- matches 51% of rows - should do table scan
get cursor c as
	'select * from TENKTUP1
	where stringu1 > ''AAAAHOCxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx''';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where stringu1 > 'AAAAHOCxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched=All
	Number of columns fetched=16
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=heap
	start position:
		null
	stop position:
		null
	qualifiers:
		Column[0][0] Id: 13
		Operator: <=
		Ordered nulls: false
		Unknown return value: true
		Negate comparison result: true
ij> commit;
ij> -- matches 0 rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where stringu1 > ''AAAAOUPxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx''';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where stringu1 > 'AAAAOUPxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1STRINGU1 at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=3
		start position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
			0 
		stop position:
			None
		qualifiers:
			None
ij> commit;
ij> -- unique index that covers query - should do index scan
get cursor c as
	'select stringu1 from TENKTUP1
	where stringu1 = ''AAAAAABxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx''';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select stringu1 from TENKTUP1
	where stringu1 = 'AAAAAABxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Scan ResultSet for TENKTUP1 using index TK1STRINGU1 at serializable isolation level using share row locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 1
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched={0}
	Number of columns fetched=1
	Number of deleted rows visited=0
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=btree
	Tree height=3
	start position:
		>= on first 1 column(s).
		Ordered null semantics on the following columns: 
		0 
	stop position:
		> on first 1 column(s).
		Ordered null semantics on the following columns: 
		0 
	qualifiers:
		None
ij> commit;
ij> -- Single-table queries using index on column 'stringu2'
-- unique index that doesn't cover query - should use index
get cursor c as
	'select * from TENKTUP1
	where stringu2 = ''AAAAJKLxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx''';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where stringu2 = 'AAAAJKLxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1STRINGU2 at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=3
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
			0 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
			0 
		qualifiers:
			None
ij> commit;
ij> -- unique index with 0 matching rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where stringu2 = ''AAAAZZZxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx''';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where stringu2 = 'AAAAZZZxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1STRINGU2 at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=3
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
			0 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
			0 
		qualifiers:
			None
ij> commit;
ij> -- matches 50% of rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where stringu2 > ''AAAAHKHxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx''';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where stringu2 > 'AAAAHKHxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched=All
	Number of columns fetched=16
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=heap
	start position:
		null
	stop position:
		null
	qualifiers:
		Column[0][0] Id: 14
		Operator: <=
		Ordered nulls: false
		Unknown return value: true
		Negate comparison result: true
ij> commit;
ij> -- matches 51% of rows - should do table scan
get cursor c as
	'select * from TENKTUP1
	where stringu2 > ''AAAAHOCxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx''';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where stringu2 > 'AAAAHOCxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched=All
	Number of columns fetched=16
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=heap
	start position:
		null
	stop position:
		null
	qualifiers:
		Column[0][0] Id: 14
		Operator: <=
		Ordered nulls: false
		Unknown return value: true
		Negate comparison result: true
ij> commit;
ij> -- matches 0 rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where stringu2 > ''AAAAOUPxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx''';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where stringu2 > 'AAAAOUPxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1STRINGU2 at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=3
		start position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
			0 
		stop position:
			None
		qualifiers:
			None
ij> commit;
ij> -- unique index that covers query - should do index scan
get cursor c as
	'select stringu2 from TENKTUP1
	where stringu2 = ''AAAAAABxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx''';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select stringu2 from TENKTUP1
	where stringu2 = 'AAAAAABxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Scan ResultSet for TENKTUP1 using index TK1STRINGU2 at serializable isolation level using share row locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 1
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched={0}
	Number of columns fetched=1
	Number of deleted rows visited=0
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=btree
	Tree height=3
	start position:
		>= on first 1 column(s).
		Ordered null semantics on the following columns: 
		0 
	stop position:
		> on first 1 column(s).
		Ordered null semantics on the following columns: 
		0 
	qualifiers:
		None
ij> commit;
ij> -- Single-table queries using index on column 'string4'
-- 25% selectivity index that doesn't cover query - should do index scan
get cursor c as
	'select * from TENKTUP1
	where string4 = ''AAAAxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx''';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where string4 = 'AAAAxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1STRING4 at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=3
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
ij> commit;
ij> -- 25% selectivity index with 0 matching rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where string4 = ''EEEExxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx''';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where string4 = 'EEEExxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1STRING4 at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=3
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		qualifiers:
			None
ij> commit;
ij> -- matches 50% of rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where string4 > ''HHHHxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx''';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where string4 > 'HHHHxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched=All
	Number of columns fetched=16
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=heap
	start position:
		null
	stop position:
		null
	qualifiers:
		Column[0][0] Id: 15
		Operator: <=
		Ordered nulls: false
		Unknown return value: true
		Negate comparison result: true
ij> commit;
ij> -- matches 0 rows - should do index scan
get cursor c as
	'select * from TENKTUP1
	where string4 > ''VVVVxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx''';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
	where string4 > 'VVVVxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1STRING4 at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=3
		start position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
		stop position:
			None
		qualifiers:
			None
ij> commit;
ij> -- 25% selectivity index that covers query - should do index scan
get cursor c as
	'select string4 from TENKTUP1
	where string4 = ''OOOOxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx''';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select string4 from TENKTUP1
	where string4 = 'OOOOxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Scan ResultSet for TENKTUP1 using index TK1STRING4 at serializable isolation level using share row locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched={0}
	Number of columns fetched=1
	Number of deleted rows visited=0
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=btree
	Tree height=3
	start position:
		>= on first 1 column(s).
		Ordered null semantics on the following columns: 
	stop position:
		> on first 1 column(s).
		Ordered null semantics on the following columns: 
	qualifiers:
		None
ij> commit;
ij> -- Now test equijoins with different selectivities and different numbers
-- of outer rows.  The approach taken is that different join columns are
-- used, and that TENKTUP1 has indexes on all the joining columns, while
-- TENKTUP2 does not.  We use the unique1 column of TENKTUP2 to select
-- different numbers of rows.  The two tables will always appear in the
-- FROM clause with TENKTUP1 first, and TENKTUP2 second - it is up to
-- the optimizer to figure out which should come first in the join order.
-- Joins on unique1
-- Join on unique1, all rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.unique1 = TENKTUP2.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.unique1 = TENKTUP2.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Nested Loop Exists Join ResultSet:
<filtered number of opens>
<filtered rows seen from the left>
<filtered rows seen from the right>
Rows filtered = 0
<filtered rows returned>
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Left result set:
	Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=16
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=heap
		start position:
			null
		stop position:
			null
		qualifiers:
			None
Right result set:
	Index Row to Base Row ResultSet for TENKTUP2:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
ij> commit;
ij> -- Join on unique1, 60% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.unique1 = TENKTUP2.unique1
	and TENKTUP2.unique1 < 6000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.unique1 = TENKTUP2.unique1
	and TENKTUP2.unique1 < 6000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Nested Loop Exists Join ResultSet:
<filtered number of opens>
<filtered rows seen from the left>
<filtered rows seen from the right>
Rows filtered = 0
<filtered rows returned>
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Left result set:
	Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=16
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=heap
		start position:
			null
		stop position:
			null
		qualifiers:
			Column[0][0] Id: 0
			Operator: <
			Ordered nulls: false
			Unknown return value: false
			Negate comparison result: false
Right result set:
	Index Row to Base Row ResultSet for TENKTUP2:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				Column[0][0] Id: 0
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on unique1, 25% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.unique1 = TENKTUP2.unique1
	and TENKTUP2.unique1 < 2500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.unique1 = TENKTUP2.unique1
	and TENKTUP2.unique1 < 2500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Hash Exists Join ResultSet:
<filtered number of opens>
<filtered rows seen from the left>
<filtered rows seen from the right>
Rows filtered = 0
<filtered rows returned>
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Left result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
Right result set:
	Index Row to Base Row ResultSet for TENKTUP2:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Hash Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking: 
		<filtered number of opens>
		Hash table size = 2500
		Hash key is column number 0
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 0
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on unique1, 10% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.unique1 = TENKTUP2.unique1
	and TENKTUP2.unique1 < 1000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.unique1 = TENKTUP2.unique1
	and TENKTUP2.unique1 < 1000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Hash Exists Join ResultSet:
<filtered number of opens>
<filtered rows seen from the left>
<filtered rows seen from the right>
Rows filtered = 0
<filtered rows returned>
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Left result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
Right result set:
	Index Row to Base Row ResultSet for TENKTUP2:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Hash Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking: 
		<filtered number of opens>
		Hash table size = 1000
		Hash key is column number 0
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 0
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on unique1, 5% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.unique1 = TENKTUP2.unique1
	and TENKTUP2.unique1 < 500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.unique1 = TENKTUP2.unique1
	and TENKTUP2.unique1 < 500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Hash Exists Join ResultSet:
<filtered number of opens>
<filtered rows seen from the left>
<filtered rows seen from the right>
Rows filtered = 0
<filtered rows returned>
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Left result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
Right result set:
	Index Row to Base Row ResultSet for TENKTUP2:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Hash Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking: 
		<filtered number of opens>
		Hash table size = 500
		Hash key is column number 0
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 0
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on unique1, 1% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.unique1 = TENKTUP2.unique1
	and TENKTUP2.unique1 < 100';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.unique1 = TENKTUP2.unique1
	and TENKTUP2.unique1 < 100
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Hash Exists Join ResultSet:
<filtered number of opens>
<filtered rows seen from the left>
<filtered rows seen from the right>
Rows filtered = 0
<filtered rows returned>
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Left result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
Right result set:
	Index Row to Base Row ResultSet for TENKTUP2:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Hash Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking: 
		<filtered number of opens>
		Hash table size = 100
		Hash key is column number 0
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 0
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on unique1, 1 row in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.unique1 = TENKTUP2.unique1
	and TENKTUP2.unique1 = 0';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.unique1 = TENKTUP2.unique1
	and TENKTUP2.unique1 = 0
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Nested Loop Exists Join ResultSet:
<filtered number of opens>
<filtered rows seen from the left>
<filtered rows seen from the right>
Rows filtered = 0
<filtered rows returned>
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Left result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
Right result set:
	Index Row to Base Row ResultSet for TENKTUP2:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
ij> commit;
ij> -- Joins on two
-- Join on two, all rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Nested Loop Join ResultSet:
<filtered number of opens>
<filtered rows seen from the left>
<filtered rows seen from the right>
Rows filtered = 0
<filtered rows returned>
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Left result set:
	Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=16
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=heap
		start position:
			null
		stop position:
			null
		qualifiers:
			None
Right result set:
	Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=16
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=heap
		start position:
			null
		stop position:
			null
		qualifiers:
			Column[0][0] Id: 2
			Operator: =
			Ordered nulls: false
			Unknown return value: false
			Negate comparison result: false
ij> commit;
ij> -- Join on two, 60% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 6000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 6000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (4):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 0
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
	Right result set:
		Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 2
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on two, 25% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 2500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 2500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 2
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on two, 10% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 1000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 1000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 2
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on two, 5% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 2
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on two, 1% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 100';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 100
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 2
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on two, 1 row in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 = 0';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 = 0
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 2
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Joins on four
-- Join on four, all rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.four = TENKTUP2.four';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.four = TENKTUP2.four
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1FOUR at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on four, 60% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.four = TENKTUP2.four
	and TENKTUP2.unique1 < 6000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.four = TENKTUP2.four
	and TENKTUP2.unique1 < 6000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 0
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1FOUR at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on four, 25% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.four = TENKTUP2.four
	and TENKTUP2.unique1 < 2500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.four = TENKTUP2.four
	and TENKTUP2.unique1 < 2500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1FOUR at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on four, 10% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.four = TENKTUP2.four
	and TENKTUP2.unique1 < 1000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.four = TENKTUP2.four
	and TENKTUP2.unique1 < 1000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1FOUR at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on four, 5% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.four = TENKTUP2.four
	and TENKTUP2.unique1 < 500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.four = TENKTUP2.four
	and TENKTUP2.unique1 < 500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1FOUR at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on four, 1% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.four = TENKTUP2.four
	and TENKTUP2.unique1 < 100';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.four = TENKTUP2.four
	and TENKTUP2.unique1 < 100
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1FOUR at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on four, 1 row in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.four = TENKTUP2.four
	and TENKTUP2.unique1 = 0';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.four = TENKTUP2.four
	and TENKTUP2.unique1 = 0
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1FOUR at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Joins on ten
-- Join on ten, all rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.ten = TENKTUP2.ten';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.ten = TENKTUP2.ten
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1TEN at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on ten, 60% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.ten = TENKTUP2.ten
	and TENKTUP2.unique1 < 6000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.ten = TENKTUP2.ten
	and TENKTUP2.unique1 < 6000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 0
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1TEN at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on ten, 25% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.ten = TENKTUP2.ten
	and TENKTUP2.unique1 < 2500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.ten = TENKTUP2.ten
	and TENKTUP2.unique1 < 2500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1TEN at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on ten, 10% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.ten = TENKTUP2.ten
	and TENKTUP2.unique1 < 1000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.ten = TENKTUP2.ten
	and TENKTUP2.unique1 < 1000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1TEN at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on ten, 5% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.ten = TENKTUP2.ten
	and TENKTUP2.unique1 < 500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.ten = TENKTUP2.ten
	and TENKTUP2.unique1 < 500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1TEN at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on ten, 1% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.ten = TENKTUP2.ten
	and TENKTUP2.unique1 < 100';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.ten = TENKTUP2.ten
	and TENKTUP2.unique1 < 100
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1TEN at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on ten, 1 row in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.ten = TENKTUP2.ten
	and TENKTUP2.unique1 = 0';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.ten = TENKTUP2.ten
	and TENKTUP2.unique1 = 0
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1TEN at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Joins on twenty
-- Join on twenty, all rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.twenty = TENKTUP2.twenty';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.twenty = TENKTUP2.twenty
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1TWENTY at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on twenty, 60% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.twenty = TENKTUP2.twenty
	and TENKTUP2.unique1 < 6000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.twenty = TENKTUP2.twenty
	and TENKTUP2.unique1 < 6000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 0
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1TWENTY at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on twenty, 25% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.twenty = TENKTUP2.twenty
	and TENKTUP2.unique1 < 2500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.twenty = TENKTUP2.twenty
	and TENKTUP2.unique1 < 2500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1TWENTY at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on twenty, 10% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.twenty = TENKTUP2.twenty
	and TENKTUP2.unique1 < 1000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.twenty = TENKTUP2.twenty
	and TENKTUP2.unique1 < 1000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1TWENTY at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on twenty, 5% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.twenty = TENKTUP2.twenty
	and TENKTUP2.unique1 < 500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.twenty = TENKTUP2.twenty
	and TENKTUP2.unique1 < 500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1TWENTY at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on twenty, 1% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.twenty = TENKTUP2.twenty
	and TENKTUP2.unique1 < 100';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.twenty = TENKTUP2.twenty
	and TENKTUP2.unique1 < 100
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1TWENTY at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on twenty, 1 row in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.twenty = TENKTUP2.twenty
	and TENKTUP2.unique1 = 0';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.twenty = TENKTUP2.twenty
	and TENKTUP2.unique1 = 0
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1TWENTY at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Joins on onePercent
-- Join on onePercent, all rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1ONEPERCENT at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on onePercent, 60% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 6000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 6000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 0
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1ONEPERCENT at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on onePercent, 25% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 2500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 2500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1ONEPERCENT at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on onePercent, 10% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 1000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 1000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1ONEPERCENT at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on onePercent, 5% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1ONEPERCENT at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on onePercent, 1% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 100';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 100
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1ONEPERCENT at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on onePercent, 1 row in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 = 0';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 = 0
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1ONEPERCENT at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Joins on twentyPercent
-- Join on twentyPercent, all rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.twentyPercent = TENKTUP2.twentyPercent';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.twentyPercent = TENKTUP2.twentyPercent
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1TWENTYPERCENT at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on twentyPercent, 60% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.twentyPercent = TENKTUP2.twentyPercent
	and TENKTUP2.unique1 < 6000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.twentyPercent = TENKTUP2.twentyPercent
	and TENKTUP2.unique1 < 6000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 0
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1TWENTYPERCENT at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on twentyPercent, 25% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.twentyPercent = TENKTUP2.twentyPercent
	and TENKTUP2.unique1 < 2500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.twentyPercent = TENKTUP2.twentyPercent
	and TENKTUP2.unique1 < 2500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1TWENTYPERCENT at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on twentyPercent, 10% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.twentyPercent = TENKTUP2.twentyPercent
	and TENKTUP2.unique1 < 1000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.twentyPercent = TENKTUP2.twentyPercent
	and TENKTUP2.unique1 < 1000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1TWENTYPERCENT at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on twentyPercent, 5% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.twentyPercent = TENKTUP2.twentyPercent
	and TENKTUP2.unique1 < 500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.twentyPercent = TENKTUP2.twentyPercent
	and TENKTUP2.unique1 < 500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1TWENTYPERCENT at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on twentyPercent, 1% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.twentyPercent = TENKTUP2.twentyPercent
	and TENKTUP2.unique1 < 100';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.twentyPercent = TENKTUP2.twentyPercent
	and TENKTUP2.unique1 < 100
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1TWENTYPERCENT at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on twentyPercent, 1 row in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.twentyPercent = TENKTUP2.twentyPercent
	and TENKTUP2.unique1 = 0';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.twentyPercent = TENKTUP2.twentyPercent
	and TENKTUP2.unique1 = 0
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1TWENTYPERCENT at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Joins on stringu1
-- Join on stringu1, all rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.stringu1 = TENKTUP2.stringu1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.stringu1 = TENKTUP2.stringu1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1STRINGU1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=3
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on stringu1, 60% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.stringu1 = TENKTUP2.stringu1
	and TENKTUP2.unique1 < 6000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.stringu1 = TENKTUP2.stringu1
	and TENKTUP2.unique1 < 6000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 0
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1STRINGU1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=3
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on stringu1, 25% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.stringu1 = TENKTUP2.stringu1
	and TENKTUP2.unique1 < 2500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.stringu1 = TENKTUP2.stringu1
	and TENKTUP2.unique1 < 2500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1STRINGU1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=3
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on stringu1, 10% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.stringu1 = TENKTUP2.stringu1
	and TENKTUP2.unique1 < 1000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.stringu1 = TENKTUP2.stringu1
	and TENKTUP2.unique1 < 1000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1STRINGU1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=3
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on stringu1, 5% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.stringu1 = TENKTUP2.stringu1
	and TENKTUP2.unique1 < 500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.stringu1 = TENKTUP2.stringu1
	and TENKTUP2.unique1 < 500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1STRINGU1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=3
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on stringu1, 1% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.stringu1 = TENKTUP2.stringu1
	and TENKTUP2.unique1 < 100';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.stringu1 = TENKTUP2.stringu1
	and TENKTUP2.unique1 < 100
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1STRINGU1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=3
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on stringu1, 1 row in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.stringu1 = TENKTUP2.stringu1
	and TENKTUP2.unique1 = 0';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.stringu1 = TENKTUP2.stringu1
	and TENKTUP2.unique1 = 0
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1STRINGU1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=3
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Joins on string4
-- Join on string4, all rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.string4 = TENKTUP2.string4';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.string4 = TENKTUP2.string4
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1STRING4 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=3
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on string4, 60% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.string4 = TENKTUP2.string4
	and TENKTUP2.unique1 < 6000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.string4 = TENKTUP2.string4
	and TENKTUP2.unique1 < 6000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 0
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1STRING4 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=3
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on string4, 25% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.string4 = TENKTUP2.string4
	and TENKTUP2.unique1 < 2500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.string4 = TENKTUP2.string4
	and TENKTUP2.unique1 < 2500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1STRING4 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=3
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on string4, 10% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.string4 = TENKTUP2.string4
	and TENKTUP2.unique1 < 1000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.string4 = TENKTUP2.string4
	and TENKTUP2.unique1 < 1000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1STRING4 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=3
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on string4, 5% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.string4 = TENKTUP2.string4
	and TENKTUP2.unique1 < 500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.string4 = TENKTUP2.string4
	and TENKTUP2.unique1 < 500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1STRING4 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=3
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on string4, 1% of rows in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.string4 = TENKTUP2.string4
	and TENKTUP2.unique1 < 100';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.string4 = TENKTUP2.string4
	and TENKTUP2.unique1 < 100
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1STRING4 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=3
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on string4, 1 row in TENKTUP2
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	where TENKTUP1.string4 = TENKTUP2.string4
	and TENKTUP2.unique1 = 0';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	where TENKTUP1.string4 = TENKTUP2.string4
	and TENKTUP2.unique1 = 0
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1STRING4 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=3
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Now do the same equijoin tests, but select only one column from TENKTUP1.
-- This way, it can choose hash join where appropriate (it avoids it where
-- it thinks the hash table will take too much memory).
-- Joins on unique1
-- Join on unique1, all rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.unique1 = TENKTUP2.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.unique1 = TENKTUP2.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (4):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 10000
		Hash key is column number 0
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={0, 1}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 0
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on unique1, 60% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.unique1 = TENKTUP2.unique1
	and TENKTUP2.unique1 < 6000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.unique1 = TENKTUP2.unique1
	and TENKTUP2.unique1 < 6000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (4):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 0
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 6000
		Hash key is column number 0
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={0, 1}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				Column[0][0] Id: 0
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
			next qualifiers:
				Column[0][0] Id: 0
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on unique1, 25% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.unique1 = TENKTUP2.unique1
	and TENKTUP2.unique1 < 2500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.unique1 = TENKTUP2.unique1
	and TENKTUP2.unique1 < 2500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Hash Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking: 
			<filtered number of opens>
			Hash table size = 2500
			Hash key is column number 0
			<filtered rows seen>
			Rows filtered = 0
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information: 
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				scan qualifiers:
					None
				next qualifiers:
					Column[0][0] Id: 0
					Operator: =
					Ordered nulls: false
					Unknown return value: false
					Negate comparison result: false
ij> commit;
ij> -- Join on unique1, 10% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.unique1 = TENKTUP2.unique1
	and TENKTUP2.unique1 < 1000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.unique1 = TENKTUP2.unique1
	and TENKTUP2.unique1 < 1000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Hash Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking: 
			<filtered number of opens>
			Hash table size = 1000
			Hash key is column number 0
			<filtered rows seen>
			Rows filtered = 0
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information: 
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				scan qualifiers:
					None
				next qualifiers:
					Column[0][0] Id: 0
					Operator: =
					Ordered nulls: false
					Unknown return value: false
					Negate comparison result: false
ij> commit;
ij> -- Join on unique1, 5% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.unique1 = TENKTUP2.unique1
	and TENKTUP2.unique1 < 500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.unique1 = TENKTUP2.unique1
	and TENKTUP2.unique1 < 500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Hash Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking: 
			<filtered number of opens>
			Hash table size = 500
			Hash key is column number 0
			<filtered rows seen>
			Rows filtered = 0
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information: 
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				scan qualifiers:
					None
				next qualifiers:
					Column[0][0] Id: 0
					Operator: =
					Ordered nulls: false
					Unknown return value: false
					Negate comparison result: false
ij> commit;
ij> -- Join on unique1, 1% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.unique1 = TENKTUP2.unique1
	and TENKTUP2.unique1 < 100';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.unique1 = TENKTUP2.unique1
	and TENKTUP2.unique1 < 100
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Hash Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking: 
			<filtered number of opens>
			Hash table size = 100
			Hash key is column number 0
			<filtered rows seen>
			Rows filtered = 0
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information: 
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				scan qualifiers:
					None
				next qualifiers:
					Column[0][0] Id: 0
					Operator: =
					Ordered nulls: false
					Unknown return value: false
					Negate comparison result: false
ij> commit;
ij> -- Join on unique1, 1 row in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.unique1 = TENKTUP2.unique1
	and TENKTUP2.unique1 = 0';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.unique1 = TENKTUP2.unique1
	and TENKTUP2.unique1 = 0
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
ij> commit;
ij> -- Joins on two
-- Join on two, all rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (4):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 2
		Hash key is column number 2
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 2}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 2
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on two, 60% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 6000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 6000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (4):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 0
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 2
		Hash key is column number 2
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 2}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 2
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on two, 25% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 2500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 2500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 2
		Hash key is column number 2
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 2}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 2
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on two, 10% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 1000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 1000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 2
		Hash key is column number 2
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 2}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 2
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on two, 5% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 2
		Hash key is column number 2
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 2}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 2
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on two, 1% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 100';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 100
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 2
		Hash key is column number 2
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 2}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 2
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on two, 1 row in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 = 0';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 = 0
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched={1, 2}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 2
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Joins on four
-- Join on four, all rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.four = TENKTUP2.four';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.four = TENKTUP2.four
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (4):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 4
		Hash key is column number 3
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 3}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 3
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on four, 60% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.four = TENKTUP2.four
	and TENKTUP2.unique1 < 6000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.four = TENKTUP2.four
	and TENKTUP2.unique1 < 6000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (4):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 0
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 4
		Hash key is column number 3
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 3}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 3
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on four, 25% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.four = TENKTUP2.four
	and TENKTUP2.unique1 < 2500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.four = TENKTUP2.four
	and TENKTUP2.unique1 < 2500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 4
		Hash key is column number 3
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 3}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 3
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on four, 10% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.four = TENKTUP2.four
	and TENKTUP2.unique1 < 1000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.four = TENKTUP2.four
	and TENKTUP2.unique1 < 1000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 4
		Hash key is column number 3
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 3}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 3
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on four, 5% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.four = TENKTUP2.four
	and TENKTUP2.unique1 < 500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.four = TENKTUP2.four
	and TENKTUP2.unique1 < 500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 4
		Hash key is column number 3
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 3}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 3
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on four, 1% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.four = TENKTUP2.four
	and TENKTUP2.unique1 < 100';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.four = TENKTUP2.four
	and TENKTUP2.unique1 < 100
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 4
		Hash key is column number 3
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 3}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 3
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on four, 1 row in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.four = TENKTUP2.four
	and TENKTUP2.unique1 = 0';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.four = TENKTUP2.four
	and TENKTUP2.unique1 = 0
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 3}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1FOUR at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Joins on ten
-- Join on ten, all rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.ten = TENKTUP2.ten';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.ten = TENKTUP2.ten
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (4):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 10
		Hash key is column number 4
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 4}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 4
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on ten, 60% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.ten = TENKTUP2.ten
	and TENKTUP2.unique1 < 6000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.ten = TENKTUP2.ten
	and TENKTUP2.unique1 < 6000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (4):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 0
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 10
		Hash key is column number 4
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 4}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 4
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on ten, 25% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.ten = TENKTUP2.ten
	and TENKTUP2.unique1 < 2500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.ten = TENKTUP2.ten
	and TENKTUP2.unique1 < 2500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 10
		Hash key is column number 4
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 4}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 4
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on ten, 10% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.ten = TENKTUP2.ten
	and TENKTUP2.unique1 < 1000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.ten = TENKTUP2.ten
	and TENKTUP2.unique1 < 1000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 10
		Hash key is column number 4
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 4}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 4
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on ten, 5% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.ten = TENKTUP2.ten
	and TENKTUP2.unique1 < 500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.ten = TENKTUP2.ten
	and TENKTUP2.unique1 < 500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 10
		Hash key is column number 4
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 4}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 4
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on ten, 1% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.ten = TENKTUP2.ten
	and TENKTUP2.unique1 < 100';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.ten = TENKTUP2.ten
	and TENKTUP2.unique1 < 100
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 10
		Hash key is column number 4
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 4}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 4
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on ten, 1 row in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.ten = TENKTUP2.ten
	and TENKTUP2.unique1 = 0';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.ten = TENKTUP2.ten
	and TENKTUP2.unique1 = 0
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 4}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1TEN at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Joins on twenty
-- Join on twenty, all rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.twenty = TENKTUP2.twenty';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.twenty = TENKTUP2.twenty
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (4):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 20
		Hash key is column number 5
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 5}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 5
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on twenty, 60% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.twenty = TENKTUP2.twenty
	and TENKTUP2.unique1 < 6000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.twenty = TENKTUP2.twenty
	and TENKTUP2.unique1 < 6000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (4):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 0
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 20
		Hash key is column number 5
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 5}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 5
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on twenty, 25% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.twenty = TENKTUP2.twenty
	and TENKTUP2.unique1 < 2500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.twenty = TENKTUP2.twenty
	and TENKTUP2.unique1 < 2500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 20
		Hash key is column number 5
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 5}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 5
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on twenty, 10% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.twenty = TENKTUP2.twenty
	and TENKTUP2.unique1 < 1000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.twenty = TENKTUP2.twenty
	and TENKTUP2.unique1 < 1000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 20
		Hash key is column number 5
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 5}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 5
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on twenty, 5% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.twenty = TENKTUP2.twenty
	and TENKTUP2.unique1 < 500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.twenty = TENKTUP2.twenty
	and TENKTUP2.unique1 < 500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 20
		Hash key is column number 5
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 5}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 5
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on twenty, 1% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.twenty = TENKTUP2.twenty
	and TENKTUP2.unique1 < 100';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.twenty = TENKTUP2.twenty
	and TENKTUP2.unique1 < 100
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 20
		Hash key is column number 5
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 5}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 5
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on twenty, 1 row in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.twenty = TENKTUP2.twenty
	and TENKTUP2.unique1 = 0';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.twenty = TENKTUP2.twenty
	and TENKTUP2.unique1 = 0
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 5}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1TWENTY at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Joins on onePercent
-- Join on onePercent, all rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (4):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 100
		Hash key is column number 6
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 6}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 6
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on onePercent, 60% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 6000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 6000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (4):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 0
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 100
		Hash key is column number 6
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 6}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 6
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on onePercent, 25% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 2500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 2500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 100
		Hash key is column number 6
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 6}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 6
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on onePercent, 10% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 1000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 1000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 100
		Hash key is column number 6
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 6}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 6
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on onePercent, 5% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 100
		Hash key is column number 6
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 6}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 6
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on onePercent, 1% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 100';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 100
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 100
		Hash key is column number 6
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 6}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 6
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on onePercent, 1 row in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 = 0';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 = 0
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 6}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1ONEPERCENT at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Joins on twentyPercent
-- Join on twentyPercent, all rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.twentyPercent = TENKTUP2.twentyPercent';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.twentyPercent = TENKTUP2.twentyPercent
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (4):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 5
		Hash key is column number 8
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 8}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 8
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on twentyPercent, 60% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.twentyPercent = TENKTUP2.twentyPercent
	and TENKTUP2.unique1 < 6000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.twentyPercent = TENKTUP2.twentyPercent
	and TENKTUP2.unique1 < 6000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (4):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 0
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 5
		Hash key is column number 8
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 8}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 8
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on twentyPercent, 25% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.twentyPercent = TENKTUP2.twentyPercent
	and TENKTUP2.unique1 < 2500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.twentyPercent = TENKTUP2.twentyPercent
	and TENKTUP2.unique1 < 2500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 5
		Hash key is column number 8
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 8}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 8
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on twentyPercent, 10% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.twentyPercent = TENKTUP2.twentyPercent
	and TENKTUP2.unique1 < 1000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.twentyPercent = TENKTUP2.twentyPercent
	and TENKTUP2.unique1 < 1000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 5
		Hash key is column number 8
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 8}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 8
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on twentyPercent, 5% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.twentyPercent = TENKTUP2.twentyPercent
	and TENKTUP2.unique1 < 500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.twentyPercent = TENKTUP2.twentyPercent
	and TENKTUP2.unique1 < 500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 5
		Hash key is column number 8
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 8}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 8
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on twentyPercent, 1% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.twentyPercent = TENKTUP2.twentyPercent
	and TENKTUP2.unique1 < 100';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.twentyPercent = TENKTUP2.twentyPercent
	and TENKTUP2.unique1 < 100
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 5
		Hash key is column number 8
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 8}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 8
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- Join on twentyPercent, 1 row in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.twentyPercent = TENKTUP2.twentyPercent
	and TENKTUP2.unique1 = 0';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.twentyPercent = TENKTUP2.twentyPercent
	and TENKTUP2.unique1 = 0
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 8}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1TWENTYPERCENT at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Joins on stringu1
-- Join on stringu1, all rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.stringu1 = TENKTUP2.stringu1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.stringu1 = TENKTUP2.stringu1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1STRINGU1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=3
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on stringu1, 60% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.stringu1 = TENKTUP2.stringu1
	and TENKTUP2.unique1 < 6000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.stringu1 = TENKTUP2.stringu1
	and TENKTUP2.unique1 < 6000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 0
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1STRINGU1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=3
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on stringu1, 25% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.stringu1 = TENKTUP2.stringu1
	and TENKTUP2.unique1 < 2500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.stringu1 = TENKTUP2.stringu1
	and TENKTUP2.unique1 < 2500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1STRINGU1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=3
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on stringu1, 10% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.stringu1 = TENKTUP2.stringu1
	and TENKTUP2.unique1 < 1000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.stringu1 = TENKTUP2.stringu1
	and TENKTUP2.unique1 < 1000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1STRINGU1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=3
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on stringu1, 5% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.stringu1 = TENKTUP2.stringu1
	and TENKTUP2.unique1 < 500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.stringu1 = TENKTUP2.stringu1
	and TENKTUP2.unique1 < 500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1STRINGU1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=3
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on stringu1, 1% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.stringu1 = TENKTUP2.stringu1
	and TENKTUP2.unique1 < 100';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.stringu1 = TENKTUP2.stringu1
	and TENKTUP2.unique1 < 100
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1STRINGU1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=3
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on stringu1, 1 row in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.stringu1 = TENKTUP2.stringu1
	and TENKTUP2.unique1 = 0';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.stringu1 = TENKTUP2.stringu1
	and TENKTUP2.unique1 = 0
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1STRINGU1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=3
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Joins on string4
-- Join on string4, all rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.string4 = TENKTUP2.string4';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.string4 = TENKTUP2.string4
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1STRING4 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=3
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on string4, 60% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.string4 = TENKTUP2.string4
	and TENKTUP2.unique1 < 6000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.string4 = TENKTUP2.string4
	and TENKTUP2.unique1 < 6000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 0
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1STRING4 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=3
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on string4, 25% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.string4 = TENKTUP2.string4
	and TENKTUP2.unique1 < 2500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.string4 = TENKTUP2.string4
	and TENKTUP2.unique1 < 2500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1STRING4 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=3
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on string4, 10% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.string4 = TENKTUP2.string4
	and TENKTUP2.unique1 < 1000';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.string4 = TENKTUP2.string4
	and TENKTUP2.unique1 < 1000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1STRING4 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=3
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on string4, 5% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.string4 = TENKTUP2.string4
	and TENKTUP2.unique1 < 500';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.string4 = TENKTUP2.string4
	and TENKTUP2.unique1 < 500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1STRING4 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=3
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on string4, 1% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.string4 = TENKTUP2.string4
	and TENKTUP2.unique1 < 100';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.string4 = TENKTUP2.string4
	and TENKTUP2.unique1 < 100
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1STRING4 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=3
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Join on string4, 1 row in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.string4 = TENKTUP2.string4
	and TENKTUP2.unique1 = 0';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.string4 = TENKTUP2.string4
	and TENKTUP2.unique1 = 0
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1STRING4 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=3
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> commit;
ij> -- Test the effect of ORDER BY on access path.  The optimizer takes
-- the cost of sorting into account, and may choose an access path
-- in the same order as the ORDER BY, especially if the sort is
-- expensive.
--
-- First try single-table queries.
-- No where clause, try ordering on different indexed columns
get cursor c as
	'select * from TENKTUP1 order by unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1 order by unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share table locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched={1}
		Number of columns fetched=1
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			None
		stop position:
			None
		qualifiers:
			None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1 order by unique2';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1 order by unique2
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE2 at serializable isolation level using share table locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched={1}
		Number of columns fetched=1
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			None
		stop position:
			None
		qualifiers:
			None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1 order by two';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1 order by two
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1TWO at serializable isolation level using share table locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched={1}
		Number of columns fetched=1
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			None
		stop position:
			None
		qualifiers:
			None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1 order by four';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1 order by four
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1FOUR at serializable isolation level using share table locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched={1}
		Number of columns fetched=1
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			None
		stop position:
			None
		qualifiers:
			None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1 order by ten';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1 order by ten
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1TEN at serializable isolation level using share table locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched={1}
		Number of columns fetched=1
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			None
		stop position:
			None
		qualifiers:
			None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1 order by twenty';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1 order by twenty
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1TWENTY at serializable isolation level using share table locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched={1}
		Number of columns fetched=1
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			None
		stop position:
			None
		qualifiers:
			None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1 order by onePercent';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1 order by onePercent
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1ONEPERCENT at serializable isolation level using share table locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched={1}
		Number of columns fetched=1
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			None
		stop position:
			None
		qualifiers:
			None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1 order by twentyPercent';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1 order by twentyPercent
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1TWENTYPERCENT at serializable isolation level using share table locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched={1}
		Number of columns fetched=1
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			None
		stop position:
			None
		qualifiers:
			None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1 order by evenOnePercent';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1 order by evenOnePercent
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1EVENONEPERCENT at serializable isolation level using share table locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched={1}
		Number of columns fetched=1
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			None
		stop position:
			None
		qualifiers:
			None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1 order by oddOnePercent';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1 order by oddOnePercent
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1ODDONEPERCENT at serializable isolation level using share table locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched={1}
		Number of columns fetched=1
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			None
		stop position:
			None
		qualifiers:
			None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1 order by stringu1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1 order by stringu1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1STRINGU1 at serializable isolation level using share table locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched={1}
		Number of columns fetched=1
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=3
		start position:
			None
		stop position:
			None
		qualifiers:
			None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1 order by stringu2';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1 order by stringu2
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1STRINGU2 at serializable isolation level using share table locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched={1}
		Number of columns fetched=1
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=3
		start position:
			None
		stop position:
			None
		qualifiers:
			None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1 order by string4';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1 order by string4
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1STRING4 at serializable isolation level using share table locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched={1}
		Number of columns fetched=1
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=3
		start position:
			None
		stop position:
			None
		qualifiers:
			None
ij> commit;
ij> -- Now try the same thing with covering indexes
get cursor c as
	'select unique1 from TENKTUP1 order by unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select unique1 from TENKTUP1 order by unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share table locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched={0}
	Number of columns fetched=1
	Number of deleted rows visited=0
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=btree
	Tree height=2
	start position:
		None
	stop position:
		None
	qualifiers:
		None
ij> commit;
ij> get cursor c as
	'select unique2 from TENKTUP1 order by unique2';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select unique2 from TENKTUP1 order by unique2
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE2 at serializable isolation level using share table locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched={0}
	Number of columns fetched=1
	Number of deleted rows visited=0
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=btree
	Tree height=2
	start position:
		None
	stop position:
		None
	qualifiers:
		None
ij> commit;
ij> get cursor c as
	'select two from TENKTUP1 order by two';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select two from TENKTUP1 order by two
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Scan ResultSet for TENKTUP1 using index TK1TWO at serializable isolation level using share table locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched={0}
	Number of columns fetched=1
	Number of deleted rows visited=0
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=btree
	Tree height=2
	start position:
		None
	stop position:
		None
	qualifiers:
		None
ij> commit;
ij> get cursor c as
	'select four from TENKTUP1 order by four';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select four from TENKTUP1 order by four
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Scan ResultSet for TENKTUP1 using index TK1FOUR at serializable isolation level using share table locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched={0}
	Number of columns fetched=1
	Number of deleted rows visited=0
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=btree
	Tree height=2
	start position:
		None
	stop position:
		None
	qualifiers:
		None
ij> commit;
ij> get cursor c as
	'select ten from TENKTUP1 order by ten';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	C
Statement Text: 
	select ten from TENKTUP1 order by ten
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Scan ResultSet for TENKTUP1 using index TK1TEN at serializable isolation level using share table locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched={0}
	Number of columns fetched=1
	Number of deleted rows visited=0
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=btree
	Tree height=2
	start position:
		None
	stop position:
		None
	qualifiers:
		None
ij> commit;
ij> get cursor c as
	'select twenty from TENKTUP1 order by twenty';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	C
Statement Text: 
	select twenty from TENKTUP1 order by twenty
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Scan ResultSet for TENKTUP1 using index TK1TWENTY at serializable isolation level using share table locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched={0}
	Number of columns fetched=1
	Number of deleted rows visited=0
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=btree
	Tree height=2
	start position:
		None
	stop position:
		None
	qualifiers:
		None
ij> commit;
ij> get cursor c as
	'select onePercent from TENKTUP1 order by onePercent';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select onePercent from TENKTUP1 order by onePercent
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Scan ResultSet for TENKTUP1 using index TK1ONEPERCENT at serializable isolation level using share table locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched={0}
	Number of columns fetched=1
	Number of deleted rows visited=0
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=btree
	Tree height=2
	start position:
		None
	stop position:
		None
	qualifiers:
		None
ij> commit;
ij> get cursor c as
	'select twentyPercent from TENKTUP1 order by twentyPercent';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select twentyPercent from TENKTUP1 order by twentyPercent
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Scan ResultSet for TENKTUP1 using index TK1TWENTYPERCENT at serializable isolation level using share table locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched={0}
	Number of columns fetched=1
	Number of deleted rows visited=0
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=btree
	Tree height=2
	start position:
		None
	stop position:
		None
	qualifiers:
		None
ij> commit;
ij> get cursor c as
	'select evenOnePercent from TENKTUP1 order by evenOnePercent';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	C
Statement Text: 
	select evenOnePercent from TENKTUP1 order by evenOnePercent
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Scan ResultSet for TENKTUP1 using index TK1EVENONEPERCENT at serializable isolation level using share table locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched={0}
	Number of columns fetched=1
	Number of deleted rows visited=0
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=btree
	Tree height=2
	start position:
		None
	stop position:
		None
	qualifiers:
		None
ij> commit;
ij> get cursor c as
	'select oddOnePercent from TENKTUP1 order by oddOnePercent';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select oddOnePercent from TENKTUP1 order by oddOnePercent
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Scan ResultSet for TENKTUP1 using index TK1ODDONEPERCENT at serializable isolation level using share table locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched={0}
	Number of columns fetched=1
	Number of deleted rows visited=0
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=btree
	Tree height=2
	start position:
		None
	stop position:
		None
	qualifiers:
		None
ij> commit;
ij> get cursor c as
	'select stringu1 from TENKTUP1 order by stringu1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select stringu1 from TENKTUP1 order by stringu1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Scan ResultSet for TENKTUP1 using index TK1STRINGU1 at serializable isolation level using share table locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched={0}
	Number of columns fetched=1
	Number of deleted rows visited=0
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=btree
	Tree height=3
	start position:
		None
	stop position:
		None
	qualifiers:
		None
ij> commit;
ij> get cursor c as
	'select stringu2 from TENKTUP1 order by stringu2';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select stringu2 from TENKTUP1 order by stringu2
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Scan ResultSet for TENKTUP1 using index TK1STRINGU2 at serializable isolation level using share table locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched={0}
	Number of columns fetched=1
	Number of deleted rows visited=0
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=btree
	Tree height=3
	start position:
		None
	stop position:
		None
	qualifiers:
		None
ij> commit;
ij> get cursor c as
	'select string4 from TENKTUP1 order by string4';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select string4 from TENKTUP1 order by string4
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Scan ResultSet for TENKTUP1 using index TK1STRING4 at serializable isolation level using share table locking chosen by the optimizer
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
Fetch Size = 16
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
scan information:
	Bit set of columns fetched={0}
	Number of columns fetched=1
	Number of deleted rows visited=0
	<filtered number of pages visited>
	<filtered number of rows qualified>
	<filtered number of rows visited>
	Scan type=btree
	Tree height=3
	start position:
		None
	stop position:
		None
	qualifiers:
		None
ij> commit;
ij> -- Where clause on same column as order by, with different selectivities.
-- 60%
get cursor c as
	'select * from TENKTUP1 where unique1 < 6000 order by unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1 where unique1 < 6000 order by unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			None
		stop position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
			0 
		qualifiers:
			None
ij> commit;
ij> -- 25%
get cursor c as
	'select * from TENKTUP1 where unique1 < 2500 order by unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1 where unique1 < 2500 order by unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			None
		stop position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
			0 
		qualifiers:
			None
ij> commit;
ij> -- 10%
get cursor c as
	'select * from TENKTUP1 where unique1 < 1000 order by unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1 where unique1 < 1000 order by unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			None
		stop position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
			0 
		qualifiers:
			None
ij> commit;
ij> -- 5%
get cursor c as
	'select * from TENKTUP1 where unique1 < 500 order by unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1 where unique1 < 500 order by unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			None
		stop position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
			0 
		qualifiers:
			None
ij> commit;
ij> -- 1%
get cursor c as
	'select * from TENKTUP1 where unique1 < 100 order by unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1 where unique1 < 100 order by unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			None
		stop position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
			0 
		qualifiers:
			None
ij> commit;
ij> -- one row
get cursor c as
	'select * from TENKTUP1 where unique1 = 0 order by unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1 where unique1 = 0 order by unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
			0 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
			0 
		qualifiers:
			None
ij> commit;
ij> -- Where clause and order by on different columns - non-covering
-- 60%
get cursor c as
	'select * from TENKTUP1 where unique1 < 6000 order by unique2';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1 where unique1 < 6000 order by unique2
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 6000
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=6000
	Number of rows output=6000
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=16
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=heap
		start position:
			null
		stop position:
			null
		qualifiers:
			Column[0][0] Id: 0
			Operator: <
			Ordered nulls: false
			Unknown return value: false
			Negate comparison result: false
ij> commit;
ij> -- 25%
get cursor c as
	'select * from TENKTUP1 where unique1 < 2500 order by unique2';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1 where unique1 < 2500 order by unique2
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 2500
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=2500
	Number of rows output=2500
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
ij> commit;
ij> -- 10%
get cursor c as
	'select * from TENKTUP1 where unique1 < 1000 order by unique2';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1 where unique1 < 1000 order by unique2
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 1000
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=1000
	Number of rows output=1000
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
ij> commit;
ij> -- 5%
get cursor c as
	'select * from TENKTUP1 where unique1 < 500 order by unique2';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1 where unique1 < 500 order by unique2
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 500
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=500
	Number of rows output=500
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
ij> commit;
ij> -- 1%
get cursor c as
	'select * from TENKTUP1 where unique1 < 100 order by unique2';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1 where unique1 < 100 order by unique2
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 100
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=100
	Number of rows output=100
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
ij> commit;
ij> -- one row
get cursor c as
	'select * from TENKTUP1 where unique1 = 0 order by unique2';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1 where unique1 = 0 order by unique2
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Index Row to Base Row ResultSet for TENKTUP1:
<filtered number of opens>
<filtered rows seen>
Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 1
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=2
		Number of deleted rows visited=0
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=btree
		Tree height=2
		start position:
			>= on first 1 column(s).
			Ordered null semantics on the following columns: 
			0 
		stop position:
			> on first 1 column(s).
			Ordered null semantics on the following columns: 
			0 
		qualifiers:
			None
ij> commit;
ij> -- Where clause and order by on different columns - covering
create index TK1UNIQUE1TWO on TENKTUP1(unique1, two);
0 rows inserted/updated/deleted
ij> create index TK1TWOUNIQUE1 on TENKTUP1(two, unique1);
0 rows inserted/updated/deleted
ij> -- 60%
get cursor c as
	'select two from TENKTUP1 where unique1 < 6000 order by two';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select two from TENKTUP1 where unique1 < 6000 order by two
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (3):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Project-Restrict ResultSet (2):
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	restriction = false
	projection = true
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		restriction time (milliseconds) = 0
		projection time (milliseconds) = 0
	Source result set:
		Index Scan ResultSet for TENKTUP1 using index TK1TWOUNIQUE1 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched={0, 1}
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				None
			qualifiers:
				Column[0][0] Id: 1
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- 25%
get cursor c as
	'select two from TENKTUP1 where unique1 < 2500 order by two';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select two from TENKTUP1 where unique1 < 2500 order by two
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (3):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Project-Restrict ResultSet (2):
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	restriction = false
	projection = true
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		restriction time (milliseconds) = 0
		projection time (milliseconds) = 0
	Source result set:
		Index Scan ResultSet for TENKTUP1 using index TK1TWOUNIQUE1 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched={0, 1}
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				None
			qualifiers:
				Column[0][0] Id: 1
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- 10%
get cursor c as
	'select two from TENKTUP1 where unique1 < 1000 order by two';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select two from TENKTUP1 where unique1 < 1000 order by two
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 1000
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=1000
	Number of rows output=1000
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Project-Restrict ResultSet (2):
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	restriction = false
	projection = true
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		restriction time (milliseconds) = 0
		projection time (milliseconds) = 0
	Source result set:
		Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1TWO at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched={0, 1}
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
ij> commit;
ij> -- 5%
get cursor c as
	'select two from TENKTUP1 where unique1 < 500 order by two';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select two from TENKTUP1 where unique1 < 500 order by two
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 500
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=500
	Number of rows output=500
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Project-Restrict ResultSet (2):
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	restriction = false
	projection = true
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		restriction time (milliseconds) = 0
		projection time (milliseconds) = 0
	Source result set:
		Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1TWO at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched={0, 1}
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
ij> commit;
ij> -- 1%
get cursor c as
	'select two from TENKTUP1 where unique1 < 100 order by two';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select two from TENKTUP1 where unique1 < 100 order by two
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 100
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=100
	Number of rows output=100
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Project-Restrict ResultSet (2):
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	restriction = false
	projection = true
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		restriction time (milliseconds) = 0
		projection time (milliseconds) = 0
	Source result set:
		Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1TWO at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched={0, 1}
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
ij> commit;
ij> -- one row
-- RESOLVE: For some reason, this avoids the sort by choosing the
-- index on column two, rather than by treating it as a one-row table.
-- It does not do this if you run the query by itself, outside of this
-- test.
get cursor c as
	'select two from TENKTUP1 where unique1 = 0 order by two';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select two from TENKTUP1 where unique1 = 0 order by two
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (3):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {2}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
ij> commit;
ij> drop index TK1UNIQUE1TWO;
0 rows inserted/updated/deleted
ij> -- Constant search condition on first column of index, order on second
-- column.
get cursor c as
	'select two, unique1 from TENKTUP1 where two = 0 order by unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select two, unique1 from TENKTUP1 where two = 0 order by unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (3):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Project-Restrict ResultSet (2):
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	restriction = false
	projection = true
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		restriction time (milliseconds) = 0
		projection time (milliseconds) = 0
	Source result set:
		Index Scan ResultSet for TENKTUP1 using index TK1TWOUNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched={0, 1}
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
			qualifiers:
				None
ij> commit;
ij> -- Constant search condition on first column of index, order on first and second
-- columns.
get cursor c as
	'select two, unique1 from TENKTUP1 where two = 0 order by two, unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select two, unique1 from TENKTUP1 where two = 0 order by two, unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (3):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Project-Restrict ResultSet (2):
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	restriction = false
	projection = true
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		restriction time (milliseconds) = 0
		projection time (milliseconds) = 0
	Source result set:
		Index Scan ResultSet for TENKTUP1 using index TK1TWOUNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched={0, 1}
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
			qualifiers:
				None
ij> commit;
ij> drop index TK1TWOUNIQUE1;
0 rows inserted/updated/deleted
ij> commit;
ij> -- Now test sort avoidance with joins.
--
-- First try two-way joins where the order by column is in only one table
-- Order by column same as joining column
--
-- 100% of rows from joining table
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 order by TENKTUP1.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 order by TENKTUP1.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Nested Loop Exists Join ResultSet:
<filtered number of opens>
<filtered rows seen from the left>
<filtered rows seen from the right>
Rows filtered = 0
<filtered rows returned>
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Left result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched={1}
			Number of columns fetched=1
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				None
			qualifiers:
				None
Right result set:
	Index Row to Base Row ResultSet for TENKTUP2:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
ij> commit;
ij> -- 60% of rows from joining table
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP2.unique1 < 6000
	 order by TENKTUP1.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP2.unique1 < 6000
	 order by TENKTUP1.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Nested Loop Exists Join ResultSet:
<filtered number of opens>
<filtered rows seen from the left>
<filtered rows seen from the right>
Rows filtered = 0
<filtered rows returned>
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Left result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
Right result set:
	Index Row to Base Row ResultSet for TENKTUP2:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				Column[0][0] Id: 0
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- 25% of rows from joining table
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP2.unique1 < 2500
	 order by TENKTUP1.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP2.unique1 < 2500
	 order by TENKTUP1.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Hash Exists Join ResultSet:
<filtered number of opens>
<filtered rows seen from the left>
<filtered rows seen from the right>
Rows filtered = 0
<filtered rows returned>
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Left result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
Right result set:
	Index Row to Base Row ResultSet for TENKTUP2:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Hash Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking: 
		<filtered number of opens>
		Hash table size = 2500
		Hash key is column number 0
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 0
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- force TENKTUP1 as the outermost join table to make sure 
-- that no sorting is necessary. DERBY-3926
get cursor c as
	'select * from --DERBY-PROPERTIES joinOrder=FIXED
	 TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP2.unique1 < 2500
	 order by TENKTUP1.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from --DERBY-PROPERTIES joinOrder=FIXED
	 TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP2.unique1 < 2500
	 order by TENKTUP1.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
User supplied optimizer overrides for join are { joinOrder=FIXED }
Hash Exists Join ResultSet:
<filtered number of opens>
<filtered rows seen from the left>
<filtered rows seen from the right>
Rows filtered = 0
<filtered rows returned>
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Left result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
Right result set:
	Index Row to Base Row ResultSet for TENKTUP2:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Hash Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking: 
		<filtered number of opens>
		Hash table size = 2500
		Hash key is column number 0
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 0
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- This time, force TENKTUP2 as the outermost join table to make sure 
-- that still no sorting is necessary. DERBY-3926
-- DERBY-4331 backs out part of DERBY-3926, the expected plan now does not
-- do sort avoidance.  
-- When DERBY-4339 is implemented, the following query plan should not have
-- a sort node.
-- The plan is forced to use TENKTUP2 as outermost
-- join.  It knows that query result is sorted on TENKTUP2.unique1, but does not
-- recognize that because "TENKTUP1.unique1 = TENKTUP2.unique1" that query
-- is also sorted on TENKTUP1.unique1 and could avoid a sort.
get cursor c as
	'select * from --DERBY-PROPERTIES joinOrder=FIXED
	 TENKTUP2, TENKTUP1
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP2.unique1 < 2500
	 order by TENKTUP1.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	C
Statement Text: 
	select * from --DERBY-PROPERTIES joinOrder=FIXED
	 TENKTUP2, TENKTUP1
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP2.unique1 < 2500
	 order by TENKTUP1.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 2500
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=2500
	Number of rows output=2500
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	User supplied optimizer overrides for join are { joinOrder=FIXED }
	Hash Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Hash Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking: 
			<filtered number of opens>
			Hash table size = 2500
			Hash key is column number 0
			<filtered rows seen>
			Rows filtered = 0
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information: 
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				scan qualifiers:
					None
				next qualifiers:
					Column[0][0] Id: 0
					Operator: =
					Ordered nulls: false
					Unknown return value: false
					Negate comparison result: false
ij> commit;
ij> -- 25% of rows from joining table
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP2.unique1 < 2500
	 order by TENKTUP1.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP2.unique1 < 2500
	 order by TENKTUP1.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Hash Exists Join ResultSet:
<filtered number of opens>
<filtered rows seen from the left>
<filtered rows seen from the right>
Rows filtered = 0
<filtered rows returned>
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Left result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
Right result set:
	Index Row to Base Row ResultSet for TENKTUP2:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Hash Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking: 
		<filtered number of opens>
		Hash table size = 2500
		Hash key is column number 0
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 0
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- 10% of rows from joining table
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP2.unique1 < 1000
	 order by TENKTUP1.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP2.unique1 < 1000
	 order by TENKTUP1.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Hash Exists Join ResultSet:
<filtered number of opens>
<filtered rows seen from the left>
<filtered rows seen from the right>
Rows filtered = 0
<filtered rows returned>
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Left result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
Right result set:
	Index Row to Base Row ResultSet for TENKTUP2:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Hash Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking: 
		<filtered number of opens>
		Hash table size = 1000
		Hash key is column number 0
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 0
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- 5% of rows from joining table
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP2.unique1 < 500
	 order by TENKTUP1.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP2.unique1 < 500
	 order by TENKTUP1.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Hash Exists Join ResultSet:
<filtered number of opens>
<filtered rows seen from the left>
<filtered rows seen from the right>
Rows filtered = 0
<filtered rows returned>
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Left result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
Right result set:
	Index Row to Base Row ResultSet for TENKTUP2:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Hash Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking: 
		<filtered number of opens>
		Hash table size = 500
		Hash key is column number 0
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 0
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- 1% of rows from joining table
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP2.unique1 < 100
	 order by TENKTUP1.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP2.unique1 < 100
	 order by TENKTUP1.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Hash Exists Join ResultSet:
<filtered number of opens>
<filtered rows seen from the left>
<filtered rows seen from the right>
Rows filtered = 0
<filtered rows returned>
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Left result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
Right result set:
	Index Row to Base Row ResultSet for TENKTUP2:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Hash Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking: 
		<filtered number of opens>
		Hash table size = 100
		Hash key is column number 0
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 0
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> commit;
ij> -- one row from joining table
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP2.unique1 = 0
	 order by TENKTUP1.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP2.unique1 = 0
	 order by TENKTUP1.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Nested Loop Exists Join ResultSet:
<filtered number of opens>
<filtered rows seen from the left>
<filtered rows seen from the right>
Rows filtered = 0
<filtered rows returned>
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Left result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
Right result set:
	Index Row to Base Row ResultSet for TENKTUP2:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
ij> commit;
ij> -- Order by column different from joining column
--
-- 100% of rows from joining table
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique2 = TENKTUP2.unique2
	 order by TENKTUP1.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique2 = TENKTUP2.unique2
	 order by TENKTUP1.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Nested Loop Exists Join ResultSet:
<filtered number of opens>
<filtered rows seen from the left>
<filtered rows seen from the right>
Rows filtered = 0
<filtered rows returned>
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Left result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched={1}
			Number of columns fetched=1
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				None
			stop position:
				None
			qualifiers:
				None
Right result set:
	Index Row to Base Row ResultSet for TENKTUP2:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
ij> commit;
ij> -- 60% of rows from joining table
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique2 = TENKTUP2.unique2
	 and TENKTUP2.unique1 < 6000
	 order by TENKTUP1.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique2 = TENKTUP2.unique2
	 and TENKTUP2.unique1 < 6000
	 order by TENKTUP1.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 6000
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=6000
	Number of rows output=6000
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Project-Restrict ResultSet (5):
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	restriction = false
	projection = true
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		restriction time (milliseconds) = 0
		projection time (milliseconds) = 0
	Source result set:
		Nested Loop Exists Join ResultSet:
		<filtered number of opens>
		<filtered rows seen from the left>
		<filtered rows seen from the right>
		Rows filtered = 0
		<filtered rows returned>
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		Left result set:
			Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=16
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=heap
				start position:
					null
				stop position:
					null
				qualifiers:
					Column[0][0] Id: 0
					Operator: <
					Ordered nulls: false
					Unknown return value: false
					Negate comparison result: false
		Right result set:
			Index Row to Base Row ResultSet for TENKTUP1:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					stop position:
						> on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
ij> commit;
ij> -- 25% of rows from joining table
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique2 = TENKTUP2.unique2
	 and TENKTUP2.unique1 < 2500
	 order by TENKTUP1.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique2 = TENKTUP2.unique2
	 and TENKTUP2.unique1 < 2500
	 order by TENKTUP1.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 2500
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=2500
	Number of rows output=2500
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Project-Restrict ResultSet (6):
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	restriction = false
	projection = true
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		restriction time (milliseconds) = 0
		projection time (milliseconds) = 0
	Source result set:
		Nested Loop Exists Join ResultSet:
		<filtered number of opens>
		<filtered rows seen from the left>
		<filtered rows seen from the right>
		Rows filtered = 0
		<filtered rows returned>
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		Left result set:
			Index Row to Base Row ResultSet for TENKTUP2:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 16
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						None
					stop position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
		Right result set:
			Index Row to Base Row ResultSet for TENKTUP1:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					stop position:
						> on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
ij> commit;
ij> -- 25% of rows from joining table
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique2 = TENKTUP2.unique2
	 and TENKTUP2.unique1 < 2500
	 order by TENKTUP1.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique2 = TENKTUP2.unique2
	 and TENKTUP2.unique1 < 2500
	 order by TENKTUP1.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 2500
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=2500
	Number of rows output=2500
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Project-Restrict ResultSet (6):
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	restriction = false
	projection = true
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		restriction time (milliseconds) = 0
		projection time (milliseconds) = 0
	Source result set:
		Nested Loop Exists Join ResultSet:
		<filtered number of opens>
		<filtered rows seen from the left>
		<filtered rows seen from the right>
		Rows filtered = 0
		<filtered rows returned>
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		Left result set:
			Index Row to Base Row ResultSet for TENKTUP2:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 16
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						None
					stop position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
		Right result set:
			Index Row to Base Row ResultSet for TENKTUP1:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					stop position:
						> on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
ij> commit;
ij> -- 10% of rows from joining table
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique2 = TENKTUP2.unique2
	 and TENKTUP2.unique1 < 1000
	 order by TENKTUP1.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique2 = TENKTUP2.unique2
	 and TENKTUP2.unique1 < 1000
	 order by TENKTUP1.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 1000
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=1000
	Number of rows output=1000
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Project-Restrict ResultSet (6):
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	restriction = false
	projection = true
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		restriction time (milliseconds) = 0
		projection time (milliseconds) = 0
	Source result set:
		Nested Loop Exists Join ResultSet:
		<filtered number of opens>
		<filtered rows seen from the left>
		<filtered rows seen from the right>
		Rows filtered = 0
		<filtered rows returned>
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		Left result set:
			Index Row to Base Row ResultSet for TENKTUP2:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 16
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						None
					stop position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
		Right result set:
			Index Row to Base Row ResultSet for TENKTUP1:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					stop position:
						> on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
ij> commit;
ij> -- 5% of rows from joining table
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique2 = TENKTUP2.unique2
	 and TENKTUP2.unique1 < 500
	 order by TENKTUP1.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique2 = TENKTUP2.unique2
	 and TENKTUP2.unique1 < 500
	 order by TENKTUP1.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 500
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=500
	Number of rows output=500
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Project-Restrict ResultSet (6):
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	restriction = false
	projection = true
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		restriction time (milliseconds) = 0
		projection time (milliseconds) = 0
	Source result set:
		Nested Loop Exists Join ResultSet:
		<filtered number of opens>
		<filtered rows seen from the left>
		<filtered rows seen from the right>
		Rows filtered = 0
		<filtered rows returned>
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		Left result set:
			Index Row to Base Row ResultSet for TENKTUP2:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 16
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						None
					stop position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
		Right result set:
			Index Row to Base Row ResultSet for TENKTUP1:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					stop position:
						> on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
ij> commit;
ij> -- 1% of rows from joining table
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique2 = TENKTUP2.unique2
	 and TENKTUP2.unique1 < 100
	 order by TENKTUP1.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique2 = TENKTUP2.unique2
	 and TENKTUP2.unique1 < 100
	 order by TENKTUP1.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 100
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=100
	Number of rows output=100
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Project-Restrict ResultSet (6):
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	restriction = false
	projection = true
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		restriction time (milliseconds) = 0
		projection time (milliseconds) = 0
	Source result set:
		Nested Loop Exists Join ResultSet:
		<filtered number of opens>
		<filtered rows seen from the left>
		<filtered rows seen from the right>
		Rows filtered = 0
		<filtered rows returned>
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		Left result set:
			Index Row to Base Row ResultSet for TENKTUP2:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 16
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						None
					stop position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
		Right result set:
			Index Row to Base Row ResultSet for TENKTUP1:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					stop position:
						> on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
ij> commit;
ij> -- one row from joining table
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique2 = TENKTUP2.unique2
	 and TENKTUP2.unique1 = 0
	 order by TENKTUP1.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique2 = TENKTUP2.unique2
	 and TENKTUP2.unique1 = 0
	 order by TENKTUP1.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
ij> commit;
ij> -- Sort avoidance with joins and order by on columns in different tables
--
-- order on joining columns
-- DERBY-4339, DERBY-4331
-- until DERBY-4339 is implemented the following query will not do sort
-- avoidance.  The current code does not use the knowledge that
-- TENKTUP1.unique1 = TENKTUP2.unique1 to infer that a plan that is sorted
-- on TENKTUP1.unique1 or TENKTUP2.unique1 is also sorted correctly for an
-- order by TENKTUP1.unique1, TENKTUP2.unique1.
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 order by TENKTUP1.unique1, TENKTUP2.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 order by TENKTUP1.unique1, TENKTUP2.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 10000
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=10000
	Number of rows output=10000
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
ij> commit;
ij> -- order on joining columns with qualifications on non-joining columns
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 6000
	 and TENKTUP2.unique2 < 6000
	 order by TENKTUP1.unique1, TENKTUP2.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 6000
	 and TENKTUP2.unique2 < 6000
	 order by TENKTUP1.unique1, TENKTUP2.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 6000
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=6000
	Number of rows output=6000
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 1
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
	Right result set:
		Project-Restrict ResultSet (5):
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		restriction = true
		projection = true
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			restriction time (milliseconds) = 0
			projection time (milliseconds) = 0
		Source result set:
			Index Row to Base Row ResultSet for TENKTUP2:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					stop position:
						> on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 2500
	 and TENKTUP2.unique2 < 2500
	 order by TENKTUP1.unique1, TENKTUP2.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 2500
	 and TENKTUP2.unique2 < 2500
	 order by TENKTUP1.unique1, TENKTUP2.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 2500
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=2500
	Number of rows output=2500
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Project-Restrict ResultSet (6):
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		restriction = true
		projection = true
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			restriction time (milliseconds) = 0
			projection time (milliseconds) = 0
		Source result set:
			Index Row to Base Row ResultSet for TENKTUP2:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					stop position:
						> on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 1000
	 and TENKTUP2.unique2 < 1000
	 order by TENKTUP1.unique1, TENKTUP2.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 1000
	 and TENKTUP2.unique2 < 1000
	 order by TENKTUP1.unique1, TENKTUP2.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 1000
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=1000
	Number of rows output=1000
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Project-Restrict ResultSet (6):
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		restriction = true
		projection = true
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			restriction time (milliseconds) = 0
			projection time (milliseconds) = 0
		Source result set:
			Index Row to Base Row ResultSet for TENKTUP2:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					stop position:
						> on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 500
	 and TENKTUP2.unique2 < 500
	 order by TENKTUP1.unique1, TENKTUP2.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 500
	 and TENKTUP2.unique2 < 500
	 order by TENKTUP1.unique1, TENKTUP2.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 500
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=500
	Number of rows output=500
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Project-Restrict ResultSet (6):
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		restriction = true
		projection = true
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			restriction time (milliseconds) = 0
			projection time (milliseconds) = 0
		Source result set:
			Index Row to Base Row ResultSet for TENKTUP2:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					stop position:
						> on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 100
	 and TENKTUP2.unique2 < 100
	 order by TENKTUP1.unique1, TENKTUP2.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 100
	 and TENKTUP2.unique2 < 100
	 order by TENKTUP1.unique1, TENKTUP2.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 100
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=100
	Number of rows output=100
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Project-Restrict ResultSet (6):
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		restriction = true
		projection = true
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			restriction time (milliseconds) = 0
			projection time (milliseconds) = 0
		Source result set:
			Index Row to Base Row ResultSet for TENKTUP2:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					stop position:
						> on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 = 0
	 and TENKTUP2.unique2 = 0
	 order by TENKTUP1.unique1, TENKTUP2.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 = 0
	 and TENKTUP2.unique2 = 0
	 order by TENKTUP1.unique1, TENKTUP2.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (7):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Project-Restrict ResultSet (6):
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		restriction = true
		projection = true
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			restriction time (milliseconds) = 0
			projection time (milliseconds) = 0
		Source result set:
			Index Row to Base Row ResultSet for TENKTUP1:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					stop position:
						> on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 6000
	 and TENKTUP2.unique2 = 0
	 order by TENKTUP1.unique1, TENKTUP2.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 6000
	 and TENKTUP2.unique2 = 0
	 order by TENKTUP1.unique1, TENKTUP2.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (7):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Project-Restrict ResultSet (6):
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		restriction = true
		projection = true
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			restriction time (milliseconds) = 0
			projection time (milliseconds) = 0
		Source result set:
			Index Row to Base Row ResultSet for TENKTUP1:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					stop position:
						> on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 2500
	 and TENKTUP2.unique2 < 100
	 order by TENKTUP1.unique1, TENKTUP2.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 2500
	 and TENKTUP2.unique2 < 100
	 order by TENKTUP1.unique1, TENKTUP2.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 100
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=100
	Number of rows output=100
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Project-Restrict ResultSet (7):
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	restriction = false
	projection = true
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		restriction time (milliseconds) = 0
		projection time (milliseconds) = 0
	Source result set:
		Nested Loop Exists Join ResultSet:
		<filtered number of opens>
		<filtered rows seen from the left>
		<filtered rows seen from the right>
		Rows filtered = 0
		<filtered rows returned>
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		Left result set:
			Index Row to Base Row ResultSet for TENKTUP2:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 16
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						None
					stop position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
		Right result set:
			Project-Restrict ResultSet (6):
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			restriction = true
			projection = true
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				restriction time (milliseconds) = 0
				projection time (milliseconds) = 0
			Source result set:
				Index Row to Base Row ResultSet for TENKTUP1:
				<filtered number of opens>
				<filtered rows seen>
				Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
					Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
					<filtered number of opens>
					<filtered rows seen>
					Rows filtered = 0
					Fetch Size = 1
						constructor time (milliseconds) = 0
						open time (milliseconds) = 0
						next time (milliseconds) = 0
						close time (milliseconds) = 0
					scan information:
						Bit set of columns fetched=All
						Number of columns fetched=2
						Number of deleted rows visited=0
						<filtered number of pages visited>
						<filtered number of rows qualified>
						<filtered number of rows visited>
						Scan type=btree
						Tree height=2
						start position:
							>= on first 1 column(s).
							Ordered null semantics on the following columns: 
							0 
						stop position:
							> on first 1 column(s).
							Ordered null semantics on the following columns: 
							0 
						qualifiers:
							None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 1000
	 and TENKTUP2.unique2 < 500
	 order by TENKTUP1.unique1, TENKTUP2.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 1000
	 and TENKTUP2.unique2 < 500
	 order by TENKTUP1.unique1, TENKTUP2.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 500
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=500
	Number of rows output=500
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Project-Restrict ResultSet (7):
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	restriction = false
	projection = true
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		restriction time (milliseconds) = 0
		projection time (milliseconds) = 0
	Source result set:
		Nested Loop Exists Join ResultSet:
		<filtered number of opens>
		<filtered rows seen from the left>
		<filtered rows seen from the right>
		Rows filtered = 0
		<filtered rows returned>
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		Left result set:
			Index Row to Base Row ResultSet for TENKTUP2:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 16
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						None
					stop position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
		Right result set:
			Project-Restrict ResultSet (6):
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			restriction = true
			projection = true
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				restriction time (milliseconds) = 0
				projection time (milliseconds) = 0
			Source result set:
				Index Row to Base Row ResultSet for TENKTUP1:
				<filtered number of opens>
				<filtered rows seen>
				Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
					Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
					<filtered number of opens>
					<filtered rows seen>
					Rows filtered = 0
					Fetch Size = 1
						constructor time (milliseconds) = 0
						open time (milliseconds) = 0
						next time (milliseconds) = 0
						close time (milliseconds) = 0
					scan information:
						Bit set of columns fetched=All
						Number of columns fetched=2
						Number of deleted rows visited=0
						<filtered number of pages visited>
						<filtered number of rows qualified>
						<filtered number of rows visited>
						Scan type=btree
						Tree height=2
						start position:
							>= on first 1 column(s).
							Ordered null semantics on the following columns: 
							0 
						stop position:
							> on first 1 column(s).
							Ordered null semantics on the following columns: 
							0 
						qualifiers:
							None
ij> commit;
ij> -- order on non-joining columns
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 order by TENKTUP1.unique2, TENKTUP2.unique2';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 order by TENKTUP1.unique2, TENKTUP2.unique2
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 10000
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=10000
	Number of rows output=10000
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
ij> commit;
ij> -- order on non-joining columns with qualifications on non-joining columns
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 6000
	 and TENKTUP2.unique2 < 6000
	 order by TENKTUP1.unique2, TENKTUP2.unique2';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 6000
	 and TENKTUP2.unique2 < 6000
	 order by TENKTUP1.unique2, TENKTUP2.unique2
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 6000
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=6000
	Number of rows output=6000
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 1
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
	Right result set:
		Project-Restrict ResultSet (5):
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		restriction = true
		projection = true
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			restriction time (milliseconds) = 0
			projection time (milliseconds) = 0
		Source result set:
			Index Row to Base Row ResultSet for TENKTUP2:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					stop position:
						> on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 2500
	 and TENKTUP2.unique2 < 2500
	 order by TENKTUP1.unique2, TENKTUP2.unique2';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 2500
	 and TENKTUP2.unique2 < 2500
	 order by TENKTUP1.unique2, TENKTUP2.unique2
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 2500
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=2500
	Number of rows output=2500
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Project-Restrict ResultSet (6):
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		restriction = true
		projection = true
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			restriction time (milliseconds) = 0
			projection time (milliseconds) = 0
		Source result set:
			Index Row to Base Row ResultSet for TENKTUP2:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					stop position:
						> on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 1000
	 and TENKTUP2.unique2 < 1000
	 order by TENKTUP1.unique2, TENKTUP2.unique2';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 1000
	 and TENKTUP2.unique2 < 1000
	 order by TENKTUP1.unique2, TENKTUP2.unique2
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 1000
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=1000
	Number of rows output=1000
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Project-Restrict ResultSet (6):
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		restriction = true
		projection = true
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			restriction time (milliseconds) = 0
			projection time (milliseconds) = 0
		Source result set:
			Index Row to Base Row ResultSet for TENKTUP2:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					stop position:
						> on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 500
	 and TENKTUP2.unique2 < 500
	 order by TENKTUP1.unique2, TENKTUP2.unique2';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 500
	 and TENKTUP2.unique2 < 500
	 order by TENKTUP1.unique2, TENKTUP2.unique2
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 500
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=500
	Number of rows output=500
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Project-Restrict ResultSet (6):
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		restriction = true
		projection = true
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			restriction time (milliseconds) = 0
			projection time (milliseconds) = 0
		Source result set:
			Index Row to Base Row ResultSet for TENKTUP2:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					stop position:
						> on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 100
	 and TENKTUP2.unique2 < 100
	 order by TENKTUP1.unique2, TENKTUP2.unique2';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 100
	 and TENKTUP2.unique2 < 100
	 order by TENKTUP1.unique2, TENKTUP2.unique2
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 100
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=100
	Number of rows output=100
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Project-Restrict ResultSet (6):
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		restriction = true
		projection = true
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			restriction time (milliseconds) = 0
			projection time (milliseconds) = 0
		Source result set:
			Index Row to Base Row ResultSet for TENKTUP2:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					stop position:
						> on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 = 0
	 and TENKTUP2.unique2 = 0
	 order by TENKTUP1.unique2, TENKTUP2.unique2';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 = 0
	 and TENKTUP2.unique2 = 0
	 order by TENKTUP1.unique2, TENKTUP2.unique2
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Nested Loop Exists Join ResultSet:
<filtered number of opens>
<filtered rows seen from the left>
<filtered rows seen from the right>
Rows filtered = 0
<filtered rows returned>
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Left result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
Right result set:
	Project-Restrict ResultSet (6):
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	restriction = true
	projection = true
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		restriction time (milliseconds) = 0
		projection time (milliseconds) = 0
	Source result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 6000
	 and TENKTUP2.unique2 = 0
	 order by TENKTUP1.unique2, TENKTUP2.unique2';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 6000
	 and TENKTUP2.unique2 = 0
	 order by TENKTUP1.unique2, TENKTUP2.unique2
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (7):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Project-Restrict ResultSet (6):
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		restriction = true
		projection = true
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			restriction time (milliseconds) = 0
			projection time (milliseconds) = 0
		Source result set:
			Index Row to Base Row ResultSet for TENKTUP1:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					stop position:
						> on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 2500
	 and TENKTUP2.unique2 < 100
	 order by TENKTUP1.unique2, TENKTUP2.unique2';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 2500
	 and TENKTUP2.unique2 < 100
	 order by TENKTUP1.unique2, TENKTUP2.unique2
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 100
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=100
	Number of rows output=100
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Project-Restrict ResultSet (7):
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	restriction = false
	projection = true
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		restriction time (milliseconds) = 0
		projection time (milliseconds) = 0
	Source result set:
		Nested Loop Exists Join ResultSet:
		<filtered number of opens>
		<filtered rows seen from the left>
		<filtered rows seen from the right>
		Rows filtered = 0
		<filtered rows returned>
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		Left result set:
			Index Row to Base Row ResultSet for TENKTUP2:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 16
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						None
					stop position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
		Right result set:
			Project-Restrict ResultSet (6):
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			restriction = true
			projection = true
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				restriction time (milliseconds) = 0
				projection time (milliseconds) = 0
			Source result set:
				Index Row to Base Row ResultSet for TENKTUP1:
				<filtered number of opens>
				<filtered rows seen>
				Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
					Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
					<filtered number of opens>
					<filtered rows seen>
					Rows filtered = 0
					Fetch Size = 1
						constructor time (milliseconds) = 0
						open time (milliseconds) = 0
						next time (milliseconds) = 0
						close time (milliseconds) = 0
					scan information:
						Bit set of columns fetched=All
						Number of columns fetched=2
						Number of deleted rows visited=0
						<filtered number of pages visited>
						<filtered number of rows qualified>
						<filtered number of rows visited>
						Scan type=btree
						Tree height=2
						start position:
							>= on first 1 column(s).
							Ordered null semantics on the following columns: 
							0 
						stop position:
							> on first 1 column(s).
							Ordered null semantics on the following columns: 
							0 
						qualifiers:
							None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 1000
	 and TENKTUP2.unique2 < 500
	 order by TENKTUP1.unique2, TENKTUP2.unique2';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and TENKTUP1.unique2 < 1000
	 and TENKTUP2.unique2 < 500
	 order by TENKTUP1.unique2, TENKTUP2.unique2
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 500
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=500
	Number of rows output=500
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Project-Restrict ResultSet (7):
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	restriction = false
	projection = true
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		restriction time (milliseconds) = 0
		projection time (milliseconds) = 0
	Source result set:
		Nested Loop Exists Join ResultSet:
		<filtered number of opens>
		<filtered rows seen from the left>
		<filtered rows seen from the right>
		Rows filtered = 0
		<filtered rows returned>
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		Left result set:
			Index Row to Base Row ResultSet for TENKTUP2:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 16
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						None
					stop position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
		Right result set:
			Project-Restrict ResultSet (6):
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			restriction = true
			projection = true
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				restriction time (milliseconds) = 0
				projection time (milliseconds) = 0
			Source result set:
				Index Row to Base Row ResultSet for TENKTUP1:
				<filtered number of opens>
				<filtered rows seen>
				Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
					Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
					<filtered number of opens>
					<filtered rows seen>
					Rows filtered = 0
					Fetch Size = 1
						constructor time (milliseconds) = 0
						open time (milliseconds) = 0
						next time (milliseconds) = 0
						close time (milliseconds) = 0
					scan information:
						Bit set of columns fetched=All
						Number of columns fetched=2
						Number of deleted rows visited=0
						<filtered number of pages visited>
						<filtered number of rows qualified>
						<filtered number of rows visited>
						Scan type=btree
						Tree height=2
						start position:
							>= on first 1 column(s).
							Ordered null semantics on the following columns: 
							0 
						stop position:
							> on first 1 column(s).
							Ordered null semantics on the following columns: 
							0 
						qualifiers:
							None
ij> commit;
ij> -- Three-way join, order on columns from only two tables
get cursor c as
	'select * from TENKTUP1, TENKTUP2, ONEKTUP
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and ONEKTUP.unique1 = TENKTUP1.unique1
	 order by TENKTUP1.unique1, TENKTUP2.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2, ONEKTUP
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and ONEKTUP.unique1 = TENKTUP1.unique1
	 order by TENKTUP1.unique1, TENKTUP2.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 1000
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=1000
	Number of rows output=1000
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Project-Restrict ResultSet (8):
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	restriction = false
	projection = true
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		restriction time (milliseconds) = 0
		projection time (milliseconds) = 0
	Source result set:
		Nested Loop Exists Join ResultSet:
		<filtered number of opens>
		<filtered rows seen from the left>
		<filtered rows seen from the right>
		Rows filtered = 0
		<filtered rows returned>
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		Left result set:
			Nested Loop Exists Join ResultSet:
			<filtered number of opens>
			<filtered rows seen from the left>
			<filtered rows seen from the right>
			Rows filtered = 0
			<filtered rows returned>
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			Left result set:
				Table Scan ResultSet for ONEKTUP at serializable isolation level using share table locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 16
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=16
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=heap
					start position:
						null
					stop position:
						null
					qualifiers:
						None
			Right result set:
				Index Row to Base Row ResultSet for TENKTUP1:
				<filtered number of opens>
				<filtered rows seen>
				Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
					Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
					<filtered number of opens>
					<filtered rows seen>
					Rows filtered = 0
					Fetch Size = 1
						constructor time (milliseconds) = 0
						open time (milliseconds) = 0
						next time (milliseconds) = 0
						close time (milliseconds) = 0
					scan information:
						Bit set of columns fetched=All
						Number of columns fetched=2
						Number of deleted rows visited=0
						<filtered number of pages visited>
						<filtered number of rows qualified>
						<filtered number of rows visited>
						Scan type=btree
						Tree height=2
						start position:
							>= on first 1 column(s).
							Ordered null semantics on the following columns: 
							0 
						stop position:
							> on first 1 column(s).
							Ordered null semantics on the following columns: 
							0 
						qualifiers:
							None
		Right result set:
			Index Row to Base Row ResultSet for TENKTUP2:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					stop position:
						> on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, TENKTUP2, ONEKTUP
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and ONEKTUP.unique1 = TENKTUP1.unique1
	 and TENKTUP1.unique1 < 6000
	 and TENKTUP2.unique1 < 6000
	 order by TENKTUP1.unique1, TENKTUP2.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2, ONEKTUP
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and ONEKTUP.unique1 = TENKTUP1.unique1
	 and TENKTUP1.unique1 < 6000
	 and TENKTUP2.unique1 < 6000
	 order by TENKTUP1.unique1, TENKTUP2.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 1000
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=1000
	Number of rows output=1000
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Project-Restrict ResultSet (8):
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	restriction = false
	projection = true
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		restriction time (milliseconds) = 0
		projection time (milliseconds) = 0
	Source result set:
		Nested Loop Exists Join ResultSet:
		<filtered number of opens>
		<filtered rows seen from the left>
		<filtered rows seen from the right>
		Rows filtered = 0
		<filtered rows returned>
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		Left result set:
			Nested Loop Exists Join ResultSet:
			<filtered number of opens>
			<filtered rows seen from the left>
			<filtered rows seen from the right>
			Rows filtered = 0
			<filtered rows returned>
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			Left result set:
				Table Scan ResultSet for ONEKTUP at serializable isolation level using share table locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 16
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=16
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=heap
					start position:
						null
					stop position:
						null
					qualifiers:
						Column[0][0] Id: 0
						Operator: <
						Ordered nulls: false
						Unknown return value: false
						Negate comparison result: false
			Right result set:
				Index Row to Base Row ResultSet for TENKTUP1:
				<filtered number of opens>
				<filtered rows seen>
				Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
					Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
					<filtered number of opens>
					<filtered rows seen>
					Rows filtered = 0
					Fetch Size = 1
						constructor time (milliseconds) = 0
						open time (milliseconds) = 0
						next time (milliseconds) = 0
						close time (milliseconds) = 0
					scan information:
						Bit set of columns fetched=All
						Number of columns fetched=2
						Number of deleted rows visited=0
						<filtered number of pages visited>
						<filtered number of rows qualified>
						<filtered number of rows visited>
						Scan type=btree
						Tree height=2
						start position:
							>= on first 1 column(s).
							Ordered null semantics on the following columns: 
							0 
						stop position:
							> on first 1 column(s).
							Ordered null semantics on the following columns: 
							0 
						qualifiers:
							Column[0][0] Id: 0
							Operator: <
							Ordered nulls: false
							Unknown return value: false
							Negate comparison result: false
		Right result set:
			Index Row to Base Row ResultSet for TENKTUP2:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					stop position:
						> on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						Column[0][0] Id: 0
						Operator: <
						Ordered nulls: false
						Unknown return value: false
						Negate comparison result: false
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, TENKTUP2, ONEKTUP
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and ONEKTUP.unique1 = TENKTUP1.unique1
	 and TENKTUP1.unique1 = 0
	 and TENKTUP2.unique1 = 0
	 order by TENKTUP1.unique1, TENKTUP2.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2, ONEKTUP
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and ONEKTUP.unique1 = TENKTUP1.unique1
	 and TENKTUP1.unique1 = 0
	 and TENKTUP2.unique1 = 0
	 order by TENKTUP1.unique1, TENKTUP2.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Nested Loop Exists Join ResultSet:
<filtered number of opens>
<filtered rows seen from the left>
<filtered rows seen from the right>
Rows filtered = 0
<filtered rows returned>
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Left result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
Right result set:
	Index Row to Base Row ResultSet for ONEKTUP:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for ONEKTUP using index ONEKUNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, TENKTUP2, ONEKTUP
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and ONEKTUP.unique1 = TENKTUP1.unique1
	 and TENKTUP1.unique2 < 6000
	 and TENKTUP2.unique2 < 6000
	 order by TENKTUP1.unique1, TENKTUP2.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2, ONEKTUP
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and ONEKTUP.unique1 = TENKTUP1.unique1
	 and TENKTUP1.unique2 < 6000
	 and TENKTUP2.unique2 < 6000
	 order by TENKTUP1.unique1, TENKTUP2.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 616
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=616
	Number of rows output=616
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Project-Restrict ResultSet (10):
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	restriction = false
	projection = true
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		restriction time (milliseconds) = 0
		projection time (milliseconds) = 0
	Source result set:
		Nested Loop Exists Join ResultSet:
		<filtered number of opens>
		<filtered rows seen from the left>
		<filtered rows seen from the right>
		Rows filtered = 0
		<filtered rows returned>
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		Left result set:
			Nested Loop Exists Join ResultSet:
			<filtered number of opens>
			<filtered rows seen from the left>
			<filtered rows seen from the right>
			Rows filtered = 0
			<filtered rows returned>
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			Left result set:
				Table Scan ResultSet for ONEKTUP at serializable isolation level using share table locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 16
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=16
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=heap
					start position:
						null
					stop position:
						null
					qualifiers:
						None
			Right result set:
				Project-Restrict ResultSet (6):
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 384
				restriction = true
				projection = true
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
					restriction time (milliseconds) = 0
					projection time (milliseconds) = 0
				Source result set:
					Index Row to Base Row ResultSet for TENKTUP1:
					<filtered number of opens>
					<filtered rows seen>
					Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
						constructor time (milliseconds) = 0
						open time (milliseconds) = 0
						next time (milliseconds) = 0
						close time (milliseconds) = 0
						Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
						<filtered number of opens>
						<filtered rows seen>
						Rows filtered = 0
						Fetch Size = 1
							constructor time (milliseconds) = 0
							open time (milliseconds) = 0
							next time (milliseconds) = 0
							close time (milliseconds) = 0
						scan information:
							Bit set of columns fetched=All
							Number of columns fetched=2
							Number of deleted rows visited=0
							<filtered number of pages visited>
							<filtered number of rows qualified>
							<filtered number of rows visited>
							Scan type=btree
							Tree height=2
							start position:
								>= on first 1 column(s).
								Ordered null semantics on the following columns: 
								0 
							stop position:
								> on first 1 column(s).
								Ordered null semantics on the following columns: 
								0 
							qualifiers:
								None
		Right result set:
			Project-Restrict ResultSet (9):
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			restriction = true
			projection = true
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				restriction time (milliseconds) = 0
				projection time (milliseconds) = 0
			Source result set:
				Index Row to Base Row ResultSet for TENKTUP2:
				<filtered number of opens>
				<filtered rows seen>
				Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
					Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
					<filtered number of opens>
					<filtered rows seen>
					Rows filtered = 0
					Fetch Size = 1
						constructor time (milliseconds) = 0
						open time (milliseconds) = 0
						next time (milliseconds) = 0
						close time (milliseconds) = 0
					scan information:
						Bit set of columns fetched=All
						Number of columns fetched=2
						Number of deleted rows visited=0
						<filtered number of pages visited>
						<filtered number of rows qualified>
						<filtered number of rows visited>
						Scan type=btree
						Tree height=2
						start position:
							>= on first 1 column(s).
							Ordered null semantics on the following columns: 
							0 
						stop position:
							> on first 1 column(s).
							Ordered null semantics on the following columns: 
							0 
						qualifiers:
							None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, TENKTUP2, ONEKTUP
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and ONEKTUP.unique1 = TENKTUP1.unique1
	 and TENKTUP1.unique2 = 0
	 and TENKTUP2.unique2 = 0
	 order by TENKTUP1.unique1, TENKTUP2.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2, ONEKTUP
	 where TENKTUP1.unique1 = TENKTUP2.unique1
	 and ONEKTUP.unique1 = TENKTUP1.unique1
	 and TENKTUP1.unique2 = 0
	 and TENKTUP2.unique2 = 0
	 order by TENKTUP1.unique1, TENKTUP2.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (10):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Nested Loop Exists Join ResultSet:
		<filtered number of opens>
		<filtered rows seen from the left>
		<filtered rows seen from the right>
		Rows filtered = 0
		<filtered rows returned>
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		Left result set:
			Index Row to Base Row ResultSet for TENKTUP2:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					stop position:
						> on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
		Right result set:
			Project-Restrict ResultSet (7):
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			restriction = true
			projection = true
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				restriction time (milliseconds) = 0
				projection time (milliseconds) = 0
			Source result set:
				Index Row to Base Row ResultSet for TENKTUP1:
				<filtered number of opens>
				<filtered rows seen>
				Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
					Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
					<filtered number of opens>
					<filtered rows seen>
					Rows filtered = 0
					Fetch Size = 1
						constructor time (milliseconds) = 0
						open time (milliseconds) = 0
						next time (milliseconds) = 0
						close time (milliseconds) = 0
					scan information:
						Bit set of columns fetched=All
						Number of columns fetched=2
						Number of deleted rows visited=0
						<filtered number of pages visited>
						<filtered number of rows qualified>
						<filtered number of rows visited>
						Scan type=btree
						Tree height=2
						start position:
							>= on first 1 column(s).
							Ordered null semantics on the following columns: 
							0 
						stop position:
							> on first 1 column(s).
							Ordered null semantics on the following columns: 
							0 
						qualifiers:
							None
	Right result set:
		Index Row to Base Row ResultSet for ONEKTUP:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for ONEKTUP using index ONEKUNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
ij> commit;
ij> -- Joining columns different from ordering columns
get cursor c as
	'select * from TENKTUP1, TENKTUP2, ONEKTUP
	 where TENKTUP1.unique2 = TENKTUP2.unique2
	 and ONEKTUP.unique2 = TENKTUP1.unique2
	 order by TENKTUP1.unique1, TENKTUP2.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2, ONEKTUP
	 where TENKTUP1.unique2 = TENKTUP2.unique2
	 and ONEKTUP.unique2 = TENKTUP1.unique2
	 order by TENKTUP1.unique1, TENKTUP2.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 1000
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=1000
	Number of rows output=1000
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Project-Restrict ResultSet (8):
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	restriction = false
	projection = true
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		restriction time (milliseconds) = 0
		projection time (milliseconds) = 0
	Source result set:
		Nested Loop Exists Join ResultSet:
		<filtered number of opens>
		<filtered rows seen from the left>
		<filtered rows seen from the right>
		Rows filtered = 0
		<filtered rows returned>
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		Left result set:
			Nested Loop Exists Join ResultSet:
			<filtered number of opens>
			<filtered rows seen from the left>
			<filtered rows seen from the right>
			Rows filtered = 0
			<filtered rows returned>
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			Left result set:
				Table Scan ResultSet for ONEKTUP at serializable isolation level using share table locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 16
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=16
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=heap
					start position:
						null
					stop position:
						null
					qualifiers:
						None
			Right result set:
				Index Row to Base Row ResultSet for TENKTUP1:
				<filtered number of opens>
				<filtered rows seen>
				Columns accessed from heap = {0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
					Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
					<filtered number of opens>
					<filtered rows seen>
					Rows filtered = 0
					Fetch Size = 1
						constructor time (milliseconds) = 0
						open time (milliseconds) = 0
						next time (milliseconds) = 0
						close time (milliseconds) = 0
					scan information:
						Bit set of columns fetched=All
						Number of columns fetched=2
						Number of deleted rows visited=0
						<filtered number of pages visited>
						<filtered number of rows qualified>
						<filtered number of rows visited>
						Scan type=btree
						Tree height=2
						start position:
							>= on first 1 column(s).
							Ordered null semantics on the following columns: 
							0 
						stop position:
							> on first 1 column(s).
							Ordered null semantics on the following columns: 
							0 
						qualifiers:
							None
		Right result set:
			Index Row to Base Row ResultSet for TENKTUP2:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					stop position:
						> on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, TENKTUP2, ONEKTUP
	 where TENKTUP1.unique2 = TENKTUP2.unique2
	 and ONEKTUP.unique2 = TENKTUP1.unique2
	 and TENKTUP1.unique2 < 6000
	 and TENKTUP2.unique2 < 6000
	 order by TENKTUP1.unique1, TENKTUP2.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2, ONEKTUP
	 where TENKTUP1.unique2 = TENKTUP2.unique2
	 and ONEKTUP.unique2 = TENKTUP1.unique2
	 and TENKTUP1.unique2 < 6000
	 and TENKTUP2.unique2 < 6000
	 order by TENKTUP1.unique1, TENKTUP2.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 1000
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=1000
	Number of rows output=1000
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Project-Restrict ResultSet (8):
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	restriction = false
	projection = true
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		restriction time (milliseconds) = 0
		projection time (milliseconds) = 0
	Source result set:
		Nested Loop Exists Join ResultSet:
		<filtered number of opens>
		<filtered rows seen from the left>
		<filtered rows seen from the right>
		Rows filtered = 0
		<filtered rows returned>
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		Left result set:
			Nested Loop Exists Join ResultSet:
			<filtered number of opens>
			<filtered rows seen from the left>
			<filtered rows seen from the right>
			Rows filtered = 0
			<filtered rows returned>
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			Left result set:
				Table Scan ResultSet for ONEKTUP at serializable isolation level using share table locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 16
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=16
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=heap
					start position:
						null
					stop position:
						null
					qualifiers:
						Column[0][0] Id: 1
						Operator: <
						Ordered nulls: false
						Unknown return value: false
						Negate comparison result: false
			Right result set:
				Index Row to Base Row ResultSet for TENKTUP1:
				<filtered number of opens>
				<filtered rows seen>
				Columns accessed from heap = {0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
					Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
					<filtered number of opens>
					<filtered rows seen>
					Rows filtered = 0
					Fetch Size = 1
						constructor time (milliseconds) = 0
						open time (milliseconds) = 0
						next time (milliseconds) = 0
						close time (milliseconds) = 0
					scan information:
						Bit set of columns fetched=All
						Number of columns fetched=2
						Number of deleted rows visited=0
						<filtered number of pages visited>
						<filtered number of rows qualified>
						<filtered number of rows visited>
						Scan type=btree
						Tree height=2
						start position:
							>= on first 1 column(s).
							Ordered null semantics on the following columns: 
							0 
						stop position:
							> on first 1 column(s).
							Ordered null semantics on the following columns: 
							0 
						qualifiers:
							Column[0][0] Id: 0
							Operator: <
							Ordered nulls: false
							Unknown return value: false
							Negate comparison result: false
		Right result set:
			Index Row to Base Row ResultSet for TENKTUP2:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					stop position:
						> on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						Column[0][0] Id: 0
						Operator: <
						Ordered nulls: false
						Unknown return value: false
						Negate comparison result: false
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, TENKTUP2, ONEKTUP
	 where TENKTUP1.unique2 = TENKTUP2.unique2
	 and ONEKTUP.unique2 = TENKTUP1.unique2
	 and TENKTUP1.unique2 = 0
	 and TENKTUP2.unique2 = 0
	 order by TENKTUP1.unique1, TENKTUP2.unique1';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2, ONEKTUP
	 where TENKTUP1.unique2 = TENKTUP2.unique2
	 and ONEKTUP.unique2 = TENKTUP1.unique2
	 and TENKTUP1.unique2 = 0
	 and TENKTUP2.unique2 = 0
	 order by TENKTUP1.unique1, TENKTUP2.unique1
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (9):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Exists Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Nested Loop Exists Join ResultSet:
		<filtered number of opens>
		<filtered rows seen from the left>
		<filtered rows seen from the right>
		Rows filtered = 0
		<filtered rows returned>
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		Left result set:
			Index Row to Base Row ResultSet for ONEKTUP:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for ONEKTUP using index ONEKUNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					stop position:
						> on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
		Right result set:
			Index Row to Base Row ResultSet for TENKTUP2:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					stop position:
						> on first 1 column(s).
						Ordered null semantics on the following columns: 
						0 
					qualifiers:
						None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE2 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
ij> commit;
ij> -- Values clause is a single-row result set, so should not cause optimizer
-- to require sort.
get cursor c as
	'select * from TENKTUP1, (values 1) as t(x)
	 where TENKTUP1.unique1 = t.x
	 order by TENKTUP1.unique1, t.x';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, (values 1) as t(x)
	 where TENKTUP1.unique1 = t.x
	 order by TENKTUP1.unique1, t.x
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (3):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
ij> commit;
ij> -- Try with a join on unique column and order on non-unique column
get cursor c as
	'select * from TENKTUP1, (values 1) as t(x)
	 where TENKTUP1.unique1 = t.x
	 order by TENKTUP1.two, t.x';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, (values 1) as t(x)
	 where TENKTUP1.unique1 = t.x
	 order by TENKTUP1.two, t.x
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (3):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
				0 
			qualifiers:
				None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, (values 1) as t(x)
	 where TENKTUP1.two = t.x
	 order by TENKTUP1.two, t.x';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, (values 1) as t(x)
	 where TENKTUP1.two = t.x
	 order by TENKTUP1.two, t.x
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (2):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=16
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=heap
		start position:
			null
		stop position:
			null
		qualifiers:
			Column[0][0] Id: 2
			Operator: =
			Ordered nulls: false
			Unknown return value: false
			Negate comparison result: false
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, (values 1) as t(x)
	 where TENKTUP1.four = t.x
	 order by TENKTUP1.four, t.x';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, (values 1) as t(x)
	 where TENKTUP1.four = t.x
	 order by TENKTUP1.four, t.x
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (3):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1FOUR at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
			qualifiers:
				None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, (values 1) as t(x)
	 where TENKTUP1.ten = t.x
	 order by TENKTUP1.ten, t.x';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, (values 1) as t(x)
	 where TENKTUP1.ten = t.x
	 order by TENKTUP1.ten, t.x
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (3):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1TEN at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
			qualifiers:
				None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, (values 1) as t(x)
	 where TENKTUP1.twenty = t.x
	 order by TENKTUP1.twenty, t.x';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, (values 1) as t(x)
	 where TENKTUP1.twenty = t.x
	 order by TENKTUP1.twenty, t.x
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (3):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1TWENTY at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
			qualifiers:
				None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, (values 1) as t(x)
	 where TENKTUP1.onePercent = t.x
	 order by TENKTUP1.onePercent, t.x';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, (values 1) as t(x)
	 where TENKTUP1.onePercent = t.x
	 order by TENKTUP1.onePercent, t.x
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (3):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1ONEPERCENT at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
			qualifiers:
				None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, (values 1) as t(x)
	 where TENKTUP1.tenPercent = t.x
	 order by TENKTUP1.tenPercent, t.x';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, (values 1) as t(x)
	 where TENKTUP1.tenPercent = t.x
	 order by TENKTUP1.tenPercent, t.x
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (2):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=16
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=heap
		start position:
			null
		stop position:
			null
		qualifiers:
			Column[0][0] Id: 7
			Operator: =
			Ordered nulls: false
			Unknown return value: false
			Negate comparison result: false
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, (values 1) as t(x)
	 where TENKTUP1.twentyPercent = t.x
	 order by TENKTUP1.twentyPercent, t.x';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, (values 1) as t(x)
	 where TENKTUP1.twentyPercent = t.x
	 order by TENKTUP1.twentyPercent, t.x
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (3):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Index Row to Base Row ResultSet for TENKTUP1:
	<filtered number of opens>
	<filtered rows seen>
	Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		Index Scan ResultSet for TENKTUP1 using index TK1TWENTYPERCENT at serializable isolation level using share row locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 1
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=2
			Number of deleted rows visited=0
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=btree
			Tree height=2
			start position:
				>= on first 1 column(s).
				Ordered null semantics on the following columns: 
			stop position:
				> on first 1 column(s).
				Ordered null semantics on the following columns: 
			qualifiers:
				None
ij> commit;
ij> get cursor c as
	'select * from TENKTUP1, (values 1) as t(x)
	 where TENKTUP1.fiftyPercent = t.x
	 order by TENKTUP1.fiftyPercent, t.x';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, (values 1) as t(x)
	 where TENKTUP1.fiftyPercent = t.x
	 order by TENKTUP1.fiftyPercent, t.x
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (2):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	Fetch Size = 16
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information:
		Bit set of columns fetched=All
		Number of columns fetched=16
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=heap
		start position:
			null
		stop position:
			null
		qualifiers:
			Column[0][0] Id: 9
			Operator: =
			Ordered nulls: false
			Unknown return value: false
			Negate comparison result: false
ij> commit;
ij> -- Test for bug 2307:
-- Join between primary & foreign keys, w/= clause on foreign tab &
-- ORDER on indexed col of prim. tab returns rows in wrong order
get cursor c as
	'select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.ten
	 and TENKTUP2.onePercent = 63
	 order by TENKTUP1.two';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1, TENKTUP2
	 where TENKTUP1.unique1 = TENKTUP2.ten
	 and TENKTUP2.onePercent = 63
	 order by TENKTUP1.two
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Sort ResultSet:
<filtered number of opens>
Rows input = 100
<filtered rows returned>
Eliminate duplicates = false
In sorted order = false
Sort information: 
	Number of rows input=100
	Number of rows output=100
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Source result set:
	Project-Restrict ResultSet (5):
	<filtered number of opens>
	<filtered rows seen>
	Rows filtered = 0
	restriction = false
	projection = true
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
		restriction time (milliseconds) = 0
		projection time (milliseconds) = 0
	Source result set:
		Nested Loop Exists Join ResultSet:
		<filtered number of opens>
		<filtered rows seen from the left>
		<filtered rows seen from the right>
		Rows filtered = 0
		<filtered rows returned>
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		Left result set:
			Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=16
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=heap
				start position:
					null
				stop position:
					null
				qualifiers:
					Column[0][0] Id: 6
					Operator: =
					Ordered nulls: false
					Unknown return value: false
					Negate comparison result: false
		Right result set:
			Index Row to Base Row ResultSet for TENKTUP1:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP1 using index TK1UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
					stop position:
						> on first 1 column(s).
						Ordered null semantics on the following columns: 
					qualifiers:
						None
ij> commit;
ij> -- Test multi-level outer join
-- Extra-wide output because many tables.
maximumdisplaywidth 8000;
ij> get cursor c as
	'select * from TENKTUP1
		left outer join TENKTUP2 on
		(
			TENKTUP1.unique1 = TENKTUP2.unique1
		)
		left outer join ONEKTUP on
		(
			TENKTUP2.unique2 = ONEKTUP.unique2
		)
		left outer join BPRIME on
		(
			ONEKTUP.onePercent = BPRIME.onePercent
		)';
ij> close c;
ij> values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select * from TENKTUP1
		left outer join TENKTUP2 on
		(
			TENKTUP1.unique1 = TENKTUP2.unique1
		)
		left outer join ONEKTUP on
		(
			TENKTUP2.unique2 = ONEKTUP.unique2
		)
		left outer join BPRIME on
		(
			ONEKTUP.onePercent = BPRIME.onePercent
		)
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Hash Left Outer Join ResultSet:
<filtered number of opens>
<filtered rows seen from the left>
<filtered rows seen from the right>
Empty right rows returned = 0
Rows filtered = 0
<filtered rows returned>
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
Left result set:
	Hash Left Outer Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Empty right rows returned = 0
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Nested Loop Left Outer Join ResultSet:
		<filtered number of opens>
		<filtered rows seen from the left>
		<filtered rows seen from the right>
		Empty right rows returned = 0
		Rows filtered = 0
		<filtered rows returned>
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		Left result set:
			Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=16
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=heap
				start position:
					null
				stop position:
					null
				qualifiers:
					None
		Right result set:
			Index Row to Base Row ResultSet for TENKTUP2:
			<filtered number of opens>
			<filtered rows seen>
			Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
				Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
				<filtered number of opens>
				<filtered rows seen>
				Rows filtered = 0
				Fetch Size = 1
					constructor time (milliseconds) = 0
					open time (milliseconds) = 0
					next time (milliseconds) = 0
					close time (milliseconds) = 0
				scan information:
					Bit set of columns fetched=All
					Number of columns fetched=2
					Number of deleted rows visited=0
					<filtered number of pages visited>
					<filtered number of rows qualified>
					<filtered number of rows visited>
					Scan type=btree
					Tree height=2
					start position:
						>= on first 1 column(s).
						Ordered null semantics on the following columns: 
					stop position:
						> on first 1 column(s).
						Ordered null semantics on the following columns: 
					qualifiers:
						None
	Right result set:
		Hash Scan ResultSet for ONEKTUP at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 1000
		Hash key is column number 1
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 1
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
Right result set:
	Hash Scan ResultSet for BPRIME at serializable isolation level using share table locking: 
	<filtered number of opens>
	Hash table size = 100
	Hash key is column number 6
	<filtered rows seen>
	Rows filtered = 0
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	scan information: 
		Bit set of columns fetched=All
		Number of columns fetched=16
		<filtered number of pages visited>
		<filtered number of rows qualified>
		<filtered number of rows visited>
		Scan type=heap
		start position:
			null
		stop position:
			null
		scan qualifiers:
			None
		next qualifiers:
			Column[0][0] Id: 6
			Operator: =
			Ordered nulls: false
			Unknown return value: false
			Negate comparison result: false
ij> commit;
ij> -- tests to show selectivity - rowcount estimates
-- the numbers skip a value for reference to original Cloudscape test cases
-- with identical queries using properties useStatistics=false.
-- do simple joins on columns and look at row count/cost.
-- Join on two, all rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two';
ij> close c;
ij> -- 1, join on two--all rows
values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (4):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 2
		Hash key is column number 2
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 2}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 2
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> -- Join on two, 60% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 6000';
ij> close c;
ij> -- 3, join on two--60%
values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 6000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (4):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 0
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 2
		Hash key is column number 2
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 2}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 2
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> -- Join on two, 25% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 2500';
ij> close c;
ij> -- 5, join on two--25%
values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();
1                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               

Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 2500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 2
		Hash key is column number 2
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 2}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 2
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> -- Join on two, 10% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 1000';
ij> close c;
ij> -- 7, join on two--10%
values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 1000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 2
		Hash key is column number 2
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 2}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 2
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> -- Join on two, 5% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 500';
ij> close c;
ij> -- 9, join on two--5%
values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 2
		Hash key is column number 2
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 2}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 2
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> -- Join on two, 1% of rows in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 100';
ij> close c;
ij> -- 11, join on two--1%
values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 < 100
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 2
		Hash key is column number 2
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 2}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 2
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> -- Join on two, 1 row in TENKTUP2
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 = 0';
ij> close c;
ij> -- 13, join on two--1 row
values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.two = TENKTUP2.two
	and TENKTUP2.unique1 = 0
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Table Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched={1, 2}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 2
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> --  now do joins on a very low cardinality table
get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from 
	TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent';
ij> close c;
ij> -- 15, join on onePercent--all rows
values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from 
	TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (4):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 100
		Hash key is column number 6
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 6}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 6
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 6000';
ij> close c;
ij> -- 17, join on onePercent--60%
values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 6000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (4):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Table Scan ResultSet for TENKTUP2 at serializable isolation level using share table locking chosen by the optimizer
		<filtered number of opens>
		<filtered rows seen>
		Rows filtered = 0
		Fetch Size = 16
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information:
			Bit set of columns fetched=All
			Number of columns fetched=16
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			qualifiers:
				Column[0][0] Id: 0
				Operator: <
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 100
		Hash key is column number 6
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 6}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 6
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 2500';
ij> close c;
ij> -- 19, join on onePercent--25%
values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 2500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 100
		Hash key is column number 6
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 6}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 6
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 1000';
ij> close c;
ij> -- 21, join on onePercent--10%
values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 1000
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 100
		Hash key is column number 6
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 6}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 6
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 500';
ij> close c;
ij> -- 23, join on onePercent--5%
values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 500
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 100
		Hash key is column number 6
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 6}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 6
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 100';
ij> close c;
ij> -- 25, join on onePercent--1%
values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 < 100
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (5):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Hash Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					None
				stop position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Hash Scan ResultSet for TENKTUP1 at serializable isolation level using share table locking: 
		<filtered number of opens>
		Hash table size = 100
		Hash key is column number 6
		<filtered rows seen>
		Rows filtered = 0
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
		scan information: 
			Bit set of columns fetched={1, 6}
			Number of columns fetched=2
			<filtered number of pages visited>
			<filtered number of rows qualified>
			<filtered number of rows visited>
			Scan type=heap
			start position:
				null
			stop position:
				null
			scan qualifiers:
				None
			next qualifiers:
				Column[0][0] Id: 6
				Operator: =
				Ordered nulls: false
				Unknown return value: false
				Negate comparison result: false
ij> get cursor c as
	'select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 = 0';
ij> close c;
ij> -- 27, join on onePercent--1 row
values SYSCS_UTIL.SYSCS_GET_RUNTIMESTATISTICS();


Statement Name: 
	C
Statement Text: 
	select TENKTUP1.unique2, TENKTUP2.* from TENKTUP1, TENKTUP2
	where TENKTUP1.onePercent = TENKTUP2.onePercent
	and TENKTUP2.unique1 = 0
Parse Time: 0
Bind Time: 0
Optimize Time: 0
Generate Time: 0
Compile Time: 0
Execute Time: 0
Begin Compilation Timestamp : null
End Compilation Timestamp : null
Begin Execution Timestamp : null
End Execution Timestamp : null
Statement Execution Plan Text: 
Project-Restrict ResultSet (6):
<filtered number of opens>
<filtered rows seen>
Rows filtered = 0
restriction = false
projection = true
	constructor time (milliseconds) = 0
	open time (milliseconds) = 0
	next time (milliseconds) = 0
	close time (milliseconds) = 0
	restriction time (milliseconds) = 0
	projection time (milliseconds) = 0
Source result set:
	Nested Loop Join ResultSet:
	<filtered number of opens>
	<filtered rows seen from the left>
	<filtered rows seen from the right>
	Rows filtered = 0
	<filtered rows returned>
		constructor time (milliseconds) = 0
		open time (milliseconds) = 0
		next time (milliseconds) = 0
		close time (milliseconds) = 0
	Left result set:
		Index Row to Base Row ResultSet for TENKTUP2:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP2 using index TK2UNIQUE1 at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 1
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
					0 
				qualifiers:
					None
	Right result set:
		Index Row to Base Row ResultSet for TENKTUP1:
		<filtered number of opens>
		<filtered rows seen>
		Columns accessed from heap = {1, 6}
			constructor time (milliseconds) = 0
			open time (milliseconds) = 0
			next time (milliseconds) = 0
			close time (milliseconds) = 0
			Index Scan ResultSet for TENKTUP1 using index TK1ONEPERCENT at serializable isolation level using share row locking chosen by the optimizer
			<filtered number of opens>
			<filtered rows seen>
			Rows filtered = 0
			Fetch Size = 16
				constructor time (milliseconds) = 0
				open time (milliseconds) = 0
				next time (milliseconds) = 0
				close time (milliseconds) = 0
			scan information:
				Bit set of columns fetched=All
				Number of columns fetched=2
				Number of deleted rows visited=0
				<filtered number of pages visited>
				<filtered number of rows qualified>
				<filtered number of rows visited>
				Scan type=btree
				Tree height=2
				start position:
					>= on first 1 column(s).
					Ordered null semantics on the following columns: 
				stop position:
					> on first 1 column(s).
					Ordered null semantics on the following columns: 
				qualifiers:
					None
ij> -- cleanup
drop table TENKTUP1;
0 rows inserted/updated/deleted
ij> drop table TENKTUP2;
0 rows inserted/updated/deleted
ij> drop table ONEKTUP;
0 rows inserted/updated/deleted
ij> drop table BPRIME;
0 rows inserted/updated/deleted
ij> 
