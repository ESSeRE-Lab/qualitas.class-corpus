# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to you under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

######################################################################
# Example replicationtest.properties
# Your variant should be placed in Derby's ${user.dir} 
# when running tests.
######################################################################

######################################################################
# Optionally run test without replication for (performance) comparison:
# Default=false. test.runUnReplicated=true 

######################################################################

test.testUser=os136789
# Needed to execute 'ssh' against server and client hosts.

# test.replicationTest and test.replicationVerify are full paths to
# sql test scripts or JUnit test classes.

# test.replicationTest=/home/os136789/Replication/testing/1.sql
# test.replicationVerify=/home/os136789/Replication/testing/v1.sql


# test.replicationTest=org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationTestRun
# test.replicationVerify=/home/os136789/Replication/testing/verify_ReplicationTestRun.sql

# test.replicationTest=org.apache.derbyTesting.functionTests.tests.replicationTests.SimplePerfTest
# test.inserts=10000
# test.commitFreq=100
# test.replicationVerify=/home/os136789/Replication/testing/verify_SimplePerfTest.sql

# test.replicationTest=org.apache.derbyTesting.functionTests.tests.replicationTests.KillSlave
# test.replicationVerify=/home/os136789/Replication/testing/verify_KillSlave.sql


# test.sqlLoadInit may be specific for each load
test.sqlLoadInit=/home/os136789/Replication/testing/loadinit.sql

######################################################################

test.printDebug=true

test.databaseName=test
test.master.databasepath=/home/os136789/Replication/testing
test.slave.databasepath=/home/os136789/Replication/testing

test.masterServerHost=urd11
test.slaveServerHost=urd12
test.testClientHost=urd13

#############################
# Jvm to be used for client and default for master and slave:
jvm.version=/usr/local/java/jdk1.6/jre/lib

# Optional specific Jvm to be used for master
jvm.masterversion=/usr/local/java/jdk1.6/jre/lib

# Optional specific Jvm to be used for slave
jvm.slaveversion=/usr/local/java/jdk1.6/jre/lib

##############################
# Derby version to be used for client and default for master and slave:
#-----------------------------
derby.version=/home/os136789/Apache/myDerbySandbox/trunk/jars/insane

# Optional specific Derby to be used for master
## derby.masterversion=/home/os136789/Apache/myDerbySandbox/trunk/jars/insane
derby.masterversion=/home/os136789/Replication/trunk_master/jars/insane

# Optional specific Derby to be used for slave
## derby.slaveversion=/home/os136789/Apache/myDerbySandbox/trunk/jars/insane
derby.slaveversion=/home/os136789/Replication/trunk_slave/jars/insane

# test.masterServerPort=2527
# Must use default 1527 if using junit test as load since 1527 is currently hardcoded.
test.masterServerPort=1527
test.slaveServerPort=4527
test.slaveReplPort=6666

#-----------------------------
# Use a special testing jar? E.g. your own experimental:
test.derbyTestingJar=/home/os136789/Apache/myDerbySandbox/trunk/jars/insane/derbyTesting.jar

##############################
# Utilities...
junit_jar=/usr/local/share/java/junit3.8.2/junit.jar
 
##############################
# PoC V2C: sleep between startreplication and startslave to make sure master is ready!
test.sleepTime=15000


############################################################
############################################################
##
## Specifying the possible Loads on the replication master and slave servers
## Example: 'test.masterPreRepl=true' means the masterPreRepl should be run and
##          further specification is found in 'test.masterPreRepl.XXX=...'
##
test.masterPreRepl=false
test.masterPreRepl.load=/home/os136789/Replication/testing/insert.sql
test.masterPreRepl.database=masterPreRepl
test.masterPreRepl.existingDB=false
test.masterPreRepl.clientHost=supra05

test.masterPostRepl=false
test.masterPostRepl.load=/home/os136789/Replication/testing/insert.sql
test.masterPostRepl.database=masterPostRepl
test.masterPostRepl.existingDB=false
test.masterPostRepl.clientHost=supra06

test.slavePreSlave=false
test.slavePreSlave.load=/home/os136789/Replication/testing/insert.sql
test.slavePreSlave.database=slavePreSlave
test.slavePreSlave.existingDB=false
test.slavePreSlave.clientHost=supra05

test.masterPostSlave=false
test.masterPostSlave.load=/home/os136789/Replication/testing/insert.sql
test.masterPostSlave.database=masterPostSlave
test.masterPostSlave.existingDB=false
test.masterPostSlave.clientHost=supra06

test.slavePostSlave=false
test.slavePostSlave.load=/home/os136789/Replication/testing/insert.sql
test.slavePostSlave.database=slavePostSlave
test.slavePostSlave.existingDB=false
test.slavePostSlave.clientHost=supra05

##
##
############################################################
############################################################

############################################################
############################################################
##
## Specifying tests to run in the different states of
## replication.
## See ReplicationRun.java:testreplication() for use.
##
##

# Only ONE-1 of the following will be meaningful in one specific test run.
# test.replicationTest would normally be empty when one of the below is activated.

# Test to run:
# test.PreStartedMasterServer=org.apache.derbyTesting.functionTests.tests.replicationTests.TestPreStartedMasterServer
# true: Return from test framework immediatly:
# Default false. test.PreStartedMasterServer.return=true

# test.PreStartedSlaveServer=org.apache.derbyTesting.functionTests.tests.replicationTests.TestPreStartedSlaveServer
# test.PreStartedSlaveServer.return=true

# The next will star/connect to the master - even without StartMaster=true; beeing accepted!
# I.e. return=true if done.
# test.PreStartedMaster=org.apache.derbyTesting.functionTests.tests.replicationTests.TestPreStartedMaster
# test.PreStartedMaster.return=true

# test.PreInitSlave=org.apache.derbyTesting.functionTests.tests.replicationTests.TestPreInitSlave
# test.PreInitSlave.return=true

# The next will start/connect to the slave - even without StartSlave=true; beeing accepted!
# I.e.must use return=true if set.
# test.PreStartedSlave=org.apache.derbyTesting.functionTests.tests.replicationTests.TestPreStartedSlave
# test.PreStartedSlave.return=true
# If continue: on startslave: PoC: startServer@urd12:4527 pDoR NSC: Database test already booted. Cannot start slave mode. Exiting!

# test.PostStartedMasterAndSlave=org.apache.derbyTesting.functionTests.tests.replicationTests.TestPostStartedMasterAndSlave
# test.PostStartedMasterAndSlave.return=true

# test.PreStoppedMaster=org.apache.derbyTesting.functionTests.tests.replicationTests.TestPreStoppedMaster
# test.PreStoppedMaster.return=true

# test.PreStoppedMasterServer=org.apache.derbyTesting.functionTests.tests.replicationTests.TestPreStoppedMasterServer
# test.PreStoppedMasterServer.return=true

# test.PreStoppedSlave=org.apache.derbyTesting.functionTests.tests.replicationTests.TestPreStoppedSlave
# test.PreStoppedSlave.return=true

# test.PreStoppedSlaveServer=org.apache.derbyTesting.functionTests.tests.replicationTests.TestPreStoppedSlaveServer
# test.PreStoppedSlaveServer.return=true

# test.PostStoppedSlaveServer=org.apache.derbyTesting.functionTests.tests.replicationTests.TestPostStoppedSlaveServer
# test.PostStoppedSlaveServer.return=true

##
##
############################################################
############################################################
