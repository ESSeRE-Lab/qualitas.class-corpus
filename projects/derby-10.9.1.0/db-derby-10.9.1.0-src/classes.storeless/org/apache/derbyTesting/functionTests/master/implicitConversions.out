ij> --
--   Licensed to the Apache Software Foundation (ASF) under one or more
--   contributor license agreements.  See the NOTICE file distributed with
--   this work for additional information regarding copyright ownership.
--   The ASF licenses this file to You under the Apache License, Version 2.0
--   (the "License"); you may not use this file except in compliance with
--   the License.  You may obtain a copy of the License at
--
--      http://www.apache.org/licenses/LICENSE-2.0
--
--   Unless required by applicable law or agreed to in writing, software
--   distributed under the License is distributed on an "AS IS" BASIS,
--   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
--   See the License for the specific language governing permissions and
--   limitations under the License.
--
-- ** insert implicitConversionsPositive.sql
-- tests for implicit conversions between string and non-string types
-- and vice versa

-- create an all types table
create table all1(si smallint, i int, li bigint, r real, 
				  dp double precision, dc decimal(5,1), num numeric(5,1),
				  b char(2) for bit data, bv varchar(2) for bit data,
				  lbv long varchar FOR bit data,
				  dt date, tm time, tms timestamp,
				  c char(1), vc varchar(1), lvc long varchar);
0 rows inserted/updated/deleted
ij> -- populate table
insert into all1 values (2, 3, 4, 5.5, 6.6, 7.7, 8.8,
				  		 X'0020', X'0020', X'0020',
				  		 date('1996-09-09'), time('12:12:12'), 
				  		 timestamp('1996-09-09 12:12:12.5'),
				  		 '1', '2', '33333333');
1 row inserted/updated/deleted
ij> -- unions between string and non-string types
values cast(1 as smallint), cast('2' as char(1));
ERROR 42X61: Types 'SMALLINT' and 'CHAR' are not UNION compatible.
ij> values cast(1 as smallint), cast('2' as varchar(1));
ERROR 42X61: Types 'SMALLINT' and 'VARCHAR' are not UNION compatible.
ij> values cast(1 as smallint), cast('2' as long varchar);
ERROR 42X61: Types 'SMALLINT' and 'LONG VARCHAR' are not UNION compatible.
ij> values cast('2' as char(1)), cast(1 as smallint);
ERROR 42X61: Types 'CHAR' and 'SMALLINT' are not UNION compatible.
ij> values cast('2' as varchar(1)), cast(1 as smallint);
ERROR 42X61: Types 'VARCHAR' and 'SMALLINT' are not UNION compatible.
ij> values cast('2' as long varchar), cast(1 as smallint);
ERROR 42X61: Types 'LONG VARCHAR' and 'SMALLINT' are not UNION compatible.
ij> values cast(1 as int), cast('2' as char(1));
ERROR 42X61: Types 'INTEGER' and 'CHAR' are not UNION compatible.
ij> values cast(1 as int), cast('2' as varchar(1));
ERROR 42X61: Types 'INTEGER' and 'VARCHAR' are not UNION compatible.
ij> values cast(1 as int), cast('2' as long varchar);
ERROR 42X61: Types 'INTEGER' and 'LONG VARCHAR' are not UNION compatible.
ij> values cast('2' as char(1)), cast(1 as int);
ERROR 42X61: Types 'CHAR' and 'INTEGER' are not UNION compatible.
ij> values cast('2' as varchar(1)), cast(1 as int);
ERROR 42X61: Types 'VARCHAR' and 'INTEGER' are not UNION compatible.
ij> values cast('2' as long varchar), cast(1 as int);
ERROR 42X61: Types 'LONG VARCHAR' and 'INTEGER' are not UNION compatible.
ij> values cast(1 as bigint), cast('2' as char(1));
ERROR 42X61: Types 'BIGINT' and 'CHAR' are not UNION compatible.
ij> values cast(1 as bigint), cast('2' as varchar(1));
ERROR 42X61: Types 'BIGINT' and 'VARCHAR' are not UNION compatible.
ij> values cast(1 as bigint), cast('2' as long varchar);
ERROR 42X61: Types 'BIGINT' and 'LONG VARCHAR' are not UNION compatible.
ij> values cast('2' as char(1)), cast(1 as bigint);
ERROR 42X61: Types 'CHAR' and 'BIGINT' are not UNION compatible.
ij> values cast('2' as varchar(1)), cast(1 as bigint);
ERROR 42X61: Types 'VARCHAR' and 'BIGINT' are not UNION compatible.
ij> values cast('2' as long varchar), cast(1 as bigint);
ERROR 42X61: Types 'LONG VARCHAR' and 'BIGINT' are not UNION compatible.
ij> values cast(1.1 as real), cast('2' as char(1));
ERROR 42X61: Types 'REAL' and 'CHAR' are not UNION compatible.
ij> values cast(1.1 as real), cast('2' as varchar(1));
ERROR 42X61: Types 'REAL' and 'VARCHAR' are not UNION compatible.
ij> values cast(1.1 as real), cast('2' as long varchar);
ERROR 42X61: Types 'REAL' and 'LONG VARCHAR' are not UNION compatible.
ij> values cast('2' as char(1)), cast(1.1 as real);
ERROR 42X61: Types 'CHAR' and 'REAL' are not UNION compatible.
ij> values cast('2' as varchar(1)), cast(1.1 as real);
ERROR 42X61: Types 'VARCHAR' and 'REAL' are not UNION compatible.
ij> values cast('2' as long varchar), cast(1.1 as real);
ERROR 42X61: Types 'LONG VARCHAR' and 'REAL' are not UNION compatible.
ij> values cast(1.1 as double precision), cast('2' as char(1));
ERROR 42X61: Types 'DOUBLE' and 'CHAR' are not UNION compatible.
ij> values cast(1.1 as double precision), cast('2' as varchar(1));
ERROR 42X61: Types 'DOUBLE' and 'VARCHAR' are not UNION compatible.
ij> values cast(1.1 as double precision), cast('2' as long varchar);
ERROR 42X61: Types 'DOUBLE' and 'LONG VARCHAR' are not UNION compatible.
ij> values cast('2' as char(1)), cast(1.1 as double precision);
ERROR 42X61: Types 'CHAR' and 'DOUBLE' are not UNION compatible.
ij> values cast('2' as varchar(1)), cast(1.1 as double precision);
ERROR 42X61: Types 'VARCHAR' and 'DOUBLE' are not UNION compatible.
ij> values cast('2' as long varchar), cast(1.1 as double precision);
ERROR 42X61: Types 'LONG VARCHAR' and 'DOUBLE' are not UNION compatible.
ij> values cast(1.1 as decimal(5,1)), cast('2' as char(1));
ERROR 42X61: Types 'DECIMAL' and 'CHAR' are not UNION compatible.
ij> values cast(1.1 as decimal(5,1)), cast('2' as varchar(1));
ERROR 42X61: Types 'DECIMAL' and 'VARCHAR' are not UNION compatible.
ij> values cast(1.1 as decimal(5,1)), cast('2' as long varchar);
ERROR 42X61: Types 'DECIMAL' and 'LONG VARCHAR' are not UNION compatible.
ij> values cast('2' as char(1)), cast(1.1 as decimal(5,1));
ERROR 42X61: Types 'CHAR' and 'DECIMAL' are not UNION compatible.
ij> values cast('2' as varchar(1)), cast(1.1 as decimal(5,1));
ERROR 42X61: Types 'VARCHAR' and 'DECIMAL' are not UNION compatible.
ij> values cast('2' as long varchar), cast(1.1 as decimal(5,1));
ERROR 42X61: Types 'LONG VARCHAR' and 'DECIMAL' are not UNION compatible.
ij> values cast(1.1 as decimal(5,1)), '0.002';
ERROR 42X61: Types 'DECIMAL' and 'CHAR' are not UNION compatible.
ij> values cast(1.1 as decimal(5,1)), '0.002';
ERROR 42X61: Types 'DECIMAL' and 'CHAR' are not UNION compatible.
ij> values '0.002', cast(1.1 as decimal(5,1));
ERROR 42X61: Types 'CHAR' and 'DECIMAL' are not UNION compatible.
ij> values '0.002', cast(1.1 as decimal(5,1));
ERROR 42X61: Types 'CHAR' and 'DECIMAL' are not UNION compatible.
ij> values 'abcde', 'fghij';
1    
-----
abcde
fghij
ij> values 'abcde', cast('fghij' as varchar(5));
1    
-----
abcde
fghij
ij> values 'abcde', cast('fghij' as long varchar);
1                                                                                                                               
--------------------------------------------------------------------------------------------------------------------------------
abcde                                                                                                                           
fghij                                                                                                                           
ij> values cast('abcde' as varchar(5)), 'fghij';
1    
-----
abcde
fghij
ij> values cast('abcde' as long varchar), 'fghij';
1                                                                                                                               
--------------------------------------------------------------------------------------------------------------------------------
abcde                                                                                                                           
fghij                                                                                                                           
ij> -- DB2 UDB allows comparisons between hex constants and character constants
-- DB2 CS does not allow comparisons between hex constants and character constants
values X'01', '3';
ERROR 42X61: Types 'CHAR () FOR BIT DATA' and 'CHAR' are not UNION compatible.
ij> values X'01', cast('3' as varchar(5));
ERROR 42X61: Types 'CHAR () FOR BIT DATA' and 'VARCHAR' are not UNION compatible.
ij> values X'01', cast('3' as long varchar);
ERROR 42X61: Types 'CHAR () FOR BIT DATA' and 'LONG VARCHAR' are not UNION compatible.
ij> values '3', X'01';
ERROR 42X61: Types 'CHAR' and 'CHAR () FOR BIT DATA' are not UNION compatible.
ij> values cast('3' as varchar(5)), X'01';
ERROR 42X61: Types 'VARCHAR' and 'CHAR () FOR BIT DATA' are not UNION compatible.
ij> values cast('3' as long varchar), X'01';
ERROR 42X61: Types 'LONG VARCHAR' and 'CHAR () FOR BIT DATA' are not UNION compatible.
ij> values date('1996-09-09'), '1995-08-08';
1         
----------
1996-09-09
1995-08-08
ij> values date('1996-09-09'), cast('1995-08-08' as varchar(10));
1         
----------
1996-09-09
1995-08-08
ij> values date('1996-09-09'), cast('1995-08-08' as long varchar);
ERROR 42X61: Types 'DATE' and 'LONG VARCHAR' are not UNION compatible.
ij> values '1995-08-08', date('1996-09-09');
1         
----------
1995-08-08
1996-09-09
ij> values cast('1995-08-08' as varchar(10)), date('1996-09-09');
1         
----------
1995-08-08
1996-09-09
ij> values cast('1995-08-08' as long varchar), date('1996-09-09');
ERROR 42X61: Types 'LONG VARCHAR' and 'DATE' are not UNION compatible.
ij> values time('12:12:12'), '11:11:11';
1       
--------
12:12:12
11:11:11
ij> values time('12:12:12'), cast('11:11:11' as varchar(8));
1       
--------
12:12:12
11:11:11
ij> values time('12:12:12'), cast('11:11:11' as long varchar);
ERROR 42X61: Types 'TIME' and 'LONG VARCHAR' are not UNION compatible.
ij> values '11:11:11', time('12:12:12');
1       
--------
11:11:11
12:12:12
ij> values cast('11:11:11' as varchar(8)), time('12:12:12');
1       
--------
11:11:11
12:12:12
ij> values cast('11:11:11' as long varchar), time('12:12:12');
ERROR 42X61: Types 'LONG VARCHAR' and 'TIME' are not UNION compatible.
ij> values timestamp('1996-09-09 12:12:12.5'), '1996-08-08 11:11:11.1';
1                            
-----------------------------
1996-09-09 12:12:12.5        
1996-08-08 11:11:11.1        
ij> values timestamp('1996-09-09 12:12:12.5'), cast('1996-08-08 11:11:11.1' as varchar(30));
1                            
-----------------------------
1996-09-09 12:12:12.5        
1996-08-08 11:11:11.1        
ij> values timestamp('1996-09-09 12:12:12.5'), cast('1996-08-08 11:11:11.1' as long varchar);
ERROR 42X61: Types 'TIMESTAMP' and 'LONG VARCHAR' are not UNION compatible.
ij> values '1996-08-08 11:11:11.1', timestamp('1996-09-09 12:12:12.5');
1                            
-----------------------------
1996-08-08 11:11:11.1        
1996-09-09 12:12:12.5        
ij> values cast('1996-08-08 11:11:11.1' as varchar(30)), timestamp('1996-09-09 12:12:12.5');
1                            
-----------------------------
1996-08-08 11:11:11.1        
1996-09-09 12:12:12.5        
ij> values cast('1996-08-08 11:11:11.1' as long varchar), timestamp('1996-09-09 12:12:12.5');
ERROR 42X61: Types 'LONG VARCHAR' and 'TIMESTAMP' are not UNION compatible.
ij> -- comparisons at the language level
select si from all1 where cast(1 as smallint) = '1';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as smallint) > '2';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as smallint) >= '2';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as smallint) < '2';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as smallint) <= '2';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as smallint) <> '2';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as smallint) = cast(null as char);
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as smallint) > cast(null as char);
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as smallint) >= cast(null as char);
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as smallint) < cast(null as char);
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as smallint) <= cast(null as char);
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as smallint) <> cast(null as char);
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '1' = cast(1 as smallint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' > cast(1 as smallint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' >= cast(1 as smallint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' < cast(1 as smallint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' <= cast(1 as smallint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' <> cast(1 as smallint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) = cast(1 as smallint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) > cast(1 as smallint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) >= cast(1 as smallint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) < cast(1 as smallint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) <= cast(1 as smallint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) <> cast(1 as smallint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as int) = '1';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as int) > '2';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as int) >= '2';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as int) < '2';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as int) <= '2';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as int) <> '2';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as int) = cast(null as char);
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as int) > cast(null as char);
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as int) >= cast(null as char);
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as int) < cast(null as char);
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as int) <= cast(null as char);
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as int) <> cast(null as char);
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '1' = cast(1 as int);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' > cast(1 as int);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' >= cast(1 as int);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' < cast(1 as int);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' <> cast(1 as int);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' <= cast(1 as int);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) = cast(1 as int);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) > cast(1 as int);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) >= cast(1 as int);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) < cast(1 as int);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) <> cast(1 as int);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) <= cast(1 as int);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as bigint) = '1';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as bigint) > '2';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as bigint) >= '2';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as bigint) < '2';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as bigint) <= '2';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as bigint) <> '2';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as bigint) = cast(null as char);
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as bigint) > cast(null as char);
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as bigint) >= cast(null as char);
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as bigint) < cast(null as char);
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as bigint) <= cast(null as char);
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as bigint) <> cast(null as char);
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '1' = cast(1 as bigint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' > cast(1 as bigint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' >= cast(1 as bigint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' < cast(1 as bigint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' <= cast(1 as bigint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' <> cast(1 as bigint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) = cast(1 as bigint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) > cast(1 as bigint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) >= cast(1 as bigint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) < cast(1 as bigint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) <= cast(1 as bigint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) <> cast(1 as bigint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as real) = '1';
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as real) > '2';
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as real) >= '2';
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as real) < '2';
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as real) <> '2';
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as real) <= '2';
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as real) = cast(null as char);
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as real) > cast(null as char);
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as real) >= cast(null as char);
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as real) < cast(null as char);
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as real) <> cast(null as char);
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as real) <= cast(null as char);
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '1' = cast(1 as real);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'REAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' > cast(1 as real);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'REAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' >= cast(1 as real);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'REAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' < cast(1 as real);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'REAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' <= cast(1 as real);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'REAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' <> cast(1 as real);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'REAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) = cast(1 as real);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'REAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) > cast(1 as real);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'REAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) >= cast(1 as real);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'REAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) < cast(1 as real);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'REAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) <= cast(1 as real);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'REAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) <> cast(1 as real);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'REAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as double precision) = '1';
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as double precision) > '2';
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as double precision) >= '2';
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as double precision) < '2';
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as double precision) <= '2';
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as double precision) <> '2';
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as double precision) = cast(null as char);
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as double precision) > cast(null as char);
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as double precision) >= cast(null as char);
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as double precision) < cast(null as char);
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as double precision) <= cast(null as char);
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as double precision) <> cast(null as char);
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '1' = cast(1 as double precision);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DOUBLE' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' > cast(1 as double precision);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DOUBLE' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' >= cast(1 as double precision);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DOUBLE' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' < cast(1 as double precision);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DOUBLE' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' <= cast(1 as double precision);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DOUBLE' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' <> cast(1 as double precision);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DOUBLE' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) = cast(1 as double precision);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DOUBLE' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) > cast(1 as double precision);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DOUBLE' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) >= cast(1 as double precision);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DOUBLE' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) < cast(1 as double precision);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DOUBLE' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) <= cast(1 as double precision);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DOUBLE' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) <> cast(1 as double precision);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DOUBLE' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as numeric) = '1';
ERROR 42818: Comparisons between 'NUMERIC' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as numeric) > '2';
ERROR 42818: Comparisons between 'NUMERIC' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as numeric) >= '2';
ERROR 42818: Comparisons between 'NUMERIC' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as numeric) < '2';
ERROR 42818: Comparisons between 'NUMERIC' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as numeric) <= '2';
ERROR 42818: Comparisons between 'NUMERIC' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as numeric) <> '2';
ERROR 42818: Comparisons between 'NUMERIC' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as numeric) = cast(null as char);
ERROR 42818: Comparisons between 'NUMERIC' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as numeric) > cast(null as char);
ERROR 42818: Comparisons between 'NUMERIC' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as numeric) >= cast(null as char);
ERROR 42818: Comparisons between 'NUMERIC' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as numeric) < cast(null as char);
ERROR 42818: Comparisons between 'NUMERIC' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as numeric) <= cast(null as char);
ERROR 42818: Comparisons between 'NUMERIC' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as numeric) <> cast(null as char);
ERROR 42818: Comparisons between 'NUMERIC' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '1' = cast(1 as numeric);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'NUMERIC' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' > cast(1 as numeric);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'NUMERIC' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' >= cast(1 as numeric);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'NUMERIC' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' < cast(1 as numeric);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'NUMERIC' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' <= cast(1 as numeric);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'NUMERIC' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '2' <> cast(1 as numeric);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'NUMERIC' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) = cast(1 as numeric);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'NUMERIC' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) > cast(1 as numeric);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'NUMERIC' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) >= cast(1 as numeric);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'NUMERIC' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) < cast(1 as numeric);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'NUMERIC' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) <= cast(1 as numeric);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'NUMERIC' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) <> cast(1 as numeric);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'NUMERIC' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> -- the following queries return 1 if the search condition is satisfied
-- and returns nothing if the search condition is not satisfied
select 1 from all1 where '1996-09-09' = date('1996-09-09');
1          
-----------
1          
ij> select 1 from all1 where '1996-9-10' > date('1996-09-09');
1          
-----------
1          
ij> select 1 from all1 where '1996-9-10' >= date('1996-09-09');
1          
-----------
1          
ij> select 1 from all1 where '1996-9-10' < date('1996-09-09');
1          
-----------
ij> select 1 from all1 where '1996-9-10' <= date('1996-09-09');
1          
-----------
ij> select 1 from all1 where '1996-9-10' <> date('1996-09-09');
1          
-----------
1          
ij> select 1 from all1 where cast(null as char) = date('1996-09-09');
1          
-----------
ij> select 1 from all1 where cast(null as char)> date('1996-09-09');
1          
-----------
ij> select 1 from all1 where cast(null as char)>= date('1996-09-09');
1          
-----------
ij> select 1 from all1 where cast(null as char)< date('1996-09-09');
1          
-----------
ij> select 1 from all1 where cast(null as char)<= date('1996-09-09');
1          
-----------
ij> select 1 from all1 where cast(null as char)<> date('1996-09-09');
1          
-----------
ij> select 1 from all1 where date('1996-09-09') = '1996-09-09';
1          
-----------
1          
ij> select 1 from all1 where date('1996-9-10') > '1996-09-09';
1          
-----------
1          
ij> select 1 from all1 where date('1996-9-10') >= '1996-09-09';
1          
-----------
1          
ij> select 1 from all1 where date('1996-9-10') < '1996-09-09';
1          
-----------
ij> select 1 from all1 where date('1996-9-10') <= '1996-09-09';
1          
-----------
ij> select 1 from all1 where date('1996-9-10') <> '1996-09-09';
1          
-----------
1          
ij> select 1 from all1 where date('1996-09-09') = cast(null as char);
1          
-----------
ij> select 1 from all1 where date('1996-9-10') > cast(null as char);
1          
-----------
ij> select 1 from all1 where date('1996-9-10') >= cast(null as char);
1          
-----------
ij> select 1 from all1 where date('1996-9-10') < cast(null as char);
1          
-----------
ij> select 1 from all1 where date('1996-9-10') <= cast(null as char);
1          
-----------
ij> select 1 from all1 where date('1996-9-10') <> cast(null as char);
1          
-----------
ij> select 1 from all1 where '12:12:12' = time('12:12:12');
1          
-----------
1          
ij> select 1 from all1 where '12:13:12' > time('12:12:12');
1          
-----------
1          
ij> select 1 from all1 where '12:13:12' >= time('12:12:12');
1          
-----------
1          
ij> select 1 from all1 where '12:13:12' < time('12:12:12');
1          
-----------
ij> select 1 from all1 where '12:13:12' <= time('12:12:12');
1          
-----------
ij> select 1 from all1 where '12:13:12' <> time('12:12:12');
1          
-----------
1          
ij> select 1 from all1 where cast(null as char) = time('12:12:12');
1          
-----------
ij> select 1 from all1 where cast(null as char) > time('12:12:12');
1          
-----------
ij> select 1 from all1 where cast(null as char) >= time('12:12:12');
1          
-----------
ij> select 1 from all1 where cast(null as char) < time('12:12:12');
1          
-----------
ij> select 1 from all1 where cast(null as char) <= time('12:12:12');
1          
-----------
ij> select 1 from all1 where cast(null as char) <> time('12:12:12');
1          
-----------
ij> select 1 from all1 where time('12:12:12') = '12:12:12';
1          
-----------
1          
ij> select 1 from all1 where time('12:13:12') > '12:12:12';
1          
-----------
1          
ij> select 1 from all1 where time('12:13:12') >= '12:12:12';
1          
-----------
1          
ij> select 1 from all1 where time('12:13:12') < '12:12:12';
1          
-----------
ij> select 1 from all1 where time('12:13:12') <= '12:12:12';
1          
-----------
ij> select 1 from all1 where time('12:13:12') <> '12:12:12';
1          
-----------
1          
ij> select 1 from all1 where time('12:12:12') = cast(null as char);
1          
-----------
ij> select 1 from all1 where time('12:13:12') > cast(null as char);
1          
-----------
ij> select 1 from all1 where time('12:13:12') >= cast(null as char);
1          
-----------
ij> select 1 from all1 where time('12:13:12') < cast(null as char);
1          
-----------
ij> select 1 from all1 where time('12:13:12') <= cast(null as char);
1          
-----------
ij> select 1 from all1 where time('12:13:12') <> cast(null as char);
1          
-----------
ij> select 1 from all1 where '1996-09-09 12:12:12.4' = timestamp('1996-09-09 12:12:12.4');
1          
-----------
1          
ij> select 1 from all1 where '1996-09-09 12:12:12.5' > timestamp('1996-09-09 12:12:12.4');
1          
-----------
1          
ij> select 1 from all1 where '1996-09-09 12:12:12.5' >= timestamp('1996-09-09 12:12:12.4');
1          
-----------
1          
ij> select 1 from all1 where '1996-09-09 12:12:12.5' < timestamp('1996-09-09 12:12:12.4');
1          
-----------
ij> select 1 from all1 where '1996-09-09 12:12:12.5' <= timestamp('1996-09-09 12:12:12.4');
1          
-----------
ij> select 1 from all1 where '1996-09-09 12:12:12.5' <> timestamp('1996-09-09 12:12:12.4');
1          
-----------
1          
ij> select 1 from all1 where cast(null as char) = timestamp('1996-09-09 12:12:12.4');
1          
-----------
ij> select 1 from all1 where cast(null as char) > timestamp('1996-09-09 12:12:12.4');
1          
-----------
ij> select 1 from all1 where cast(null as char) >= timestamp('1996-09-09 12:12:12.4');
1          
-----------
ij> select 1 from all1 where cast(null as char) < timestamp('1996-09-09 12:12:12.4');
1          
-----------
ij> select 1 from all1 where cast(null as char) <= timestamp('1996-09-09 12:12:12.4');
1          
-----------
ij> select 1 from all1 where cast(null as char) <> timestamp('1996-09-09 12:12:12.4');
1          
-----------
ij> select 1 from all1 where timestamp('1996-09-09 12:12:12.4' )= '1996-09-09 12:12:12.4';
1          
-----------
1          
ij> select 1 from all1 where timestamp('1996-09-09 12:12:12.5' )> '1996-09-09 12:12:12.4';
1          
-----------
1          
ij> select 1 from all1 where timestamp('1996-09-09 12:12:12.5' )>= '1996-09-09 12:12:12.4';
1          
-----------
1          
ij> select 1 from all1 where timestamp('1996-09-09 12:12:12.5' )< '1996-09-09 12:12:12.4';
1          
-----------
ij> select 1 from all1 where timestamp('1996-09-09 12:12:12.5' )<= '1996-09-09 12:12:12.4';
1          
-----------
ij> select 1 from all1 where timestamp('1996-09-09 12:12:12.5' )<> '1996-09-09 12:12:12.4';
1          
-----------
1          
ij> select 1 from all1 where timestamp('1996-09-09 12:12:12.4' )= cast(null as char);
1          
-----------
ij> select 1 from all1 where timestamp('1996-09-09 12:12:12.5' )> cast(null as char);
1          
-----------
ij> select 1 from all1 where timestamp('1996-09-09 12:12:12.5' )>= cast(null as char);
1          
-----------
ij> select 1 from all1 where timestamp('1996-09-09 12:12:12.5' )< cast(null as char);
1          
-----------
ij> select 1 from all1 where timestamp('1996-09-09 12:12:12.5' )<= cast(null as char);
1          
-----------
ij> select 1 from all1 where timestamp('1996-09-09 12:12:12.5' )<> cast(null as char);
1          
-----------
ij> select si from all1 where ' ' = X'0020';
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'CHAR () FOR BIT DATA' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where ' ' > X'001F';
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'CHAR () FOR BIT DATA' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where ' ' >= X'001F';
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'CHAR () FOR BIT DATA' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where ' ' < X'001F';
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'CHAR () FOR BIT DATA' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where ' ' <= X'001F';
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'CHAR () FOR BIT DATA' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where ' ' <> X'001F';
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'CHAR () FOR BIT DATA' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) = X'0020';
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'CHAR () FOR BIT DATA' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) > X'001F';
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'CHAR () FOR BIT DATA' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) >= X'001F';
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'CHAR () FOR BIT DATA' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) < X'001F';
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'CHAR () FOR BIT DATA' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) <= X'001F';
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'CHAR () FOR BIT DATA' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(null as char) <> X'001F';
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'CHAR () FOR BIT DATA' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where X'0020' = ' ';
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where X'001F' > ' ';
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where X'001F' >= ' ';
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where X'001F' < ' ';
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where X'001F' <= ' ';
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where X'001F' <> ' ';
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where X'0020' = cast(null as char);
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where X'001F' > cast(null as char);
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where X'001F' >= cast(null as char);
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where X'001F' < cast(null as char);
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where X'001F' <= cast(null as char);
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where X'001F' <> cast(null as char);
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> create table all_c1(c_ti char(3), c_si char(10), c_i char(30), c_li char(30), 
					c_r char(50), c_dp char(50), c_dc char(10), 
					c_num char(50), c_bool char(5), c_b char(8), 
					vc_bv varchar(16), vc_lbv varchar(16), c_dt char(10),
					c_tm char(16), c_tms char(21), c_c char(30),
					vc_vc char(30), c_lvc char(30));
0 rows inserted/updated/deleted
ij> insert into all_c1 values ('1', '2', '3', '4', '5.5', '6.6', '7.7', '8.8',
						   'true', ' ', ' ', ' ', '1996-09-09', '12:12:12',
						   '1996-09-09 12:12:12.5', '1', '2', '33333333');
1 row inserted/updated/deleted
ij> -- test qualifiers with conversion from (var)char
select 1 from all_c1, all1 where si = c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where si > c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where si >= c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where si < c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where si <= c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where si <> c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where i = c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where i > c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where i >= c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where i < c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where i <= c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where i <> c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where li = c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where li > c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where li >= c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where li < c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where li <= c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where li <> c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where r = c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where r > c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where r >= c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where r < c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where r <= c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where r <> c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dp = c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dp > c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dp >= c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dp < c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dp <= c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dp <> c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dc = c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dc > c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dc >= c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dc < c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dc <= c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dc <> c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where b = c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where b > c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where b >= c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where b < c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where b <= c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where b <> c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where bv = vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where bv > vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where bv >= vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where bv < vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where bv <= vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where bv <> vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lbv = vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lbv > vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lbv >= vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lbv < vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lbv <= vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lbv <> vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dt = c_dt;
1          
-----------
1          
ij> select 1 from all_c1, all1 where dt > c_dt;
1          
-----------
ij> select 1 from all_c1, all1 where dt >= c_dt;
1          
-----------
1          
ij> select 1 from all_c1, all1 where dt < c_dt;
1          
-----------
ij> select 1 from all_c1, all1 where dt <= c_dt;
1          
-----------
1          
ij> select 1 from all_c1, all1 where dt <> c_dt;
1          
-----------
ij> select 1 from all_c1, all1 where tm = c_tm;
1          
-----------
1          
ij> select 1 from all_c1, all1 where tm > c_tm;
1          
-----------
ij> select 1 from all_c1, all1 where tm >= c_tm;
1          
-----------
1          
ij> select 1 from all_c1, all1 where tm < c_tm;
1          
-----------
ij> select 1 from all_c1, all1 where tm <= c_tm;
1          
-----------
1          
ij> select 1 from all_c1, all1 where tm <> c_tm;
1          
-----------
ij> select 1 from all_c1, all1 where tms = c_tms;
1          
-----------
1          
ij> select 1 from all_c1, all1 where tms > c_tms;
1          
-----------
ij> select 1 from all_c1, all1 where tms >= c_tms;
1          
-----------
1          
ij> select 1 from all_c1, all1 where tms < c_tms;
1          
-----------
ij> select 1 from all_c1, all1 where tms <= c_tms;
1          
-----------
1          
ij> select 1 from all_c1, all1 where tms <> c_tms;
1          
-----------
ij> select 1 from all_c1, all1 where lvc = c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lvc > c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lvc >= c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lvc < c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lvc <= c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lvc <> c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> autocommit off;
ij> delete from all_c1;
1 row inserted/updated/deleted
ij> insert into all_c1 (c_ti) values (null);
1 row inserted/updated/deleted
ij> select 1 from all_c1, all1 where si = c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where si > c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where si >= c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where si < c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where si <= c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where si <> c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where i = c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where i > c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where i >= c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where i < c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where i <= c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where i <> c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where li = c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where li > c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where li >= c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where li < c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where li <= c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where li <> c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where r = c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where r > c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where r >= c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where r < c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where r <= c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where r <> c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dp = c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dp > c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dp >= c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dp < c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dp <= c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dp <> c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dc = c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dc > c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dc >= c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dc < c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dc <= c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dc <> c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where b = c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where b > c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where b >= c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where b < c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where b <= c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where b <> c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where bv = vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where bv > vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where bv >= vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where bv < vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where bv <= vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where bv <> vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lbv = vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lbv > vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lbv >= vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lbv < vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lbv <= vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lbv <> vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dt = c_dt;
1          
-----------
ij> select 1 from all_c1, all1 where dt > c_dt;
1          
-----------
ij> select 1 from all_c1, all1 where dt >= c_dt;
1          
-----------
ij> select 1 from all_c1, all1 where dt < c_dt;
1          
-----------
ij> select 1 from all_c1, all1 where dt <= c_dt;
1          
-----------
ij> select 1 from all_c1, all1 where dt <> c_dt;
1          
-----------
ij> select 1 from all_c1, all1 where tm = c_tm;
1          
-----------
ij> select 1 from all_c1, all1 where tm > c_tm;
1          
-----------
ij> select 1 from all_c1, all1 where tm >= c_tm;
1          
-----------
ij> select 1 from all_c1, all1 where tm < c_tm;
1          
-----------
ij> select 1 from all_c1, all1 where tm <= c_tm;
1          
-----------
ij> select 1 from all_c1, all1 where tm <> c_tm;
1          
-----------
ij> select 1 from all_c1, all1 where tms = c_tms;
1          
-----------
ij> select 1 from all_c1, all1 where tms > c_tms;
1          
-----------
ij> select 1 from all_c1, all1 where tms >= c_tms;
1          
-----------
ij> select 1 from all_c1, all1 where tms < c_tms;
1          
-----------
ij> select 1 from all_c1, all1 where tms <= c_tms;
1          
-----------
ij> select 1 from all_c1, all1 where tms <> c_tms;
1          
-----------
ij> select 1 from all_c1, all1 where lvc = c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lvc > c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lvc >= c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lvc < c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lvc <= c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lvc <> c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> rollback;
ij> -- test start and stop positions for conversions to (var)char
create index all_c1_ti on all_c1(c_ti);
0 rows inserted/updated/deleted
ij> create index all_c1_si on all_c1(c_si);
0 rows inserted/updated/deleted
ij> create index all_c1_i on all_c1(c_i);
0 rows inserted/updated/deleted
ij> create index all_c1_li on all_c1(c_li);
0 rows inserted/updated/deleted
ij> create index all_c1_r on all_c1(c_r);
0 rows inserted/updated/deleted
ij> create index all_c1_dp on all_c1(c_dp);
0 rows inserted/updated/deleted
ij> create index all_c1_dc on all_c1(c_dc);
0 rows inserted/updated/deleted
ij> create index all_c1_num on all_c1(c_num);
0 rows inserted/updated/deleted
ij> create index all_c1_bool on all_c1(c_bool);
0 rows inserted/updated/deleted
ij> create index all_c1_b on all_c1(c_b);
0 rows inserted/updated/deleted
ij> create index all_c1_bv on all_c1(vc_bv);
0 rows inserted/updated/deleted
ij> create index all_c1_dt on all_c1(c_dt);
0 rows inserted/updated/deleted
ij> create index all_c1_tm on all_c1(c_tm);
0 rows inserted/updated/deleted
ij> create index all_c1_tms on all_c1(c_tms);
0 rows inserted/updated/deleted
ij> create index all_c1_lvc on all_c1(c_lvc);
0 rows inserted/updated/deleted
ij> select 1 from all_c1, all1 where si = c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where si > c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where si >= c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where si < c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where si <= c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where i = c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where i > c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where i >= c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where i < c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where i <= c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where li = c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where li > c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where li >= c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where li < c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where li <= c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where r = c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where r > c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where r >= c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where r < c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where r <= c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dp = c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dp > c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dp >= c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dp < c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dp <= c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dc = c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dc > c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dc >= c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dc < c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dc <= c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where b = c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where b > c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where b >= c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where b < c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where b <= c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where bv = vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where bv > vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where bv >= vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where bv < vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where bv <= vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lbv = vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lbv > vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lbv >= vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lbv < vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lbv <= vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dt = c_dt;
1          
-----------
1          
ij> select 1 from all_c1, all1 where dt > c_dt;
1          
-----------
ij> select 1 from all_c1, all1 where dt >= c_dt;
1          
-----------
1          
ij> select 1 from all_c1, all1 where dt < c_dt;
1          
-----------
ij> select 1 from all_c1, all1 where dt <= c_dt;
1          
-----------
1          
ij> select 1 from all_c1, all1 where tm = c_tm;
1          
-----------
1          
ij> select 1 from all_c1, all1 where tm > c_tm;
1          
-----------
ij> select 1 from all_c1, all1 where tm >= c_tm;
1          
-----------
1          
ij> select 1 from all_c1, all1 where tm < c_tm;
1          
-----------
ij> select 1 from all_c1, all1 where tm <= c_tm;
1          
-----------
1          
ij> select 1 from all_c1, all1 where tms = c_tms;
1          
-----------
1          
ij> select 1 from all_c1, all1 where tms > c_tms;
1          
-----------
ij> select 1 from all_c1, all1 where tms >= c_tms;
1          
-----------
1          
ij> select 1 from all_c1, all1 where tms < c_tms;
1          
-----------
ij> select 1 from all_c1, all1 where tms <= c_tms;
1          
-----------
1          
ij> select 1 from all_c1, all1 where lvc = c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lvc > c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lvc >= c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lvc < c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lvc <= c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> delete from all_c1;
1 row inserted/updated/deleted
ij> insert into all_c1 (c_ti) values (null);
1 row inserted/updated/deleted
ij> select 1 from all_c1, all1 where si = c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where si > c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where si >= c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where si < c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where si <= c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where i = c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where i > c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where i >= c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where i < c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where i <= c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where li = c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where li > c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where li >= c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where li < c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where li <= c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where r = c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where r > c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where r >= c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where r < c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where r <= c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dp = c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dp > c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dp >= c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dp < c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dp <= c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dc = c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dc > c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dc >= c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dc < c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dc <= c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where b = c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where b > c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where b >= c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where b < c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where b <= c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where bv = vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where bv > vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where bv >= vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where bv < vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where bv <= vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lbv = vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lbv > vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lbv >= vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lbv < vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lbv <= vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where dt = c_dt;
1          
-----------
ij> select 1 from all_c1, all1 where dt > c_dt;
1          
-----------
ij> select 1 from all_c1, all1 where dt >= c_dt;
1          
-----------
ij> select 1 from all_c1, all1 where dt < c_dt;
1          
-----------
ij> select 1 from all_c1, all1 where dt <= c_dt;
1          
-----------
ij> select 1 from all_c1, all1 where tm = c_tm;
1          
-----------
ij> select 1 from all_c1, all1 where tm > c_tm;
1          
-----------
ij> select 1 from all_c1, all1 where tm >= c_tm;
1          
-----------
ij> select 1 from all_c1, all1 where tm < c_tm;
1          
-----------
ij> select 1 from all_c1, all1 where tm <= c_tm;
1          
-----------
ij> select 1 from all_c1, all1 where tms = c_tms;
1          
-----------
ij> select 1 from all_c1, all1 where tms > c_tms;
1          
-----------
ij> select 1 from all_c1, all1 where tms >= c_tms;
1          
-----------
ij> select 1 from all_c1, all1 where tms < c_tms;
1          
-----------
ij> select 1 from all_c1, all1 where tms <= c_tms;
1          
-----------
ij> select 1 from all_c1, all1 where lvc = c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lvc > c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lvc >= c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lvc < c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all_c1, all1 where lvc <= c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> -- drop the indexes;
rollback;
ij> -- test qualifiers with conversion to (var)char
select 1 from all1, all_c1 where si = c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where si > c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where si >= c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where si < c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where si <= c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where si <> c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where i = c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where i > c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where i >= c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where i < c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where i <= c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where i <> c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where li = c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where li > c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where li >= c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where li < c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where li <= c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where li <> c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where r = c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where r > c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where r >= c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where r < c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where r <= c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where r <> c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dp = c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dp > c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dp >= c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dp < c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dp <= c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dp <> c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dc = c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dc > c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dc >= c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dc < c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dc <= c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dc <> c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where b = c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where b > c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where b >= c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where b < c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where b <= c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where b <> c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where bv = vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where bv > vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where bv >= vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where bv < vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where bv <= vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where bv <> vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lbv = vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lbv > vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lbv >= vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lbv < vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lbv <= vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lbv <> vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dt = c_dt;
1          
-----------
1          
ij> select 1 from all1, all_c1 where dt > c_dt;
1          
-----------
ij> select 1 from all1, all_c1 where dt >= c_dt;
1          
-----------
1          
ij> select 1 from all1, all_c1 where dt < c_dt;
1          
-----------
ij> select 1 from all1, all_c1 where dt <= c_dt;
1          
-----------
1          
ij> select 1 from all1, all_c1 where dt <> c_dt;
1          
-----------
ij> select 1 from all1, all_c1 where tm = c_tm;
1          
-----------
1          
ij> select 1 from all1, all_c1 where tm > c_tm;
1          
-----------
ij> select 1 from all1, all_c1 where tm >= c_tm;
1          
-----------
1          
ij> select 1 from all1, all_c1 where tm < c_tm;
1          
-----------
ij> select 1 from all1, all_c1 where tm <= c_tm;
1          
-----------
1          
ij> select 1 from all1, all_c1 where tm <> c_tm;
1          
-----------
ij> select 1 from all1, all_c1 where tms = c_tms;
1          
-----------
1          
ij> select 1 from all1, all_c1 where tms > c_tms;
1          
-----------
ij> select 1 from all1, all_c1 where tms >= c_tms;
1          
-----------
1          
ij> select 1 from all1, all_c1 where tms < c_tms;
1          
-----------
ij> select 1 from all1, all_c1 where tms <= c_tms;
1          
-----------
1          
ij> select 1 from all1, all_c1 where tms <> c_tms;
1          
-----------
ij> select 1 from all1, all_c1 where lvc = c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lvc > c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lvc >= c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lvc < c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lvc <= c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lvc <> c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> delete from all1;
1 row inserted/updated/deleted
ij> insert into all1 (si) values (null);
1 row inserted/updated/deleted
ij> select 1 from all1, all_c1 where si = c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where si > c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where si >= c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where si < c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where si <= c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where si <> c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where i = c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where i > c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where i >= c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where i < c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where i <= c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where i <> c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where li = c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where li > c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where li >= c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where li < c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where li <= c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where li <> c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where r = c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where r > c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where r >= c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where r < c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where r <= c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where r <> c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dp = c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dp > c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dp >= c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dp < c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dp <= c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dp <> c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dc = c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dc > c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dc >= c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dc < c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dc <= c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dc <> c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where b = c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where b > c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where b >= c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where b < c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where b <= c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where b <> c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where bv = vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where bv > vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where bv >= vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where bv < vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where bv <= vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where bv <> vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lbv = vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lbv > vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lbv >= vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lbv < vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lbv <= vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lbv <> vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dt = c_dt;
1          
-----------
ij> select 1 from all1, all_c1 where dt > c_dt;
1          
-----------
ij> select 1 from all1, all_c1 where dt >= c_dt;
1          
-----------
ij> select 1 from all1, all_c1 where dt < c_dt;
1          
-----------
ij> select 1 from all1, all_c1 where dt <= c_dt;
1          
-----------
ij> select 1 from all1, all_c1 where dt <> c_dt;
1          
-----------
ij> select 1 from all1, all_c1 where tm = c_tm;
1          
-----------
ij> select 1 from all1, all_c1 where tm > c_tm;
1          
-----------
ij> select 1 from all1, all_c1 where tm >= c_tm;
1          
-----------
ij> select 1 from all1, all_c1 where tm < c_tm;
1          
-----------
ij> select 1 from all1, all_c1 where tm <= c_tm;
1          
-----------
ij> select 1 from all1, all_c1 where tm <> c_tm;
1          
-----------
ij> select 1 from all1, all_c1 where tms = c_tms;
1          
-----------
ij> select 1 from all1, all_c1 where tms > c_tms;
1          
-----------
ij> select 1 from all1, all_c1 where tms >= c_tms;
1          
-----------
ij> select 1 from all1, all_c1 where tms < c_tms;
1          
-----------
ij> select 1 from all1, all_c1 where tms <= c_tms;
1          
-----------
ij> select 1 from all1, all_c1 where tms <> c_tms;
1          
-----------
ij> select 1 from all1, all_c1 where lvc = c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lvc > c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lvc >= c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lvc < c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lvc <= c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lvc <> c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> rollback;
ij> -- test start and stop positions for conversions to (var)char
create index all1_si on all1(si);
0 rows inserted/updated/deleted
ij> create index all1_i on all1(i);
0 rows inserted/updated/deleted
ij> create index all1_li on all1(li);
0 rows inserted/updated/deleted
ij> create index all1_r on all1(r);
0 rows inserted/updated/deleted
ij> create index all1_dp on all1(dp);
0 rows inserted/updated/deleted
ij> create index all1_dc on all1(dc);
0 rows inserted/updated/deleted
ij> create index all1_num on all1(num);
0 rows inserted/updated/deleted
ij> create index all1_b on all1(b);
0 rows inserted/updated/deleted
ij> create index all1_bv on all1(bv);
0 rows inserted/updated/deleted
ij> create index all1_lbv on all1(lbv);
ERROR X0X67: Columns of type 'LONG VARCHAR FOR BIT DATA' may not be used in CREATE INDEX, ORDER BY, GROUP BY, UNION, INTERSECT, EXCEPT or DISTINCT statements because comparisons are not supported for that type.
ij> create index all1_dt on all1(dt);
0 rows inserted/updated/deleted
ij> create index all1_tm on all1(tm);
0 rows inserted/updated/deleted
ij> create index all1_tms on all1(tms);
0 rows inserted/updated/deleted
ij> select 1 from all1, all_c1 where si = c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where si > c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where si >= c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where si < c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where si <= c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where i = c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where i > c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where i >= c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where i < c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where i <= c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where li = c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where li > c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where li >= c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where li < c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where li <= c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where r = c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where r > c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where r >= c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where r < c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where r <= c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dp = c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dp > c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dp >= c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dp < c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dp <= c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dc = c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dc > c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dc >= c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dc < c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dc <= c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where b = c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where b > c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where b >= c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where b < c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where b <= c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where bv = vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where bv > vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where bv >= vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where bv < vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where bv <= vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lbv = vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lbv > vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lbv >= vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lbv < vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lbv <= vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dt = c_dt;
1          
-----------
1          
ij> select 1 from all1, all_c1 where dt > c_dt;
1          
-----------
ij> select 1 from all1, all_c1 where dt >= c_dt;
1          
-----------
1          
ij> select 1 from all1, all_c1 where dt < c_dt;
1          
-----------
ij> select 1 from all1, all_c1 where dt <= c_dt;
1          
-----------
1          
ij> select 1 from all1, all_c1 where tm = c_tm;
1          
-----------
1          
ij> select 1 from all1, all_c1 where tm > c_tm;
1          
-----------
ij> select 1 from all1, all_c1 where tm >= c_tm;
1          
-----------
1          
ij> select 1 from all1, all_c1 where tm < c_tm;
1          
-----------
ij> select 1 from all1, all_c1 where tm <= c_tm;
1          
-----------
1          
ij> select 1 from all1, all_c1 where tms = c_tms;
1          
-----------
1          
ij> select 1 from all1, all_c1 where tms > c_tms;
1          
-----------
ij> select 1 from all1, all_c1 where tms >= c_tms;
1          
-----------
1          
ij> select 1 from all1, all_c1 where tms < c_tms;
1          
-----------
ij> select 1 from all1, all_c1 where tms <= c_tms;
1          
-----------
1          
ij> select 1 from all1, all_c1 where lvc = c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lvc > c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lvc >= c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lvc < c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lvc <= c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> delete from all1;
1 row inserted/updated/deleted
ij> insert into all1(si) values (null);
1 row inserted/updated/deleted
ij> select 1 from all1, all_c1 where si = c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where si > c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where si >= c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where si < c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where si <= c_si;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where i = c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where i > c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where i >= c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where i < c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where i <= c_i;
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where li = c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where li > c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where li >= c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where li < c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where li <= c_li;
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where r = c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where r > c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where r >= c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where r < c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where r <= c_r;
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dp = c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dp > c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dp >= c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dp < c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dp <= c_dp;
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dc = c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dc > c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dc >= c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dc < c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dc <= c_dc;
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where b = c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where b > c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where b >= c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where b < c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where b <= c_b;
ERROR 42818: Comparisons between 'CHAR () FOR BIT DATA' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where bv = vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where bv > vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where bv >= vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where bv < vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where bv <= vc_bv;
ERROR 42818: Comparisons between 'VARCHAR () FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lbv = vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lbv > vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lbv >= vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lbv < vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lbv <= vc_bv;
ERROR 42818: Comparisons between 'LONG VARCHAR FOR BIT DATA' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where dt = c_dt;
1          
-----------
ij> select 1 from all1, all_c1 where dt > c_dt;
1          
-----------
ij> select 1 from all1, all_c1 where dt >= c_dt;
1          
-----------
ij> select 1 from all1, all_c1 where dt < c_dt;
1          
-----------
ij> select 1 from all1, all_c1 where dt <= c_dt;
1          
-----------
ij> select 1 from all1, all_c1 where tm = c_tm;
1          
-----------
ij> select 1 from all1, all_c1 where tm > c_tm;
1          
-----------
ij> select 1 from all1, all_c1 where tm >= c_tm;
1          
-----------
ij> select 1 from all1, all_c1 where tm < c_tm;
1          
-----------
ij> select 1 from all1, all_c1 where tm <= c_tm;
1          
-----------
ij> select 1 from all1, all_c1 where tms = c_tms;
1          
-----------
ij> select 1 from all1, all_c1 where tms > c_tms;
1          
-----------
ij> select 1 from all1, all_c1 where tms >= c_tms;
1          
-----------
ij> select 1 from all1, all_c1 where tms < c_tms;
1          
-----------
ij> select 1 from all1, all_c1 where tms <= c_tms;
1          
-----------
ij> select 1 from all1, all_c1 where lvc = c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lvc > c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lvc >= c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lvc < c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1, all_c1 where lvc <= c_lvc;
ERROR 42818: Comparisons between 'LONG VARCHAR (UCS_BASIC)' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> -- drop the indexes;
rollback;
ij> delete from all_c1;
1 row inserted/updated/deleted
ij> -- insert with implicit conversions to (var)char
insert into all_c1 select * from all1;
ERROR 42802: The number of values assigned is not the same as the number of specified or implied columns.
ij> select c_ti, si, c_si, i, c_i from all1, all_c1;
C_TI|SI    |C_SI      |I          |C_I                           
-----------------------------------------------------------------
ij> select li, c_li, r, c_r, dp, c_dp from all1, all_c1;
LI                  |C_LI                          |R            |C_R                                               |DP                    |C_DP                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ij> select dc, c_dc, num, c_num, c_bool from all1, all_c1;
DC     |C_DC      |NUM    |C_NUM                                             |C_BO&
-----------------------------------------------------------------------------------
ij> select b, c_b, bv, vc_bv, lbv, vc_lbv, dt, c_dt from all1, all_c1;
B   |C_B     |BV  |VC_BV           |LBV                                                                                                                             |VC_LBV          |DT        |C_DT      
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ij> select tm, c_tm, tms, c_tms, c, c_c from all1, all_c1;
TM      |C_TM            |TMS                          |C_TMS                |C   |C_C                           
-----------------------------------------------------------------------------------------------------------------
ij> select vc, vc_vc, lvc, c_lvc from all1, all_c1;
VC  |VC_VC                         |LVC                                                                                                                             |C_LVC                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ij> -- insert with implicit conversions from (var)char
insert into all1 select c_ti, c_si, c_i, c_li, c_r, c_dp,
					    c_dc, c_num, c_bool, ' ', ' ', ' ',
					    c_dt, c_tm, c_tms, '1', '2' from all_c1;
ERROR 42802: The number of values assigned is not the same as the number of specified or implied columns.
ij> select c_ti, si, c_si, i, c_i from all1, all_c1;
C_TI|SI    |C_SI      |I          |C_I                           
-----------------------------------------------------------------
ij> select li, c_li, r, c_r, dp, c_dp from all1, all_c1;
LI                  |C_LI                          |R            |C_R                                               |DP                    |C_DP                                              
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ij> select dc, c_dc, num, c_num, c_bool from all1, all_c1;
DC     |C_DC      |NUM    |C_NUM                                             |C_BO&
-----------------------------------------------------------------------------------
ij> select b, c_b, bv, vc_bv, lbv, vc_lbv, dt, c_dt from all1, all_c1;
B   |C_B     |BV  |VC_BV           |LBV                                                                                                                             |VC_LBV          |DT        |C_DT      
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ij> select tm, c_tm, tms, c_tms, c, c_c from all1, all_c1;
TM      |C_TM            |TMS                          |C_TMS                |C   |C_C                           
-----------------------------------------------------------------------------------------------------------------
ij> select vc, vc_vc, lvc, c_lvc from all1, all_c1;
VC  |VC_VC                         |LVC                                                                                                                             |C_LVC                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ij> rollback;
ij> -- more insert conversions
create table t5_2(dc decimal(5,2), num numeric(5,2));
0 rows inserted/updated/deleted
ij> -- bug 827, NormalizeResultSet with char->decimal conversions
insert into t5_2 values ('11.95', '95.11');
ERROR 42821: Columns of type 'DECIMAL' cannot hold values of type 'CHAR'. 
ij> select * from t5_2;
DC     |NUM    
---------------
ij> rollback;
ij> -- update tests
alter table all1 add column c30 char(30) ;
0 rows inserted/updated/deleted
ij> alter table all1 add column vc30 varchar(30) ;
0 rows inserted/updated/deleted
ij> alter table all1 add column lvc2 long varchar ;
0 rows inserted/updated/deleted
ij> select * from all1;
SI    |I          |LI                  |R            |DP                    |DC     |NUM    |B   |BV  |LBV                                                                                                                             |DT        |TM      |TMS                          |C   |VC  |LVC                                                                                                                             |C30                           |VC30                          |LVC2                                                                                                                            

2     |3          |4                   |5.5          |6.6                   |7.7    |8.8    |0020|0020|0020                                                                                                                            |1996-09-09|12:12:12|1996-09-09 12:12:12.5        |1   |2   |33333333                                                                                                                        |NULL                          |NULL                          |NULL                                                                                                                            
ij> update all1 set si = '11';
ERROR 42821: Columns of type 'SMALLINT' cannot hold values of type 'CHAR'. 
ij> update all1 set i = '11';
ERROR 42821: Columns of type 'INTEGER' cannot hold values of type 'CHAR'. 
ij> update all1 set li = '11';
ERROR 42821: Columns of type 'BIGINT' cannot hold values of type 'CHAR'. 
ij> update all1 set r = '11.11';
ERROR 42821: Columns of type 'REAL' cannot hold values of type 'CHAR'. 
ij> update all1 set dp = '11.11';
ERROR 42821: Columns of type 'DOUBLE' cannot hold values of type 'CHAR'. 
ij> update all1 set dc = '11.11';
ERROR 42821: Columns of type 'DECIMAL' cannot hold values of type 'CHAR'. 
ij> update all1 set num = '11.11';
ERROR 42821: Columns of type 'NUMERIC' cannot hold values of type 'CHAR'. 
ij> update all1 set b = X'21';
1 row inserted/updated/deleted
ij> update all1 set bv = X'21';
1 row inserted/updated/deleted
ij> update all1 set lbv = X'21';
1 row inserted/updated/deleted
ij> update all1 set dt = '1900-01-01';
1 row inserted/updated/deleted
ij> update all1 set tm = '08:08:08';
1 row inserted/updated/deleted
ij> update all1 set tms = '1990-01-01 08:08:08.6';
1 row inserted/updated/deleted
ij> update all1 set lvc = '44444444';
1 row inserted/updated/deleted
ij> select * from all1;
SI    |I          |LI                  |R            |DP                    |DC     |NUM    |B   |BV  |LBV                                                                                                                             |DT        |TM      |TMS                          |C   |VC  |LVC                                                                                                                             |C30                           |VC30                          |LVC2                                                                                                                            

2     |3          |4                   |5.5          |6.6                   |7.7    |8.8    |2120|21  |21                                                                                                                              |1900-01-01|08:08:08|1990-01-01 08:08:08.6        |1   |2   |44444444                                                                                                                        |NULL                          |NULL                          |NULL                                                                                                                            
ij> select c30, vc30, lvc2 from all1;
C30                           |VC30                          |LVC2                                                                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL                          |NULL                          |NULL                                                                                                                            
ij> update all1 set c30 = si, vc30 = si, lvc2 = si;
ERROR 42821: Columns of type 'CHAR' cannot hold values of type 'SMALLINT'. 
ij> update all1 set c30 = i, vc30 = i, lvc2 = i;
ERROR 42821: Columns of type 'CHAR' cannot hold values of type 'INTEGER'. 
ij> update all1 set c30 = li, vc30 = li, lvc2 = li;
ERROR 42821: Columns of type 'CHAR' cannot hold values of type 'BIGINT'. 
ij> update all1 set c30 = r, vc30 = r, lvc2 = r;
ERROR 42821: Columns of type 'CHAR' cannot hold values of type 'REAL'. 
ij> select c30, vc30, lvc2 from all1;
C30                           |VC30                          |LVC2                                                                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL                          |NULL                          |NULL                                                                                                                            
ij> update all1 set c30 = dp, vc30 = dp, lvc2 = dp;
ERROR 42821: Columns of type 'CHAR' cannot hold values of type 'DOUBLE'. 
ij> update all1 set c30 = dc, vc30 = dc, lvc2 = dc;
ERROR 42821: Columns of type 'CHAR' cannot hold values of type 'DECIMAL'. 
ij> update all1 set c30 = num, vc30 = num, lvc2 = num;
ERROR 42821: Columns of type 'CHAR' cannot hold values of type 'NUMERIC'. 
ij> select c30, vc30, lvc2 from all1;
C30                           |VC30                          |LVC2                                                                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL                          |NULL                          |NULL                                                                                                                            
ij> update all1 set c30 = b, vc30 = b, lvc2 = b;
ERROR 42821: Columns of type 'CHAR' cannot hold values of type 'CHAR () FOR BIT DATA'. 
ij> select c30, vc30, lvc2 from all1;
C30                           |VC30                          |LVC2                                                                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL                          |NULL                          |NULL                                                                                                                            
ij> update all1 set c30 = bv, vc30 = bv, lvc2 = bv;
ERROR 42821: Columns of type 'CHAR' cannot hold values of type 'VARCHAR () FOR BIT DATA'. 
ij> update all1 set c30 = lbv, vc30 = lbv, lvc2 = lbv;
ERROR 42821: Columns of type 'CHAR' cannot hold values of type 'LONG VARCHAR FOR BIT DATA'. 
ij> update all1 set c30 = dt, vc30 = dt, lvc2 = dt;
ERROR 42821: Columns of type 'LONG VARCHAR' cannot hold values of type 'DATE'. 
ij> update all1 set c30 = tm, vc30 = tm, lvc2 = tm;
ERROR 42821: Columns of type 'LONG VARCHAR' cannot hold values of type 'TIME'. 
ij> update all1 set c30 = tms, vc30 = tms, lvc2 = tms;
ERROR 42821: Columns of type 'LONG VARCHAR' cannot hold values of type 'TIMESTAMP'. 
ij> select c30, vc30, lvc2 from all1;
C30                           |VC30                          |LVC2                                                                                                                            
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NULL                          |NULL                          |NULL                                                                                                                            
ij> rollback;
ij> autocommit off;
ij> -- bug 5838 - arithmetic operators should not be applied to character strings
-- the following arithmetic operations should fail
values 1 + '2';
1          
-----------
3          
ij> values 1 - '2';
1          
-----------
-1         
ij> values 1 * '2';
1          
-----------
2          
ij> values 4 / '2';
1          
-----------
2          
ij> values 1.1 + '2';
1       
--------
3.10    
ij> values 1.1 - '2';
1       
--------
-0.90   
ij> values 1.1 * '2';
1        
---------
2.200    
ij> values 4.4 / '2';
1                                 
----------------------------------
2.2000000000000000000000000000    
ij> values 1.1 + '2.2';
1           
------------
3.3000      
ij> values 1.1 - '2.2';
1           
------------
-1.1000     
ij> values 1.1 * '2.2';
1            
-------------
2.42000      
ij> values 4.4 / '2.2';
1                                 
----------------------------------
2.00000000000000000000000000      
ij> -- concatentation
values '$' || cast(1 as smallint) || '$';
ERROR 42846: Cannot convert types 'SMALLINT' to 'VARCHAR'.
ij> values '$' || 1 || '$';
ERROR 42846: Cannot convert types 'INTEGER' to 'VARCHAR'.
ij> values '$' || cast(1 as bigint) || '$';
ERROR 42846: Cannot convert types 'BIGINT' to 'VARCHAR'.
ij> values '$' || cast(1.1 as real) || '$';
ERROR 42846: Cannot convert types 'REAL' to 'VARCHAR'.
ij> values '$' || cast(1.1 as double precision) || '$';
ERROR 42846: Cannot convert types 'DOUBLE' to 'VARCHAR'.
ij> values '$' || 1.1 || '$';
ERROR 42846: Cannot convert types 'DECIMAL' to 'VARCHAR'.
ij> values '$' || cast(1.1 as decimal(8,3)) || '$';
ERROR 42846: Cannot convert types 'DECIMAL' to 'VARCHAR'.
ij> values '$' || 'abcd' || '$';
1     
------
$abcd$
ij> values '$' || date('1996-09-09') || '$';
1           
------------
$1996-09-09$
ij> values '$' || time('10:11:12') || '$';
1         
----------
$10:11:12$
ij> values '$' || timestamp('1996-09-09 10:11:12.4' )|| '$';
1                           
----------------------------
$1996-09-09 10:11:12.4$     
ij> -- length functions
values length(cast(1 as smallint));
1          
-----------
2          
ij> values length(cast(1 as int));
1          
-----------
4          
ij> values length(cast(1 as bigint));
1          
-----------
8          
ij> values length(cast(1.1 as real));
1          
-----------
4          
ij> values length(cast(1.1 as double precision));
1          
-----------
8          
ij> values length(1.1);
1          
-----------
2          
ij> values length(cast(1.1 as decimal(8,3)));
1          
-----------
5          
ij> values length('four');
1          
-----------
4          
ij> values length(date('1996-09-10'));
1          
-----------
4          
ij> values length(time('10:11:12'));
1          
-----------
3          
ij> values length(timestamp('1996-09-10 10:11:12.4'));
1          
-----------
10         
ij> -- extract
values year( '1996-01-10');
1          
-----------
1996       
ij> values month( '1996-01-10');
1          
-----------
1          
ij> values day( '1996-01-10');
1          
-----------
10         
ij> values hour( '10:11:12');
1          
-----------
10         
ij> values minute( '10:11:12');
1          
-----------
11         
ij> values second( '10:11:12');
1          
-----------
12         
ij> -- like
select si from all1 where 1 like '%';
ERROR 42884: No authorized routine named 'LIKE' of type 'FUNCTION' having compatible arguments was found.
ij> -- bug 5845
select 1 from all1 where date('1996-09-10') like '19%';
ERROR 42884: No authorized routine named 'LIKE' of type 'FUNCTION' having compatible arguments was found.
ij> select si from all1 where '1' like 1;
ERROR 42884: No authorized routine named 'LIKE' of type 'FUNCTION' having compatible arguments was found.
ij> -- integer 1 gets converted to 1 followed by 0 spaces
-- so for kicks put a single space and make sure it is
-- not the same
select si from all1 where '1 ' like 1;
ERROR 42884: No authorized routine named 'LIKE' of type 'FUNCTION' having compatible arguments was found.
ij> select si from all1 where '1996-09-10' like date('1996-09-10');
ERROR 42884: No authorized routine named 'LIKE' of type 'FUNCTION' having compatible arguments was found.
ij> prepare p1 as 'select 1 from all1 where si like ?';
ERROR 42884: No authorized routine named 'LIKE' of type 'FUNCTION' having compatible arguments was found.
ij> execute p1 using 'values 1';
IJ ERROR: Unable to establish prepared statement P1@CONNECTION0
ij> execute p1 using 'values ''1''';
IJ ERROR: Unable to establish prepared statement P1@CONNECTION0
ij> -- conversions involving non-canonical date, time, and timestamp strings
create table t (d date, t time, ts timestamp);
0 rows inserted/updated/deleted
ij> create index txd on t(d);
0 rows inserted/updated/deleted
ij> create index txt on t(t);
0 rows inserted/updated/deleted
ij> create index txts on t(ts);
0 rows inserted/updated/deleted
ij> insert into t values (CHAR('2000-01-07'), 
		      CHAR('20:06:58'), 
		      CHAR('2000-01-07 20:06:58.9000'));
1 row inserted/updated/deleted
ij> insert into t values (CHAR('2000-1-06'), 
		      CHAR('20:06:57'), 
		      CHAR('2000-01-7 20:06:58.8000'));
1 row inserted/updated/deleted
ij> VALUES SYSCS_UTIL.SYSCS_CHECK_TABLE('APP', 'T');
1          
-----------
1          
ij> -- bug 2247, make sure that constant retyping
-- (avoiding unnecessary normalization at execution)
-- does not screw up implicit conversions
create table x(x varchar(10));
0 rows inserted/updated/deleted
ij> insert into x values 123;
ERROR 42821: Columns of type 'VARCHAR' cannot hold values of type 'INTEGER'. 
ij> select * from x;
X         
----------
ij> -- clean up 
drop table all_c1;
0 rows inserted/updated/deleted
ij> drop table t;
0 rows inserted/updated/deleted
ij> drop table x;
0 rows inserted/updated/deleted
ij> commit;
ij> -- ** insert implicitConversionsNegative.sql
-- negate tests for implicit conversions
-- to/from (var)char

-- union

autocommit on;
ij> values cast(1 as smallint), 'a';
ERROR 42X61: Types 'SMALLINT' and 'CHAR' are not UNION compatible.
ij> values 'a', cast(1 as smallint);
ERROR 42X61: Types 'CHAR' and 'SMALLINT' are not UNION compatible.
ij> values cast(1 as smallint), '1.1';
ERROR 42X61: Types 'SMALLINT' and 'CHAR' are not UNION compatible.
ij> values '1.1', cast(1 as smallint);
ERROR 42X61: Types 'CHAR' and 'SMALLINT' are not UNION compatible.
ij> values 1, 'a';
ERROR 42X61: Types 'INTEGER' and 'CHAR' are not UNION compatible.
ij> values 'a', 1;
ERROR 42X61: Types 'CHAR' and 'INTEGER' are not UNION compatible.
ij> values 1, '1.1';
ERROR 42X61: Types 'INTEGER' and 'CHAR' are not UNION compatible.
ij> values '1.1', a;
ERROR 42X04: Column 'A' is either not in any table in the FROM list or appears within a join specification and is outside the scope of the join specification or appears in a HAVING clause and is not in the GROUP BY list. If this is a CREATE or ALTER TABLE  statement then 'A' is not a column in the target table.
ij> values cast(1 as bigint), 'a';
ERROR 42X61: Types 'BIGINT' and 'CHAR' are not UNION compatible.
ij> values 'a', cast(1 as bigint);
ERROR 42X61: Types 'CHAR' and 'BIGINT' are not UNION compatible.
ij> values cast(1 as bigint), '1.1';
ERROR 42X61: Types 'BIGINT' and 'CHAR' are not UNION compatible.
ij> values '1.1', cast(1 as bigint);
ERROR 42X61: Types 'CHAR' and 'BIGINT' are not UNION compatible.
ij> values cast(1.1 as real), 'a';
ERROR 42X61: Types 'REAL' and 'CHAR' are not UNION compatible.
ij> values 'a', cast(1.1 as real);
ERROR 42X61: Types 'CHAR' and 'REAL' are not UNION compatible.
ij> values cast(1.1 as double precision), 'a';
ERROR 42X61: Types 'DOUBLE' and 'CHAR' are not UNION compatible.
ij> values 'a', cast(1.1 as double precision);
ERROR 42X61: Types 'CHAR' and 'DOUBLE' are not UNION compatible.
ij> values 1.1, 'a';
ERROR 42X61: Types 'DECIMAL' and 'CHAR' are not UNION compatible.
ij> values 'a', 1.1;
ERROR 42X61: Types 'CHAR' and 'DECIMAL' are not UNION compatible.
ij> values true, 'a';
ERROR 42X61: Types 'BOOLEAN' and 'CHAR' are not UNION compatible.
ij> values 'a', true;
ERROR 42X61: Types 'CHAR' and 'BOOLEAN' are not UNION compatible.
ij> values date('1996-09-09'), 'a';
1         
----------
1996-09-09
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> values 'a', date('1996-09-09');
1         
----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> values time('11:11:11'), 'a';
1       
--------
11:11:11
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> values 'a', time('11:11:11');
1       
--------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> values timestamp('1996-09-09 11:11:11.5'), 'a';
1                            
-----------------------------
1996-09-09 11:11:11.5        
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> values 'a', timestamp('1996-09-09 11:11:11.5');
1                            
-----------------------------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> -- comparisons at the language level
select si from all1 where cast(1 as smallint) = 'a';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as smallint) = '1.1';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as smallint) > 'a';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as smallint) > '1.1';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as smallint) >= 'a';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as smallint) >= '1.1';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as smallint) < 'a';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as smallint) < '1.1';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as smallint) <= 'a';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as smallint) <= '1.1';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as smallint) <> 'a';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as smallint) <> '1.1';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' = cast(1 as smallint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '1.1' = cast(1 as smallint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' > cast(1 as smallint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '1.1' > cast(1 as smallint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' >= cast(1 as smallint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '1.1' >= cast(1 as smallint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' < cast(1 as smallint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '1.1' < cast(1 as smallint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' <= cast(1 as smallint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '1.1' <= cast(1 as smallint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' <> cast(1 as smallint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '1.1' <> cast(1 as smallint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as int) = 'a';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as int) = '1.1';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as int) > 'a';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as int) > '1.1';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as int) >= 'a';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as int) >= '1.1';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as int) < 'a';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as int) < '1.1';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as int) <= 'a';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as int) <= '1.1';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as int) <> 'a';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as int) <> '1.1';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' = cast(1 as int);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '1.1' = cast(1 as int);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' > cast(1 as int);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '1.1' > cast(1 as int);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' >= cast(1 as int);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '1.1' >= cast(1 as int);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' < cast(1 as int);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '1.1' < cast(1 as int);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' <= cast(1 as int);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '1.1' <= cast(1 as int);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' <> cast(1 as int);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '1.1' <> cast(1 as int);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as bigint) = 'a';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as bigint) = '1.1';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as bigint) > 'a';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as bigint) > '1.1';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as bigint) >= 'a';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as bigint) >= '1.1';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as bigint) < 'a';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as bigint) < '1.1';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as bigint) <= 'a';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as bigint) <= '1.1';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as bigint) <> 'a';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1 as bigint) <> '1.1';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' = cast(1 as bigint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '1.1' = cast(1 as bigint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' > cast(1 as bigint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '1.1' > cast(1 as bigint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' >= cast(1 as bigint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '1.1' >= cast(1 as bigint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' < cast(1 as bigint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '1.1' < cast(1 as bigint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' <= cast(1 as bigint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '1.1' <= cast(1 as bigint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' <> cast(1 as bigint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where '1.1' <> cast(1 as smallint);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1.1 as real) = 'a';
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1.1 as real) > 'a';
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1.1 as real) >= 'a';
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1.1 as real) < 'a';
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1.1 as real) <= 'a';
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1.1 as real) <> 'a';
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' = cast(1.1 as real);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'REAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' > cast(1.1 as real);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'REAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' >= cast(1.1 as real);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'REAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' < cast(1.1 as real);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'REAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' <= cast(1.1 as real);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'REAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' <> cast(1.1 as real);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'REAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1.1 as double precision) = 'a';
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1.1 as double precision) > 'a';
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1.1 as double precision) >= 'a';
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1.1 as double precision) < 'a';
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1.1 as double precision) <= 'a';
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where cast(1.1 as double precision) <> 'a';
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' = cast(1.1 as double precision);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DOUBLE' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' > cast(1.1 as double precision);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DOUBLE' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' >= cast(1.1 as double precision);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DOUBLE' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' < cast(1.1 as double precision);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DOUBLE' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' <= cast(1.1 as double precision);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DOUBLE' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' <> cast(1.1 as double precision);
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DOUBLE' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 1.1 = 'a';
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 1.1 > 'a';
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 1.1 >= 'a';
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 1.1 < 'a';
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 1.1 <= 'a';
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 1.1 <> 'a';
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' = 1.1;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DECIMAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' > 1.1;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DECIMAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' >= 1.1;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DECIMAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' < 1.1;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DECIMAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' <= 1.1;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DECIMAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where 'a' <> 1.1;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DECIMAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select si from all1 where date('1996-09-09') = 'a';
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where date('1996-09-09') > 'a';
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where date('1996-09-09') >= 'a';
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where date('1996-09-09') < 'a';
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where date('1996-09-09') <= 'a';
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where date('1996-09-09') <> 'a';
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where 'a' = date('1996-09-09');
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where 'a' > date('1996-09-09');
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where 'a' >= date('1996-09-09');
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where 'a' < date('1996-09-09');
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where 'a' <= date('1996-09-09');
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where 'a' <> date('1996-09-09');
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where time('11:11:11') = 'a';
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where time('11:11:11') > 'a';
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where time('11:11:11') >= 'a';
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where time('11:11:11') < 'a';
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where time('11:11:11') <= 'a';
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where time('11:11:11') <> 'a';
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where 'a' = time('11:11:11');
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where 'a' > time('11:11:11');
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where 'a' >= time('11:11:11');
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where 'a' < time('11:11:11');
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where 'a' <= time('11:11:11');
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where 'a' <> time('11:11:11');
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where timestamp('1996-09-09 11:11:11.4' )= 'a';
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where timestamp('1996-09-09 11:11:11.4' )> 'a';
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where timestamp('1996-09-09 11:11:11.4' )>= 'a';
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where timestamp('1996-09-09 11:11:11.4' )< 'a';
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where timestamp('1996-09-09 11:11:11.4' )<= 'a';
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where timestamp('1996-09-09 11:11:11.4' )<> 'a';
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where 'a' = timestamp('1996-09-09 11:11:11.4');
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where 'a' > timestamp('1996-09-09 11:11:11.4');
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where 'a' >= timestamp('1996-09-09 11:11:11.4');
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where 'a' < timestamp('1996-09-09 11:11:11.4');
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where 'a' <= timestamp('1996-09-09 11:11:11.4');
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select si from all1 where 'a' <> timestamp('1996-09-09 11:11:11.4');
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> -- create an all types table
drop table all1;
0 rows inserted/updated/deleted
ij> create table all1(si smallint, i int, li bigint, r real, 
				  dp double precision, dc decimal(5,1), num numeric(5,1),
				  b char for bit data, bv varchar(1) for bit data,
				  lbv long varchar for bit data,
				  dt date, tm time, tms timestamp,
				  c char(1), vc varchar(1), lvc long varchar);
0 rows inserted/updated/deleted
ij> -- populate table
insert into all1 values (2, 3, 4, 5.5, 6.6, 7.7, 8.8,
				  		 X'20', X'20', X'20',
				  		 date('1996-09-09'), time('12:12:12'), 
				  		 timestamp('1996-09-09 12:12:12.5'),
				  		 '1', '2', '333333333333333333');
1 row inserted/updated/deleted
ij> -- tests for comparisons as qualifiers
select 1 from all1 where si = 'a';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where si = '1.1';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where si > 'a';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where si > '1.1';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where si >= 'a';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where si >= '1.1';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where si < 'a';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where si < '1.1';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where si <= 'a';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where si <= '1.1';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where si <> 'a';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where si <> '1.1';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' = si;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' = si;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' > si;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' > si;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' >= si;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' >= si;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' < si;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' < si;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' <= si;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' <= si;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' <> si;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' <> si;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where i = 'a';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where i = '1.1';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where i > 'a';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where i > '1.1';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where i >= 'a';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where i >= '1.1';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where i < 'a';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where i < '1.1';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where i <= 'a';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where i <= '1.1';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where i <> 'a';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where i <> '1.1';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' = i;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' = i;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' > i;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' > i;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' >= i;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' >= i;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' < i;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' < i;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' <= i;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' <= i;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' <> i;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' <> i;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where li = 'a';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where li = '1.1';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where li > 'a';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where li > '1.1';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where li >= 'a';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where li >= '1.1';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where li < 'a';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where li < '1.1';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where li <= 'a';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where li <= '1.1';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where li <> 'a';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where li <> '1.1';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' = li;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' = li;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' > li;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' > li;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' >= li;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' >= li;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' < li;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' < li;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' <= li;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' <= li;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' <> li;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' <> li;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where r = 'a';
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where r > 'a';
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where r >= 'a';
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where r < 'a';
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where r <= 'a';
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where r <> 'a';
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' = r;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'REAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' > r;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'REAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' >= r;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'REAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' < r;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'REAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' <= r;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'REAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' <> r;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'REAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where dp = 'a';
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where dp > 'a';
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where dp >= 'a';
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where dp < 'a';
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where dp <= 'a';
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where dp <> 'a';
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' = dp;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DOUBLE' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' > dp;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DOUBLE' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' >= dp;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DOUBLE' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' < dp;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DOUBLE' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' <= dp;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DOUBLE' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' <> dp;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DOUBLE' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where dc = 'a';
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where dc > 'a';
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where dc >= 'a';
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where dc < 'a';
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where dc <= 'a';
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where dc <> 'a';
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' = dc;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DECIMAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' > dc;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DECIMAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' >= dc;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DECIMAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' < dc;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DECIMAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' <= dc;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DECIMAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' <> dc;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DECIMAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where num = 'a';
ERROR 42818: Comparisons between 'NUMERIC' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where num > 'a';
ERROR 42818: Comparisons between 'NUMERIC' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where num >= 'a';
ERROR 42818: Comparisons between 'NUMERIC' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where num < 'a';
ERROR 42818: Comparisons between 'NUMERIC' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where num <= 'a';
ERROR 42818: Comparisons between 'NUMERIC' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where num <> 'a';
ERROR 42818: Comparisons between 'NUMERIC' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' = num;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'NUMERIC' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' > num;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'NUMERIC' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' >= num;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'NUMERIC' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' < num;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'NUMERIC' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' <= num;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'NUMERIC' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' <> num;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'NUMERIC' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where dt = 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where dt > 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where dt >= 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where dt < 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where dt <= 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where dt <> 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' = dt;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' > dt;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' >= dt;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' < dt;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' <= dt;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' <> dt;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where tm = 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where tm > 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where tm >= 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where tm < 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where tm <= 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where tm <> 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' = tm;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' > tm;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' >= tm;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' < tm;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' <= tm;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' <> tm;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where tms = 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where tms > 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where tms >= 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where tms < 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where tms <= 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where tms <> 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' = tms;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' > tms;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' >= tms;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' < tms;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' <= tms;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' <> tms;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> autocommit off;
ij> -- test start and stop positions for conversions to (var)char
create index all1_si on all1(si);
0 rows inserted/updated/deleted
ij> create index all1_i on all1(i);
0 rows inserted/updated/deleted
ij> create index all1_li on all1(li);
0 rows inserted/updated/deleted
ij> create index all1_r on all1(r);
0 rows inserted/updated/deleted
ij> create index all1_dp on all1(dp);
0 rows inserted/updated/deleted
ij> create index all1_dc on all1(dc);
0 rows inserted/updated/deleted
ij> create index all1_num on all1(num);
0 rows inserted/updated/deleted
ij> create index all1_b on all1(b);
0 rows inserted/updated/deleted
ij> create index all1_bv on all1(bv);
0 rows inserted/updated/deleted
ij> create index all1_lbv on all1(lbv);
ERROR X0X67: Columns of type 'LONG VARCHAR FOR BIT DATA' may not be used in CREATE INDEX, ORDER BY, GROUP BY, UNION, INTERSECT, EXCEPT or DISTINCT statements because comparisons are not supported for that type.
ij> create index all1_dt on all1(dt);
0 rows inserted/updated/deleted
ij> create index all1_tm on all1(tm);
0 rows inserted/updated/deleted
ij> create index all1_tms on all1(tms);
0 rows inserted/updated/deleted
ij> select 1 from all1 where si = 'a';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where si = '1.1';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where si > 'a';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where si > '1.1';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where si >= 'a';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where si >= '1.1';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where si < 'a';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where si < '1.1';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where si <= 'a';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where si <= '1.1';
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' = si;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' = si;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' > si;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' > si;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' >= si;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' >= si;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' < si;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' < si;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' <= si;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' <= si;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'SMALLINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where i = 'a';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where i = '1.1';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where i > 'a';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where i > '1.1';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where i >= 'a';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where i >= '1.1';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where i < 'a';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where i < '1.1';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where i <= 'a';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where i <= '1.1';
ERROR 42818: Comparisons between 'INTEGER' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' = i;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' = i;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' > i;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' > i;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' >= i;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' >= i;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' < i;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' < i;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' <= i;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' <= i;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'INTEGER' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where li = 'a';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where li = '1.1';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where li > 'a';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where li > '1.1';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where li >= 'a';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where li >= '1.1';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where li < 'a';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where li < '1.1';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where li <= 'a';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where li <= '1.1';
ERROR 42818: Comparisons between 'BIGINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' = li;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' = li;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' > li;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' > li;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' >= li;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' >= li;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' < li;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' < li;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' <= li;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where '1.1' <= li;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'BIGINT' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where r = 'a';
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where r > 'a';
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where r >= 'a';
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where r < 'a';
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where r <= 'a';
ERROR 42818: Comparisons between 'REAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' = r;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'REAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' > r;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'REAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' >= r;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'REAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' < r;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'REAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' <= r;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'REAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where dp = 'a';
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where dp > 'a';
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where dp >= 'a';
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where dp < 'a';
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where dp <= 'a';
ERROR 42818: Comparisons between 'DOUBLE' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' = dp;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DOUBLE' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' > dp;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DOUBLE' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' >= dp;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DOUBLE' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' < dp;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DOUBLE' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' <= dp;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DOUBLE' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where dc = 'a';
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where dc > 'a';
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where dc >= 'a';
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where dc < 'a';
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where dc <= 'a';
ERROR 42818: Comparisons between 'DECIMAL' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' = dc;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DECIMAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' > dc;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DECIMAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' >= dc;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DECIMAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' < dc;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DECIMAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' <= dc;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'DECIMAL' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where num = 'a';
ERROR 42818: Comparisons between 'NUMERIC' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where num > 'a';
ERROR 42818: Comparisons between 'NUMERIC' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where num >= 'a';
ERROR 42818: Comparisons between 'NUMERIC' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where num < 'a';
ERROR 42818: Comparisons between 'NUMERIC' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where num <= 'a';
ERROR 42818: Comparisons between 'NUMERIC' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' = num;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'NUMERIC' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' > num;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'NUMERIC' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' >= num;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'NUMERIC' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' < num;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'NUMERIC' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where 'a' <= num;
ERROR 42818: Comparisons between 'CHAR (UCS_BASIC)' and 'NUMERIC' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select 1 from all1 where dt = 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where dt > 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where dt >= 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where dt < 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where dt <= 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' = dt;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' > dt;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' >= dt;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' < dt;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' <= dt;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where tm = 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where tm > 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where tm >= 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where tm < 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where tm <= 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' = tm;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' > tm;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' >= tm;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' < tm;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' <= tm;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where tms = 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where tms > 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where tms >= 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where tms < 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where tms <= 'a';
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' = tms;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' > tms;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' >= tms;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' < tms;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select 1 from all1 where 'a' <= tms;
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> rollback;
ij> -- insert tests
insert into all1(si) values 'a';
ERROR 42821: Columns of type 'SMALLINT' cannot hold values of type 'CHAR'. 
ij> insert into all1(si) values '1.1';
ERROR 42821: Columns of type 'SMALLINT' cannot hold values of type 'CHAR'. 
ij> insert into all1(i) values 'a';
ERROR 42821: Columns of type 'INTEGER' cannot hold values of type 'CHAR'. 
ij> insert into all1(i) values '1.1';
ERROR 42821: Columns of type 'INTEGER' cannot hold values of type 'CHAR'. 
ij> insert into all1(li) values 'a';
ERROR 42821: Columns of type 'BIGINT' cannot hold values of type 'CHAR'. 
ij> insert into all1(li) values '1.1';
ERROR 42821: Columns of type 'BIGINT' cannot hold values of type 'CHAR'. 
ij> insert into all1(r) values 'a';
ERROR 42821: Columns of type 'REAL' cannot hold values of type 'CHAR'. 
ij> insert into all1(dp) values 'a';
ERROR 42821: Columns of type 'DOUBLE' cannot hold values of type 'CHAR'. 
ij> insert into all1(dc) values 'a';
ERROR 42821: Columns of type 'DECIMAL' cannot hold values of type 'CHAR'. 
ij> insert into all1(num) values 'a';
ERROR 42821: Columns of type 'NUMERIC' cannot hold values of type 'CHAR'. 
ij> insert into all1(dt) values 'a';
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> insert into all1(tm) values 'a';
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> insert into all1(tms) values 'a';
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> -- update tests
update all1 set si = 'a';
ERROR 42821: Columns of type 'SMALLINT' cannot hold values of type 'CHAR'. 
ij> update all1 set si = '1.1';
ERROR 42821: Columns of type 'SMALLINT' cannot hold values of type 'CHAR'. 
ij> update all1 set i = 'a';
ERROR 42821: Columns of type 'INTEGER' cannot hold values of type 'CHAR'. 
ij> update all1 set i = '1.1';
ERROR 42821: Columns of type 'INTEGER' cannot hold values of type 'CHAR'. 
ij> update all1 set li = 'a';
ERROR 42821: Columns of type 'BIGINT' cannot hold values of type 'CHAR'. 
ij> update all1 set li = '1.1';
ERROR 42821: Columns of type 'BIGINT' cannot hold values of type 'CHAR'. 
ij> update all1 set r = 'a';
ERROR 42821: Columns of type 'REAL' cannot hold values of type 'CHAR'. 
ij> update all1 set dp = 'a';
ERROR 42821: Columns of type 'DOUBLE' cannot hold values of type 'CHAR'. 
ij> update all1 set dc = 'a';
ERROR 42821: Columns of type 'DECIMAL' cannot hold values of type 'CHAR'. 
ij> update all1 set num = 'a';
ERROR 42821: Columns of type 'NUMERIC' cannot hold values of type 'CHAR'. 
ij> update all1 set dt = 'a';
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> update all1 set tm = 'a';
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> update all1 set tms = 'a';
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> rollback;
ij> -- arithmetic
-- arithmetic on 2 non-numeric strings
values '1' + '2';
ERROR 42Y95: The '+' operator with a left operand type of 'CHAR' and a right operand type of 'CHAR' is not supported.
ij> -- non-numeric strings
values 1 + 'a';
1          
-----------
ERROR 22018: Invalid character string format for type INTEGER.
ij> values 1 + '1a';
1          
-----------
ERROR 22018: Invalid character string format for type INTEGER.
ij> values 'a' + 1;
1          
-----------
ERROR 22018: Invalid character string format for type INTEGER.
ij> values '1a' + 1;
1          
-----------
ERROR 22018: Invalid character string format for type INTEGER.
ij> -- numeric string of wrong type
values 1 + '1.1';
1          
-----------
ERROR 22018: Invalid character string format for type INTEGER.
ij> values '1.1' + 1;
1          
-----------
ERROR 22018: Invalid character string format for type INTEGER.
ij> -- extract
-- non-date strings
values year( '1');
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> values month( '1');
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> values day( '1');
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> values hour( '1');
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> values minute( '1');
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> values second( '1');
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> -- string does not match default
-- date for year/month/day
-- time for hour/minute/second
values year( '1996-09-10 10:11:12.5');
1          
-----------
1996       
ij> values year( '10:11:12.5');
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> values month( '1996-09-10 10:11:12.5');
1          
-----------
9          
ij> values month( '10:11:12.5');
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> values day( '1996-09-10 10:11:12.5');
1          
-----------
10         
ij> values day( '10:11:12.5');
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> values hour( '1996-09-10 10:11:12.5');
1          
-----------
10         
ij> values hour( '1996-09-10');
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> values minute( '1996-09-10 10:11:12.5');
1          
-----------
11         
ij> values minute( '1996-09-10');
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> values second( '1996-09-10 10:11:12.5');
1          
-----------
12         
ij> values second( '1996-09-10');
1          
-----------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> -- sum and avg not supported on string types
select sum('1') from all1;
ERROR 42Y22: Aggregate SUM cannot operate on type CHAR.
ij> select avg('1') from all1;
ERROR 42Y22: Aggregate AVG cannot operate on type CHAR.
ij> -- joins
select * from all1 a, all1 b 
where a.si = b.c;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select * from all1 a, all1 b 
where a.si = b.vc;
ERROR 42818: Comparisons between 'SMALLINT' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select * from all1 a, all1 b 
where a.si = b.lvc;
ERROR 42818: Comparisons between 'SMALLINT' and 'LONG VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select * from all1 a, all1 b 
where b.si = a.c;
ERROR 42818: Comparisons between 'SMALLINT' and 'CHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select * from all1 a, all1 b 
where b.si = a.vc;
ERROR 42818: Comparisons between 'SMALLINT' and 'VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select * from all1 a, all1 b 
where b.si = a.lvc;
ERROR 42818: Comparisons between 'SMALLINT' and 'LONG VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select * from all1 a, all1 b 
where a.dt = b.c;
SI    |I          |LI                  |R            |DP                    |DC     |NUM    |B   |BV  |LBV                                                                                                                             |DT        |TM      |TMS                          |C   |VC  |LVC                                                                                                                             |SI    |I          |LI                  |R            |DP                    |DC     |NUM    |B   |BV  |LBV                                                                                                                             |DT        |TM      |TMS                          |C   |VC  |LVC                                                                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select * from all1 a, all1 b 
where a.dt = b.vc;
SI    |I          |LI                  |R            |DP                    |DC     |NUM    |B   |BV  |LBV                                                                                                                             |DT        |TM      |TMS                          |C   |VC  |LVC                                                                                                                             |SI    |I          |LI                  |R            |DP                    |DC     |NUM    |B   |BV  |LBV                                                                                                                             |DT        |TM      |TMS                          |C   |VC  |LVC                                                                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select * from all1 a, all1 b 
where a.dt = b.lvc;
ERROR 42818: Comparisons between 'DATE' and 'LONG VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> select * from all1 a, all1 b 
where b.dt = a.c;
SI    |I          |LI                  |R            |DP                    |DC     |NUM    |B   |BV  |LBV                                                                                                                             |DT        |TM      |TMS                          |C   |VC  |LVC                                                                                                                             |SI    |I          |LI                  |R            |DP                    |DC     |NUM    |B   |BV  |LBV                                                                                                                             |DT        |TM      |TMS                          |C   |VC  |LVC                                                                                                                             
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select * from all1 a, all1 b 
where b.dt = a.vc;
SI    |I          |LI                  |R            |DP                    |DC     |NUM    |B   |BV  |LBV                                                                                                                             |DT        |TM      |TMS                          |C   |VC  |LVC                                                                                                                             |SI    |I          |LI                  |R            |DP                    |DC     |NUM    |B   |BV  |LBV                                                                                                                             |DT        |TM      |TMS                          |C   |VC  |LVC                                                                                                                             

ERROR 22007: The syntax of the string representation of a datetime value is incorrect.
ij> select * from all1 a, all1 b 
where b.dt = a.lvc;
ERROR 42818: Comparisons between 'DATE' and 'LONG VARCHAR (UCS_BASIC)' are not supported. Types must be comparable. String types must also have matching collation. If collation does not match, a possible solution is to cast operands to force them to the default collation (e.g. SELECT tablename FROM sys.systables WHERE CAST(tablename AS VARCHAR(128)) = 'T1')
ij> -- clean up 
drop table all1;
0 rows inserted/updated/deleted
ij> commit;
ij> 
