<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="ctoolsusingdblook" xml:lang="en-us">
<title>Using dblook</title>
<prolog></prolog>
<conbody>
<p>The syntax for the command to launch the <codeph>dblook</codeph> utility
is:</p>
<codeblock>dblook -d <i>connectionURL</i> [<i>options</i>]</codeblock>
<p>The value for <varname>connectionURL</varname> is the complete URL
for the database. Where appropriate, the URL includes any connection URL attributes
that might be required to access the database. For complete 
information on connection URL attributes, see "Setting attributes for the database
connection URL" in the <ph conref="../conrefs.dita#pub/citref"></ph>.</p>
<p>For example, to connect to the database 'myDB', the URL would simply be <codeph>'jdbc:derby:myDB';</codeph> to
connect using the Network Server to a database 'C:\private\tmp\myDB' on a
remote server (port 1527), the URL would be:</p>
<codeblock>'jdbc:derby://localhost:1527/"C:\private\tmp\myDB";user=someusr;password=somepwd'</codeblock>
<p>As with other <ph conref="../conrefs.dita#prod/productshortname"></ph> utilities,
you must ensure that no other JVMs are started against the database when you
call the <codeph>dblook</codeph> utility, or an exception will occur and will
print to the <codeph>dblook.log</codeph>. If this exception is thrown, the <codeph>dblook</codeph> utility
will quit. To recover, you must ensure that no other <ph conref="../conrefs.dita#prod/productshortname"></ph> applications
running in a separate JVM are connected to the source database. These connections
need to be shutdown. Once all existing JVMs running against the database have
been shutdown, the <codeph>dblook</codeph> utility will execute successfully.
You can also start the <ph conref="../conrefs.dita#prod/productshortname"></ph> Network
server and run the <codeph>dblook</codeph> utility as a client application
while other clients are connected to the server.</p>
</conbody>
</concept>

