<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<reference id="rtoolsijproprefexceptiontrace" xml:lang="en-us">
<title>ij.exceptionTrace property</title>
<prolog><metadata>
<keywords><indexterm>ij.exceptionTrace property</indexterm><indexterm>ij properties<indexterm>ij.exceptionTrace</indexterm></indexterm>
</keywords>
</metadata></prolog>
<refbody>
<section><title>Function</title><p>When the <codeph>ij.exceptionTrace</codeph> property
is set to <codeph>true</codeph>, a full exception stack trace is printed when
exceptions occur in <codeph>ij</codeph>. The default setting is <codeph>false</codeph>.</p></section>
<refsyn><title>Syntax</title> <codeblock><b>ij.exceptionTrace={ false | true }</b> </codeblock></refsyn>
<example><title>Example</title> <p>In the following example, <codeph>ij</codeph> is
started with the <codeph>ij.exceptionTrace</codeph> property set to true.</p> <codeblock>
<b>java -Dij.exceptionTrace=true org.apache.derby.tools.ij</b>
ij version <ph conref="../conrefs.dita#vers/shortversionnumber"></ph> 
ij> connect 'jdbc:derby:wombat';  
ERROR XJ004: Database 'wombat' not found.  
SQL Exception: Database 'wombat' not found.
    at org.apache.derby.impl.jdbc.SQLExceptionFactory.getSQLException(SQLExceptionFactory.java:44)
    at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:87)
    at org.apache.derby.impl.jdbc.Util.newEmbedSQLException(Util.java:93)
    at org.apache.derby.impl.jdbc.Util.generateCsSQLException(Util.java:172)
    at org.apache.derby.impl.jdbc.EmbedConnection.newSQLException(EmbedConnection.java:1955)
    at org.apache.derby.impl.jdbc.EmbedConnection.(EmbedConnection.java:254)
    at org.apache.derby.impl.jdbc.EmbedConnection30.(EmbedConnection30.java:72)
    at org.apache.derby.jdbc.Driver30.getNewEmbedConnection(Driver30.java:73)
    at org.apache.derby.jdbc.InternalDriver.connect(InternalDriver.java:200)
    at java.sql.DriverManager.getConnection(DriverManager.java:512)
    at java.sql.DriverManager.getConnection(DriverManager.java:140)
    at org.apache.derby.impl.tools.ij.ij.dynamicConnection(ij.java:873)
    at org.apache.derby.impl.tools.ij.ij.ConnectStatement(ij.java:723)
    at org.apache.derby.impl.tools.ij.ij.ijStatement(ij.java:553)
    at org.apache.derby.impl.tools.ij.utilMain.go(utilMain.java:289)
    at org.apache.derby.impl.tools.ij.Main.go(Main.java:207)
    at org.apache.derby.impl.tools.ij.Main.mainCore(Main.java:173)
    at org.apache.derby.impl.tools.ij.Main14.main(Main14.java:55)
    at org.apache.derby.tools.ij.main(ij.java:60)  ij 
ij></codeblock>  </example>
</refbody>
</reference>
