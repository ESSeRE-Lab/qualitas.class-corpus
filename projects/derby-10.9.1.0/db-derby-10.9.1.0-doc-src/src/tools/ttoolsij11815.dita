<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN"
 "../dtd/task.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<task id="ttoolsij11815" xml:lang="en-us">
<title>Starting ij</title>
<taskbody>
<context> <p><ph conref="../conrefs.dita#prod/productshortname"></ph> provides
batch and shell scripts for users in Windows and UNIX environments that can
be used to start ij. By calling the appropriate script you will start ij and
be able to connect with a simple command. The scripts are
found in the <codeph>bin</codeph> directory of your <ph conref="../conrefs.dita#prod/productshortname"></ph>
installation. You can also customize the ij scripts to suit your environment.</p><p> If you are using <ph conref="../conrefs.dita#prod/productshortname"></ph> as
a client/server environment, start the Network Server before connecting to the 
<ph conref="../conrefs.dita#prod/productshortname"></ph> database. (See
"Starting the Network Server" in the
<ph conref="../conrefs.dita#pub/citadmin"></ph> for details.) You can start
ij by running the ij scripts for your environment. Follow the instructions in
"Setting up your environment" in
<ph conref="../conrefs.dita#pub/citgetstart"></ph> to set the 
<codeph><ph conref="../conrefs.dita#prod/productinstallpath"></ph></codeph> 
and <codeph>JAVA_HOME</codeph> environment variables and to add
<codeph><ph conref="../conrefs.dita#prod/productinstallpath"></ph>/bin</codeph>
to your path. Then use the following command:</p><codeblock><b><userinput>ij [-p <varname>propertyFile</varname>] [<varname>inputFile</varname>]</userinput></b></codeblock></context>
<example>Alternatively, set the 
<codeph><ph conref="../conrefs.dita#prod/productinstallpath"></ph></codeph>
environment variable, then use one of these commands:
<codeblock>(UNIX) <b><userinput>java [<varname>options</varname>] -jar $DERBY_HOME/lib/derbyrun.jar ij
    [-p <varname>propertyFile</varname>] [<varname>inputFile</varname>]</userinput></b></codeblock>
<codeblock>(Windows) <b><userinput>java [<varname>options</varname>] -jar %DERBY_HOME%\lib\derbyrun.jar ij
    [-p <varname>propertyFile</varname>] [<varname>inputFile</varname>]</userinput></b></codeblock>
<codeblock><b><userinput>java [<varname>options</varname>] org.apache.derby.tools.ij 
    [-p <varname>propertyFile</varname>] [<varname>inputFile</varname>]</userinput></b></codeblock>
<p>If you use the last form of the command, be sure that <codeph>derbyrun.jar</codeph> is in your
classpath (for pre-10.2 distributions <codeph>derbytools.jar</codeph> and usually <codeph>derby.jar</codeph>
were required in the classpath).</p>
<p>If you need to use other classes in addition to <codeph>derbyrun.jar</codeph>, 
you cannot use the <codeph>-cp</codeph> argument or the CLASSPATH 
environment variable to set CLASSPATH variables when you are using the
<codeph>-jar</codeph> argument to start the <codeph>ij</codeph> tool. 
If you want to run the <codeph>ij</codeph> tool with a custom classpath, 
you cannot use the <codeph>-jar</codeph> argument. Instead, you have to 
use the full class name to start the <codeph>ij</codeph> tool 
(<codeph>java org.apache.derby.tools.ij</codeph>). </p>
<p>The command line items are:</p>    <ul>
<li id="rtoolsij42358"><b><userinput>java</userinput></b>   <p>Start the JVM. </p></li>
<li id="rtoolsij26546"><b><userinput><varname>options</varname></userinput></b>   <p>The options that the JVM uses. You can
use the -D option to set ij properties (see <xref href="ttoolsij30600.dita#ttoolsij30600"></xref>)
or system properties, such as <ph conref="../conrefs.dita#prod/productshortname"></ph> properties. </p></li>
<li id="rtoolsij40855"><b><userinput><varname>propertyFile</varname></userinput></b>   <p>A file you can use to set ij properties
(instead of the -D option). The property file should be in the format created
by the java.tools.Properties.save methods, which is the same format as the
derby.properties file.</p></li>
<li id="rtoolsij39639"><b><userinput><varname>inputFile</varname></userinput></b>   <p>A file from which to read commands.
The ij tool exits at the end of the file or an exit command. Using an input
file causes ij to print out the commands as it runs them. If you reroute standard
input, ij does not print out the commands. If you do not supply an input file,
ij reads from the standard input.</p></li>
</ul></example>
<postreq><p>For detailed information about ij commands, see <xref href="rtoolsijcomref25570.dita#rtoolsijcomref25570"></xref>.
 </p></postreq>
</taskbody>
</task>
