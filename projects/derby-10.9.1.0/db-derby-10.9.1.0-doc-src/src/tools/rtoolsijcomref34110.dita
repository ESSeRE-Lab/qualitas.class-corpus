<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<reference id="rtoolsijcomref34110" xml:lang="en-us">
<title>Syntax for strings in ij commands</title>
<prolog><metadata>
<keywords><indexterm>Strings in ij</indexterm></keywords>
</metadata></prolog>
<refbody>
<refsyn><title>Syntax</title><codeblock><b>'<i>Text</i>'</b></codeblock> </refsyn>
<section><title>Description</title><p>Some <codeph>ij</codeph> commands require
strings. <codeph>ij</codeph> strings are represented by the same literal format
as SQL strings and are delimited by single quotation marks. To include a single
quotation mark in a string, you must use two single quotation marks, as shown
in the examples below. <codeph>ij</codeph> places no limitation on the lengths
of strings, and will treat embedded new lines in the string as characters
in the string.</p><p>Some <codeph>ij</codeph> commands execute SQL commands
specified as strings. Therefore, you must double any single quotation marks
within such strings, as shown in the second example below.</p><p>The cases
of letters within a string are preserved.</p> </section>
<example><title>Example</title> <codeblock>This is a string in ij     And this is its value
<b>'Mary''s umbrella'</b>          Mary's umbrella
<b>'hello world'</b>               hello world

--returns Joe's
<b>execute 'VALUES ''Joe''''s''';</b></codeblock> </example>
</refbody>
</reference>

