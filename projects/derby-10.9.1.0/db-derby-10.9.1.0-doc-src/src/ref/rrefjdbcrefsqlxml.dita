<?xml version="1.0" encoding="utf-8"?>
 
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<reference id="rrefjdbcrefsqlxml" xml:lang="en-us">
<title>java.sql.SQLXML interface</title>
<prolog><metadata>
<keywords><indexterm>java.sql.SQLXML interface</indexterm></keywords>
</metadata></prolog>
<refbody>
<section><p>In JDBC 4.0, java.sql.SQLXML is the mapping for the SQL XML data
type.  However, <ph conref="../conrefs.dita#prod/productshortname"></ph> defines
the XML data type and operators only in the SQL layer. There is no JDBC-side
support for the XML data type and operators</p><p>You cannot instantiate a
java.sql.SQLXML object in <ph conref="../conrefs.dita#prod/productshortname"></ph>,
or bind directly into an XML value or retrieve an XML value directly from
a result set.  You must bind and retrieve the XML data as Java strings or
character streams by explicitly specifying the XML operators, XMLPARSE and
XMLSERIALIZE, as part of your SQL queries. </p><p>Additionally, <ph conref="../conrefs.dita#prod/productshortname"></ph> does
not provide JDBC metatadata support for the XML data type. </p></section>
</refbody>
</reference>
