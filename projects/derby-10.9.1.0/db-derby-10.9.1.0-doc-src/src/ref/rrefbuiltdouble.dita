<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<reference id="rrefbuiltdouble" xml:lang="en-us">
<title>DOUBLE function</title>
<prolog><metadata>
<keywords><indexterm>DOUBLE function</indexterm></keywords>
</metadata></prolog>
<refbody>
<section>The DOUBLE function returns a floating-point number corresponding
to a: <ul>
<li>number if the argument is a numeric expression.</li>
<li>character string representation of a number if the argument is a string
expression.</li>
</ul></section>
<section><title>Numeric to double</title> <codeblock><b>DOUBLE [PRECISION] (<i>NumericExpression</i> ) </b></codeblock> <dl>
<dlentry>
<dt>NumericExpression</dt>
<dd>The argument is an expression that returns a value of any built-in numeric
data type.</dd>
</dlentry></dl> <p>The result of the function is a double-precision floating-point
number. If the argument can be null, the result can be null; if the argument
is null, the result is the null value.  The result is the same number that
would occur if the argument were assigned to a double-precision floating-point
column or variable. </p> </section>
<section><title>Character string to double</title> <codeblock><b>DOUBLE (<i>StringExpression</i> ) </b></codeblock> <dl>
<dlentry>
<dt>StringExpression</dt>
<dd>The argument can be of type CHAR or VARCHAR in the form of a numeric constant.
Leading and trailing blanks in argument are ignored.</dd>
</dlentry></dl> <p>The result of the function is a double-precision floating-point
number. The result can be null; if the argument is null, the result is the
null value. The result is the same number that would occur if the string was
considered a constant and assigned to a double-precision floating-point column
or variable.</p> </section>
</refbody>
</reference>

