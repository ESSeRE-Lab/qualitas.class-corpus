<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<reference id="rrefjavcallstatout" xml:lang="en-us">
<title>CallableStatements and OUT Parameters <ph></ph></title>
<prolog><metadata>
<keywords><indexterm>java.sql.CallableStatement<indexterm>and OUT parameters</indexterm></indexterm>
</keywords>
</metadata></prolog>
<refbody>
<section><p><ph conref="../conrefs.dita#prod/productshortname"></ph> supports
OUT parameters and CALL statements that return values, as in the following
example:   <codeblock expanse="column"><b>CallableStatement cs = conn.prepareCall(
   "? = CALL getDriverType(cast (? as INT))"
cs.registerOutParameter(1, Types.INTEGER);
cs.setInt(2, 35);
cs.executeUpdate();</b></codeblock> <note>Using a CALL statement with a procedure
that returns a value is only supported with the <i>? =</i> syntax.</note></p></section>
<section><p>Register the output type of the parameter before executing the
call.</p></section>
</refbody>
</reference>

