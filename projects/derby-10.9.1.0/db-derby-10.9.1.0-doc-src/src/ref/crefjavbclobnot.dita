<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->

<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<concept id="crefjavbclobnot" xml:lang="en-us">
<title>Notes on mapping of java.sql.Blob and java.sql.Clob interfaces</title>
<conbody>
<p>The usual <ph conref="../conrefs.dita#prod/productshortname"></ph> locking
mechanisms (shared locks) prevent other transactions from updating or deleting
the database item to which the <i>java.sql.Blob</i> or <i>java.sql.Clob</i> object
is a pointer. However, in some cases, <ph conref="../conrefs.dita#prod/productshortname"></ph>'s
instantaneous lock mechanisms could allow a period of time in which the column
underlying the <i>java.sql.Blob</i> or <i>java.sql.Clob</i> is unprotected.
A subsequent call to <i>getBlob/getClob</i>, or to a <i>java.sql.Blob</i>/<i>java.sql.Clob</i>method,
could cause undefined behavior.</p>
<p>Furthermore, there is nothing to prevent the transaction that holds the <i>java.sql.Blob</i>/<i>java.sql.Clob</i> (as
opposed to another transaction) from updating the underlying row. (The same
problem exists with the <i>getXXXStream</i> methods.) Program applications
to prevent updates to the underlying object while a <i>java.sql.Blob</i>/<i>java.sql.Clob</i> is
open on it; failing to do this could result in undefined behavior.</p>
<p>Do not call more than one of the <i>ResultSet getXXX</i> methods on the
same column if one of the methods is one of the following:   <ul>
<li><i>getBlob</i></li>
<li><i>getClob</i></li>
<li><i>getAsciiStream</i></li>
<li><i>getBinaryStream</i></li>
<li><i>getCharacterStream</i></li>
</ul></p>
<p>These methods share the same underlying stream; calling more than one
of these methods on the same column could result in undefined behavior.
For example:   <codeblock>    ResultSet rs = s.executeQuery("SELECT text FROM CLOBS WHERE i = 1");
    while (rs.next()) {
        aclob = rs.getClob(1);
        ip = rs.getAsciiStream(1);
    }</codeblock></p>
<p>The streams that handle long-columns are not thread safe. This means that
if a user chooses to open multiple threads and access the stream from each
thread, the resulting behavior is undefined. </p>
<p>Clobs are not locale-sensitive.</p>
</conbody>
</concept>

