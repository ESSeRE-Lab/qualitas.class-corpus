<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "../dtd/reference.dtd">
<reference xml:lang="en-us" id="rrefproper40346">
<title>derby.locks.escalationThreshold</title>
<prolog><metadata>
<keywords><indexterm>derby.locks.escalationThreshold</indexterm>
<indexterm>Lock escalation</indexterm>
</keywords>
</metadata>
</prolog><refbody>
<section><title>Function</title>
<p>Used by the <ph conref="../conrefs.dita#prod/productshortname"></ph> system
at runtime in determining when to attempt to escalate locking for at least one
of the tables involved in a transaction from row-level locking to table-level
locking.</p>
<p>A large number of row locks use a lot of resources. If nearly all the rows
are locked, it might be worth the slight decrease in concurrency to lock the
entire table to avoid the large number of row locks.</p>
<p>For more information, see "Locking and performance" in 
<ph conref="../conrefs.dita#pub/cittuning"></ph>.</p>
<p>It is useful to increase this value for large systems (such as
enterprise-level servers, where there is more than 64 MB of memory), and to
decrease it for very small systems (such as palmtops).</p>
</section>
<refsyn><title>Syntax</title>
<codeblock><b>derby.locks.escalationThreshold=<i>numberOfLocks</i></b></codeblock>
</refsyn>
<section><title>Default</title>
<p>5000.</p>
</section>
<section><title>Minimum value</title>
<p>100.</p>
</section>
<section><title>Maximum value</title>
<p>2,147,483,647.</p>
</section>
<example><title>Example</title>
<codeblock><b><ph>-- system-wide property</ph>
derby.locks.escalationThreshold=1000
<ph>-- database-wide property</ph>
CALL SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY(
    'derby.locks.escalationThreshold',
    '1000')</b></codeblock>
</example>
<section><title>Dynamic or static</title>
<p>Dynamic; the change takes effect immediately. For information about dynamic
changes to properties, see
<xref href="crefproperdynstat.dita#crefproperdynstat"/>.</p>
</section></refbody></reference>
