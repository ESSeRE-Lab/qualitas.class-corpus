<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<reference id="rrefjdbc34565" xml:lang="en-us">
<title>java.sql.DriverManager.getConnection method</title>
<prolog><metadata>
<keywords><indexterm>java.sql.DriverManager.getConnection method</indexterm></keywords>
</metadata></prolog>
<refbody>
<section><p>A Java application using the JDBC API establishes a connection
to a database by obtaining a <i>Connection</i> object. The standard way to
obtain a <i>Connection</i> object is to call the method <i>DriverManager.getConnection</i>,
which takes a String containing a database connection URL. A JDBC database
connection URL (uniform resource locator) provides a way of identifying a
database.</p></section>
<section><p><i>DriverManager.getConnection</i> can take one argument besides
a database connection URL, a <i>Properties</i> object. You can use the <i>Properties</i> object
to set database connection URL attributes. If you specify any attributes both on
the connection URL and in a <i>Properties</i> object, the attributes on the
connection URL override the attributes in the <i>Properties</i> object.</p></section>
<section><p><indexterm>Schemas<indexterm>APP as default</indexterm></indexterm>You
can also supply strings representing user names and passwords. When they are
supplied, <ph conref="../conrefs.dita#prod/productshortname"></ph> checks
whether they are valid for the current system if user authentication is enabled.
User names are passed to <ph conref="../conrefs.dita#prod/productshortname"></ph> as
authorization identifiers, which are used to determine whether the user is
authorized for access to the database and for determining the default schema.
When the connection is established, if no user is supplied, <ph conref="../conrefs.dita#prod/productshortname"></ph> sets
the default user to <i>APP</i>, which <ph conref="../conrefs.dita#prod/productshortname"></ph> uses
to name the default schema. If a user is supplied, the default schema is the
same as the user name.</p></section>
</refbody>
</reference>

