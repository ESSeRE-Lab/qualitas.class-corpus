<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<reference id="rrefsqlj32654" xml:lang="en-us">
<title>GROUP BY clause</title>
<prolog><metadata>
<keywords><indexterm>GROUP BY clause</indexterm></keywords>
</metadata></prolog>
<refbody>
<section> <p>A GROUP BY clause, part of a <i><xref href="rrefselectexpression.dita#rrefselectexpression">SelectExpression</xref>,</i> groups
a result into subsets that have matching values for one or more columns. In
each group, no two rows have the same value for the grouping column or columns.
NULLs are considered equivalent for grouping purposes.</p>  <p>You typically
use a GROUP BY clause in conjunction with an aggregate expression.</p>
<p>Using the ROLLUP syntax, you can specify that multiple levels of grouping
    should be computed at once.</p>
</section>
<refsyn><title>Syntax</title>
    <codeblock><b>
GROUP BY 
{
    <i><xref href="rrefcolumnname.dita#rrefcolumnname">column-Name</xref></i> [ , <i><xref href="rrefcolumnname.dita#rrefcolumnname">column-Name</xref></i> ]*  
|
    ROLLUP ( <i><xref href="rrefcolumnname.dita#rrefcolumnname">column-Name</xref></i> [ , <i><xref href="rrefcolumnname.dita#rrefcolumnname">column-Name</xref></i> ]* )
}</b></codeblock>
        <p><i><xref href="rrefcolumnname.dita#rrefcolumnname">column-Name</xref></i> must be a column from
the current scope of the query; there can be no columns from a query block
outside the current scope. For example, if a GROUP BY clause is in a subquery,
it cannot refer to columns in the outer query.</p> <p><i>SelectItems</i> in
the <i><xref href="rrefselectexpression.dita#rrefselectexpression">SelectExpression</xref></i> with
a GROUP BY clause must contain only aggregates or grouping columns.</p> </refsyn>
<example><title>Examples</title>
<codeblock><b><ph>-- find the average flying_times of flights grouped by
-- airport</ph>
SELECT AVG (flying_time), orig_airport
FROM Flights
GROUP BY orig_airport

SELECT MAX(city_name), region
FROM Cities, Countries
WHERE Cities.country_ISO_code = Countries.country_ISO_code
GROUP BY region

<ph>-- group by an a smallint</ph>
SELECT ID, AVG(SALARY)
FROM SAMP.STAFF
GROUP BY ID

<ph>-- Get the AVGSALARY and EMPCOUNT columns, and the DEPTNO column using the AS clause
-- And group by the WORKDEPT column using the correlation name OTHERS</ph>
SELECT OTHERS.WORKDEPT AS DEPTNO,
AVG(OTHERS.SALARY) AS AVGSALARY,
COUNT(*) AS EMPCOUNT
FROM SAMP.EMPLOYEE OTHERS
GROUP BY OTHERS.WORKDEPT

<ph>-- Compute sub-totals of Sales_History data, grouping it by Region, by
-- (Region, State), and by (Region, State, Product), as well as computing
-- an overall total of the sales for all Regions, States, and Products:</ph>
SELECT Region, State, Product, SUM(Sales) Total_Sales
FROM Sales_History 
GROUP BY ROLLUP(Region, State, Product)
</b></codeblock> </example>
</refbody>
</reference>

