<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<reference id="rrefjdbc37244" xml:lang="en-us">
<title>JDBC escape syntax for outer joins</title>
<prolog><metadata>
<keywords><indexterm>oj (JDBC escape keyword)</indexterm><indexterm>{oj (JDBC
escape syntax)</indexterm><indexterm>Outer joins<indexterm>JDBC escape syntax
for</indexterm></indexterm></keywords>
</metadata></prolog>
<refbody>
<section> <p><ph conref="../conrefs.dita#prod/productshortname"></ph> interprets
the JDBC escape syntax for outer joins (and all join operations) as equivalent
to the correct SQL syntax for outer joins or the appropriate join operation.</p>  <p>For
information about join operations, see <xref href="rrefsqlj29840.dita#rrefsqlj29840"></xref>.</p></section>
<refsyn><title>Syntax</title> <codeblock><b>{oj <i><xref href="rrefsqlj29840.dita#rrefsqlj29840">JOIN operations</xref></i> [<i><xref
href="rrefsqlj29840.dita#rrefsqlj29840">JOIN operations</xref></i> ]* }</b></codeblock> </refsyn>
<section><title>Equivalent to</title> <codeblock><b><b><i><xref href="rrefsqlj29840.dita#rrefsqlj29840">JOIN operations</xref></i></b> [<b><i><xref
href="rrefsqlj29840.dita#rrefsqlj29840">JOIN operations</xref></i></b> ]* </b></codeblock> </section>
<example><title>Examples</title>
<codeblock><b><ph>-- outer join</ph>
SELECT *
FROM
{oj Countries LEFT OUTER JOIN Cities ON 
   (Countries.country_ISO_code=Cities.country_ISO_code)}
<ph>-- another join operation</ph>
SELECT *
FROM
{oj Countries JOIN Cities ON (Countries.country_ISO_code=Cities.country_ISO_code)}
<ph>-- a TableExpression can be a joinOperation. Therefore
-- you can have multiple join operations in a FROM clause</ph>
SELECT E.EMPNO, E.LASTNAME, M.EMPNO, M.LASTNAME
FROM {oj EMPLOYEE E INNER JOIN DEPARTMENT
INNER JOIN EMPLOYEE M ON MGRNO = M.EMPNO ON E.WORKDEPT = DEPTNO};</b></codeblock> </example>
</refbody>
</reference>

