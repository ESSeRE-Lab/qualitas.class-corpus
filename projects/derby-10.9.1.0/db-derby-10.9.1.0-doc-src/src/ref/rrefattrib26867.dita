<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<reference id="rrefattrib26867" xml:lang="en-us">
<title>create=true attribute</title>
<prolog><metadata>
<keywords><indexterm>create=true database connection URL attribute</indexterm>
</keywords>
</metadata></prolog>
<refbody>
<section><title>Function</title> <p>Creates the standard database specified
within the database connection URL <ph conref="../conrefs.dita#prod/productshortname"></ph> system
and then connects to it. If the database cannot be created, the error appears
in the error log and the connection attempt fails with an <i>SQLException</i> indicating
that the database cannot be found.</p> <p>If the database already exists,
creates a connection to the existing database and an <i>SQLWarning</i> is
issued.</p> <p>JDBC does not remove the database on failure to connect at
create time if failure occurs after the database call occurs. If a database
connection URL used <i>create=true</i> and the connection fails to be created,
check for the database directory. If it exists, remove it and its contents
before the next attempt to create the database.</p> 
</section>
<section><title>Database owner</title> <p>
  When the database is created, the current authorization identifier
  becomes the database owner (see the
  <i><xref href="rrefattrib10035.dita#rrefattrib10035"></xref></i>).
  If authentication and SQL authorization are both enabled (see "Enabling user authentication"
  and "Setting the SQL standard authorization mode"
  in the 
  <ph conref="../conrefs.dita#pub/citdevelop"></ph>),
  only the database owner can
  <xref href="rrefattrib16471.dita#rrefattrib16471">shut down</xref>
  or <xref href="rrefattribdrop.dita#rrefattribdrop">drop</xref>
  the database,
  <xref href="rrefattrib15290.dita#rrefattrib15290">encrypt</xref> it,
  reencrypt it with a new
  <xref href="rrefattribnewbootpw.dita#rrefattribnewbootpw">boot password</xref>
  or new
  <xref href="rrefattribnewencryptkey.dita#rrefattribnewencryptkey">encryption key</xref>,
  or perform a full upgrade. 
  If authentication is not enabled, and no
  user is supplied, the database owner defaults to "APP", which is also
  the name of the default schema (see <xref href="rrefsqlj32268.dita#rrefsqlj32268"></xref>).
</p>
</section>
<section><title>Combining with other attributes</title> <p>You
must specify a <i>databaseName</i> (after the subprotocol or subsubprotocol in
the database
connection URL) or a <i><xref href="rrefattrib17246.dita#rrefattrib17246">databaseName=nameofDatabase</xref></i> attribute
with this attribute.</p> <p>You can combine this attribute with other attributes.
To specify a territory when creating a database, use the <i><xref href="rrefattrib56769.dita#rrefattrib56769">territory=ll_CC</xref></i> attribute.
</p> </section>
<example><title>Examples</title>
<p>Creating a file system database:</p>
<codeblock><b><ph>-- create a file system database</ph>
jdbc:derby:sampleDB;create=true
<ph>-- create a file system database using the databaseName attribute</ph>
jdbc:derby:;databaseName=newDB;create=true
<ph>-- create an in-memory database using the embedded driver</ph>
jdbc:derby:memory:myInMemDB;create=true
<ph>-- create an in-memory database using the databaseName attribute</ph>
jdbc:derby:;databaseName=memory:myInMemDB;create=true
<ph>-- create an in-memory database using the Network Server</ph>
jdbc:derby://localhost:1527/memory:myInMemDB;create=true</b></codeblock>
<p>See "Using in-memory databases" in the
<ph conref="../conrefs.dita#pub/citdevelop"/> for information on creating
in-memory databases.</p>
</example>
</refbody>
</reference>

