<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<reference id="rrefsqlj15260" xml:lang="en-us">
<title>DECIMAL data type</title>
<prolog><metadata>
<keywords><indexterm>DECIMAL data type</indexterm></keywords>
</metadata></prolog>
<refbody>
<section> <p>DECIMAL provides an exact numeric in which the precision and
scale can be arbitrarily sized. You can specify the precision (the total number
of digits, both to the left and the right of the decimal point) and the scale
(the number of digits of the fractional component). The amount of storage
required is based on the precision.</p></section>
<refsyn><title>Syntax</title> <codeblock><b>{ DECIMAL | DEC } [(<i>precision</i> [, <i>scale</i> ])]</b></codeblock> <p>The <i>precision</i> must
be between 1 and 31. The <i>scale</i> must be less than or equal to the precision.</p> <p>If
the scale is not specified, the default scale is 0. If the precision is not
specified, the default precision is 5.</p> <p>An attempt to put a numeric
value into a DECIMAL is allowed as long as any non-fractional precision is
not lost. When truncating trailing digits from a DECIMAL value, <ph conref="../conrefs.dita#prod/productshortname"></ph> rounds
down.</p> <p>For example:   <codeblock>-- this cast loses only fractional precision
<b>values cast (1.798765 AS decimal(5,2));</b>
1
--------
1.79
-- this cast does not fit
<b>values cast (1798765 AS decimal(5,2));</b>
1
--------
ERROR 22003: The resulting value is outside the range 
for the data type DECIMAL/NUMERIC(5,2).</codeblock></p> <p>When mixed with
other data types in expressions, the resulting data type follows the rules
shown in <xref href="rrefsqlj27767.dita#rrefsqlj27767"></xref>.</p> <p>See also <xref
href="rrefsqlj20204.dita#rrefsqlj20204"></xref>. </p> <p>When two decimal values are
mixed in an expression, the scale and precision of the resulting value follow
the rules shown in <xref href="rrefsqlj36146.dita#rrefsqlj36146"></xref>.</p>
<p>Integer constants too big for BIGINT are made
DECIMAL constants.</p>  </refsyn>
<section><title>Corresponding compile-time Java type</title> <p><i>java.math.BigDecimal</i></p> </section>
<section><title>JDBC metadata type (java.sql.Types)</title> <p>DECIMAL</p> </section>
<example><title>Examples</title>
<codeblock><b>VALUES 123.456

VALUES 0.001</b></codeblock></example>
</refbody>
</reference>

