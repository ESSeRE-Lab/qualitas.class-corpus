<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<reference id="rrefjdbclimit" xml:lang="en-us">
<title>JDBC escape syntax for limit/offset clauses</title>
<prolog><metadata>
<keywords><indexterm>LIMIT (JDBC escape keyword)</indexterm>
<indexterm>OFFSET (JDBC escape keyword)</indexterm>
</keywords>
</metadata></prolog>
<refbody>
<section>
<p>The LIMIT escape clause can occur in a query at the point where an
OFFSET/FETCH FIRST clause can appear. See
<xref href="rrefsqljoffsetfetch.dita#rrefsqljoffsetfetch"></xref> for more
information.</p>
</section>
<refsyn><title>Syntax</title>
<codeblock><b>{ LIMIT <i>rowCount</i> [ OFFSET <i>startRow</i> ] }</b></codeblock>
<p>The <i>rowCount</i> is a non-negative integer that specifies the
number of rows to return. If <i>rowCount</i> is 0, all rows from <i>startRow</i>
forward are returned.</p>
<p>The <i>startRow</i> is a non-negative number that specifies the number of
rows to skip before returning results.</p>
</refsyn>
<section><title>Equivalent to</title>
<codeblock><b>OFFSET <i>startRow</i> FETCH NEXT <i>rowCount</i> ROWS ONLY</b></codeblock>
</section>
<example><title>Examples</title> 
<codeblock><b><ph>-- return the first two rows of sorted table t</ph>
SELECT * FROM t
ORDER BY a
{ LIMIT 2 }
<ph>-- return two rows of sorted table t, starting with the eleventh row</ph>
SELECT * FROM t
ORDER BY a
{ LIMIT 2 OFFSET 10 }</b></codeblock> 
</example>
</refbody>
</reference>
