<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<reference id="rrefjdbc23502" xml:lang="en-us">
<title>java.sql.ResultSet interface</title>
<prolog><metadata>
<keywords><indexterm>java.sql.ResultSet interface</indexterm></keywords>
</metadata></prolog>
<refbody>
<section><p>A positioned update or delete issued against a cursor being accessed
through a <i>ResultSet</i> object modifies or deletes the current row of the <i>ResultSet</i> object.</p></section>
<section><p>Some intermediate protocols might pre-fetch rows. This causes
positioned updates and deletes to operate against the row the underlying cursor
is on, and not the current row of the <i>ResultSet</i>.<indexterm>Cursors<indexterm>pre-fetching
affecting</indexterm></indexterm></p></section>
<section><p>JDBC does not define the sort of rounding to use for <i>ResultSet.getBigDecimal</i>. <ph
conref="../conrefs.dita#prod/productshortname"></ph> uses <i>java.math.BigDecimal.ROUND_HALF_DOWN</i>.</p></section>
<section>
<p>The following table describes features of <i>ResultSet</i> methods that are
specific to <ph conref="../conrefs.dita#prod/productshortname"></ph>.</p>
<table frame="all">
<title>Implementation notes on <i>ResultSet</i> methods</title>
<desc>This table describes the implementation-specific features of <i>ResultSet</i> methods, providing the return type and signature for each method.</desc>
<tgroup cols="3" colsep="1" rowsep="1">
<colspec colname="1" colnum="1" colwidth="13*"/>
<colspec colname="2" colnum="2" colwidth="36*"/>
<colspec colname="3" colnum="3" colwidth="51*"/>
<thead>
<row valign="bottom">
<entry colname="1">Returns</entry>
<entry colname="2">Signature</entry>
<entry colname="3">Implementation Notes</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="1"><i>void</i></entry>
<entry colname="2"><i>deleteRow()</i></entry>
<entry colname="3">After the row is deleted, the <i>ResultSet</i> object will
be positioned before the next row. Before issuing any methods other
than close on the <i>ResultSet</i> object, the program will need to
reposition the <i>ResultSet</i> object.</entry>
</row>
<row>
<entry colname="1"><i>int</i></entry>
<entry colname="2"><i>getConcurrency()</i></entry>
<entry colname="3">If the Statement object has <i>CONCUR_READ_ONLY</i> concurrency,
then this method will return <i>ResultSet.CONCUR_READ_ONLY</i>. But if the
Statement object has <i>CONCUR_UPDATABLE</i> concurrency, then the return
value will depend on whether the underlying language <i>ResultSet</i> is updatable
or not. If the language <i>ResultSet</i> is updatable, then <i>getConcurrency()</i> will
return <i>ResultSet.CONCUR_UPDATABLE</i>. If the language <i>ResultSet</i> is not
updatable, then <i>getConcurrency()</i> will return <i>ResultSet.CONCUR_READ_ONLY</i>.</entry>
</row>
<row>
<entry colname="1"><i>boolean</i></entry>
<entry colname="2"><i>rowDeleted()</i></entry>
<entry colname="3">For forward-only result sets this method always returns <i>false</i>, for 
scrollable result sets it returns <i>true</i> if the row has been deleted, via result set or positioned delete.</entry>
</row>
<row>
<entry colname="1"><i>boolean</i></entry>
<entry colname="2"><i>rowInserted()</i></entry>
<entry colname="3">Always returns <i>false</i>.</entry>
</row>
<row>
<entry colname="1"><i>boolean</i></entry>
<entry colname="2"><i>rowUpdated()</i></entry>
<entry colname="3">For forward-only result sets this method always returns <i>false</i>, for 
scrollable result sets it returns <i>true</i> if the row has been updated, via result set or positioned update.</entry>
</row>
<row>
<entry colname="1"><i>void</i></entry>
<entry colname="2"><i>updateRow()</i></entry>
<entry colname="3">After the row is updated, the <i>ResultSet</i> object will be
positioned before the next row. Before issuing any methods other than close
on the <i>ResultSet</i> object, the program will need to reposition the <i>ResultSet</i>
object.</entry>
</row>
</tbody>
</tgroup>
</table>
</section>
</refbody>
</reference>

