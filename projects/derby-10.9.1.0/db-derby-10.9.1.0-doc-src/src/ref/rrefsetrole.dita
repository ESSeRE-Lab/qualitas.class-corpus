<?xml version="1.0" encoding="utf-8"?>
 
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "../dtd/reference.dtd">
<reference id="rrefsetrole" xml:lang="en-us">
<title>SET ROLE statement</title>
<prolog><metadata>
<keywords><indexterm>SET ROLE statement</indexterm>
<indexterm>SQL statements<indexterm>SET ROLE</indexterm></indexterm>
<indexterm>roles<indexterm>setting</indexterm></indexterm>
</keywords>
</metadata></prolog>
<refbody>
<section>
<p>The SET ROLE statement allows you to set the current role for the
current SQL context of a session.</p>
<p>You can set a role only if the current user has been granted the role, or
if the role has been granted to PUBLIC.</p>
<p>For more information on roles, see "Using SQL roles" in the
<ph conref="../conrefs.dita#pub/citdevelop"></ph>.</p>
</section>
<refsyn><title>Syntax</title> 
<codeblock>
<b>SET ROLE { <i><xref href="rrefrolename.dita#rrefrolename">roleName</xref></i> | 'string-constant' | ? | NONE }
</b></codeblock>
</refsyn>
<section>
<p>If you specify a <i>roleName</i> of NONE, the effect is to unset the current
role.</p>
<p>If you specify the role as a string constant or as a dynamic parameter
specification (<codeph>?</codeph>), any leading and trailing blanks are trimmed
from the string before attempting to use the remaining (sub)string as a
<i>roleName</i>. The dynamic parameter specification can be used in prepared
statements, so the SET ROLE statement can be prepared once and then executed
with different role values. You cannot specify NONE as a dynamic parameter.</p>
<p>Setting a role identifies a set of privileges that is a union of the 
following:</p>
<ul>
<li>The privileges granted to that role</li>
<li>The union of privileges of roles contained in that role (for a definition of
role containment, see "Syntax for roles" in <xref
href="rrefsqljgrant.dita#rrefsqljgrant/grantrolesyn">GRANT statement</xref>)
</li>
</ul>
<p>In a session, the <i>current privileges</i> define what the session is
allowed to access. The <i>current privileges</i> are the union of the
following:</p>
<ul>
<li>The privileges granted to the current user</li>
<li>The privileges granted to PUBLIC</li>
<li>The privileges identified by the current role, if set</li>
</ul>
<p>The SET ROLE statement is not transactional; a rollback does not undo the
effect of setting a role. If a transaction is in progress, an attempt to set a
role results in an error.</p>
</section>
<example><title>Examples</title>
<codeblock><b>SET ROLE reader;</b></codeblock>
<codeblock><b>  // These examples show the use of SET ROLE in JDBC statements.
  // The case normal form is visible in the SYS.SYSROLES system table.
  stmt.execute("SET ROLE admin");      -- case normal form: ADMIN
  stmt.execute("SET ROLE \"admin\"");  -- case normal form: admin
  stmt.execute("SET ROLE none");       -- special case

  PreparedStatement ps = conn.prepareStatement("SET ROLE ?");
  ps.setString(1, "  admin ");  -- on execute: case normal form: ADMIN
  ps.setString(1, "\"admin\""); -- on execute: case normal form: admin
  ps.setString(1, "none");      -- on execute: syntax error
  ps.setString(1, "\"none\"");  -- on execute: case normal form: none
</b></codeblock>
</example>
</refbody>
</reference>
