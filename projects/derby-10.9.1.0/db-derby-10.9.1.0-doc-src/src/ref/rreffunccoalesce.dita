<?xml version="1.0" encoding="utf-8"?>
 
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<reference id="rreffunccoalesce" xml:lang="en-us">
<title>COALESCE function</title>
<shortdesc>The COALESCE function takes two or more compatible arguments and
returns the first argument that is not null.</shortdesc>
<prolog><metadata>
<keywords><indexterm>COALESCE function</indexterm>
<indexterm>functions<indexterm>COALESCE</indexterm></indexterm>
</keywords>
</metadata></prolog>
<refbody>
<section><p>The result is null only if all the arguments are null.</p>
<p>If all the parameters of the function call are dynamic, an error occurs.</p>
<note>A synonym for COALESCE is VALUE. VALUE is accepted by
<ph conref="../conrefs.dita#prod/productshortname"></ph> but is not
recognized by the SQL standard.</note></section>
<refsyn><title>Syntax</title>
<codeblock><b>COALESCE ( <varname>expression</varname>, <varname>expression</varname> [, <varname>expression</varname>]* )</b></codeblock> 
<p>The function must have at least two arguments.</p>
</refsyn>
<example><title>Example</title>
<codeblock><b>ij> -- create table with three different integer types
ij> create table temp(smallintcol smallint, bigintcol bigint, intcol integer);
0 rows inserted/updated/deleted

ij> insert into temp values (1, null, null);
1 row inserted/updated/deleted
ij> insert into temp values (null, 2, null);
1 row inserted/updated/deleted
ij> insert into temp values (null, null, 3);
1 row inserted/updated/deleted

ij> select * from temp;
SMALL&amp;|BIGINTCOL           |INTCOL     
---------------------------------------
1     |NULL                |NULL       
NULL  |2                   |NULL       
NULL  |NULL                |3          

3 rows selected

ij> -- the return data type of coalesce is bigint
ij> select coalesce (smallintcol, bigintcol) from temp;
1                   
--------------------
1                   
2                   
NULL                

3 rows selected

ij> -- the return data type of coalesce is bigint
ij> select coalesce (smallintcol, bigintcol, intcol) from temp;
1
--------------------
1
2
3 

3 rows selected

ij> -- the return data type of coalesce is integer
ij> select coalesce (smallintcol, intcol) from temp;
1          
-----------
1          
NULL       
3          

3 rows selected
</b></codeblock>
</example>
</refbody>
</reference>
