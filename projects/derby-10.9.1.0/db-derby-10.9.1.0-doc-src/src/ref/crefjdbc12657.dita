<?xml version="1.0" encoding="utf-8"?>
 
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="crefjdbc12657" xml:lang="en-us">
<title>JDBC reference</title>
<shortdesc><ph conref="../conrefs.dita#prod/productshortname"></ph> comes
with a built-in JDBC driver. </shortdesc>
<prolog><metadata>
<keywords><indexterm>JDBC API<indexterm>Derby implementation of</indexterm></indexterm>
</keywords>
</metadata></prolog>
<conbody>
<p>That makes the JDBC API the only API for working with <ph conref="../conrefs.dita#prod/productshortname"></ph> databases.
The driver is a native-protocol fully Java technology-enabled driver (Type 4
of the types described under "JDBC Architecture" in <xref format="html"
href="http://www.oracle.com/technetwork/java/overview-141217.html"
scope="external">http://www.oracle.com/technetwork/java/overview-141217.html</xref>).
</p>
<p>This section provides reference information about <ph conref="../conrefs.dita#prod/productshortname"></ph>'s
implementation of the JDBC API and documents the way it conforms to the JDBC
3.0 and 4.0 APIs.</p>
<p>See the <cite><ph conref="../conrefs.dita#pub/citdevelop"></ph></cite> for
task-oriented instructions on working with the driver.</p>
<p>This JDBC driver implements the standard JDBC interfaces.
When invoked from an application running in the same Java Virtual Machine (JVM)
as <ph conref="../conrefs.dita#prod/productshortname"></ph>,
the JDBC driver supports connections to a <ph conref="../conrefs.dita#prod/productshortname"></ph> database
in embedded mode. No network transport is required to access the database.
In client/server mode, the client application dispatches JDBC requests to
the JDBC server over a network; the server, in turn, which runs in the same
JVM as <ph conref="../conrefs.dita#prod/productshortname"></ph>, sends requests
to <ph conref="../conrefs.dita#prod/productshortname"></ph> through the embedded
JDBC driver. </p>
<p><indexterm>SQLState XJZZZ<indexterm>meaning of</indexterm></indexterm>The <ph
conref="../conrefs.dita#prod/productshortname"></ph> JDBC implementation provides
access to <ph conref="../conrefs.dita#prod/productshortname"></ph> databases
and supplies all the required JDBC interfaces. Unimplemented aspects of the
JDBC driver return an <i>SQLException</i> with a message stating "Feature
not implemented" and an <i>SQLState</i> of XJZZZ. These unimplemented parts
are for features not supported by <ph conref="../conrefs.dita#prod/productshortname"></ph>. </p>
</conbody>
</concept>
