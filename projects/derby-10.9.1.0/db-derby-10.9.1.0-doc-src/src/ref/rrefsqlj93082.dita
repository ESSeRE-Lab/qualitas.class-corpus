<?xml version="1.0" encoding="utf-8"?>
 
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<reference id="rrefsqlj93082" xml:lang="en-us">
<title>SUBSTR function</title>
<prolog><metadata>
<keywords><indexterm>functions<indexterm>SUBSTR</indexterm></indexterm><indexterm>SUBSTR
function</indexterm></keywords>
</metadata></prolog>
<refbody>
<section> <p>The SUBSTR function acts on a character string expression or
a bit string expression. The type of the result is a <xref href="rrefsqlj41207.dita#rrefsqlj41207">VARCHAR</xref> in
the first case and <xref href="rrefsqlj32714.dita#rrefsqlj32714">VARCHAR FOR
BIT DATA</xref> in the second case. The length of the result is the maximum
length of the source type.</p></section>
<refsyn><title>Syntax</title><codeblock>SUBSTR({ <i>CharacterExpression</i> },
   <i>StartPosition</i> [, <i>LengthOfString</i> ] )</codeblock><p>The parameter <i>startPosition</i> and
the optional parameter <i>lengthOfString</i> are both integer expressions.
The first character or bit has a <i>startPosition</i> of 1. If you specify
0, <ph conref="../conrefs.dita#prod/productshortname"></ph> assumes that you
mean 1.</p><p>The parameter <i>characterExpression</i> is a CHAR, VARCHAR,
or LONG VARCHAR data type or any built-in type that is implicitly converted
to a string (except a bit expression).</p><p>For character expressions, the <i>startPosition</i> and <i>lengthOfString</i> parameters
refer to characters. For bit expressions, the <i>startPosition</i> and <i>lengthOfString</i> parameters
refer to bits. </p><p>If the <i>startPosition</i> is positive, it refers to
position from the start of the source expression (counting the first character
as 1). The <i>startPosition</i> cannot be a negative number. </p><p>If the <i>lengthOfString</i> is
not specified, SUBSTR returns the substring of the expression from the <i>startPosition</i> to
the end of the source expression. If <i>lengthOfString</i> is specified, SUBSTR
returns a VARCHAR or VARBIT of length <i>lengthOfString</i> starting at the <i>startPosition</i>.
The SUBSTR function returns an error if you specify a negative number for
the parameter <i>lengthOfString</i>.</p> </refsyn>
<example><title>Examples</title><p>To return a substring of the word <codeph>hello</codeph>,
starting at the second character and continuing until the end of the word,
use the following clause:<codeblock>VALUES SUBSTR('hello', 2)</codeblock>The
result is '<codeph>ello</codeph>'.</p><p>To return a substring of the word <codeph>hello</codeph>,
starting at the first character and continuing for two characters, use the
following clause:<codeblock>VALUES SUBSTR('hello',1,2)</codeblock>The result
is '<codeph>he</codeph>'.</p></example>
</refbody>
</reference>
