<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "../dtd/reference.dtd">
<reference xml:lang="en-us" id="rrefproper27529">
<title>derby.storage.initialPages</title>
<prolog><metadata>
<keywords><indexterm>derby.storage.initialPages</indexterm>
<indexterm>Database pages<indexterm>preallocating</indexterm></indexterm>
</keywords>
</metadata>
</prolog><refbody>
<section><title>Function</title>
<p>The on-disk size of a
<ph conref="../conrefs.dita#prod/productshortname"></ph> table grows by one page
at a time until eight pages of user data (or nine pages of total disk use; one
is used for overhead) have been allocated. Then it will grow by eight pages at a
time if possible.</p>
<p>A <ph conref="../conrefs.dita#prod/productshortname"></ph> table or index can
be created with a number of pages already pre-allocated. To do so, specify the
property prior to the CREATE TABLE or CREATE INDEX statement.</p>
<p>Define the number of user pages the table or index is to be created with.
The purpose of this property is to preallocate a table or index of reasonable
size if the user expects that a large amount of data will be inserted into
the table or index. A table or index that has the pre-allocated pages will
enjoy a small performance improvement over a table or index that has no
pre-allocated pages when the data are loaded.</p>
<p>The total desired size of the table or index should be the following number
of bytes:</p>  
<codeblock><b>(1 + derby.storage.initialPages) * derby.storage.pageSize</b></codeblock>
<p>When you create a table or an index after setting this property,
<ph conref="../conrefs.dita#prod/productshortname"></ph> attempts to preallocate
the requested number of user pages. However, the operations do not fail even if
they are unable to preallocate the requested number of pages, as long as they
allocate at least one page.</p>
</section>
<section><title>Default</title>
<p>1 page.</p>
</section>
<section><title>Minimum value</title>
<p>The minimum number of <i>initialPages</i> is 1.</p>
</section>
<section><title>Maximum value</title>
<p>The maximum number of <i>initialPages</i> is 1000.</p>
</section>
<example><title>Example</title>
<codeblock><b>-- system-wide property 
derby.storage.initialPages=30

-- database-wide property 
CALL SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY( 
'derby.storage.initialPages', '30') </b></codeblock>
</example>
<section><title>Dynamic or static</title>
<p>This property is static; if you change it while
<ph conref="../conrefs.dita#prod/productshortname"></ph> is running, the change
does not take effect until you reboot.</p>
</section>
</refbody></reference>
