<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<reference id="rrefsqlj30435" xml:lang="en-us">
<title>BIGINT data type</title>
<prolog><metadata>
<keywords><indexterm>BIGINT data type</indexterm></keywords>
</metadata></prolog>
<refbody>
<section> <p>BIGINT provides 8 bytes of storage for integer values.</p></section>
<refsyn><title>Syntax</title> <codeblock><b>BIGINT</b></codeblock> </refsyn>
<section><title>Corresponding compile-time Java type</title> <p><i>java.lang.Long</i></p> </section>
<section><title>JDBC metadata type (java.sql.Types)</title> <p>BIGINT</p> </section>
<section><title>Minimum value</title> <p id="sqlj76321">-9223372036854775808
(<i>java.lang.Long.MIN_VALUE</i>)</p> </section>
<section><title>Maximum value</title> <p id="sqlj25246">9223372036854775807
(<i>java.lang.Long.MAX_VALUE</i>)</p> <p>When mixed with other data types
in expressions, the resulting data type follows the rules shown in <xref href="rrefsqlj27767.dita#rrefsqlj27767"></xref>.</p> <p>An
attempt to put an integer value of a larger storage size into a location of
a smaller size fails if the value cannot be stored in the smaller-size location.
Integer types can always successfully be placed in approximate numeric values,
although with the possible loss of some precision. BIGINTs can be stored in
DECIMALs if the DECIMAL precision is large enough for the value.</p> </section>
<example><title>Example</title>
<codeblock><b>9223372036854775807</b></codeblock> </example>
</refbody>
</reference>

