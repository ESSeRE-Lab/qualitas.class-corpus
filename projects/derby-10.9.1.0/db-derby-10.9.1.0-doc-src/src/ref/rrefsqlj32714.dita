<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<reference id="rrefsqlj32714" xml:lang="en-us">
<title>VARCHAR FOR BIT DATA data type</title>
<prolog><metadata>
<keywords><indexterm>VARCHAR FOR BIT DATA type</indexterm></keywords>
</metadata></prolog>
<refbody>
<section> <p>The VARCHAR FOR BIT DATA type allows you to store binary strings
less than or equal to a specified length. It is useful for unstructured data
where character strings are not appropriate (e.g., images). </p></section>
<refsyn><title>Syntax</title> <codeblock><b>{ VARCHAR | CHAR VARYING | CHARACTER VARYING } (<i>length</i>) FOR BIT DATA </b></codeblock> <p><i>length</i
> is an unsigned integer literal designating the length in bytes. </p> <p>Unlike
the case for the CHAR FOR BIT DATA type, there is no default <i>length</i> for
a VARCHAR FOR BIT DATA type. The maximum size of the <i>length</i> value is
32,672 bytes.</p> </refsyn>
<section><title>JDBC metadata type (java.sql.Types)</title> <p>VARBINARY</p> <p><indexterm>Byte
strings<indexterm>variable-length</indexterm></indexterm>VARCHAR FOR BIT DATA
stores variable-length byte strings. Unlike CHAR FOR BIT DATA values, VARCHAR
FOR BIT DATA values are not padded out to the target length.</p> <p>An operation
on a VARCHAR FOR BIT DATA and a CHAR FOR BIT DATA value (e.g., a concatenation)
yields a VARCHAR FOR BIT DATA value.</p> 
<p>The type of a byte literal is always a
VARCHAR FOR BIT DATA, not a CHAR FOR BIT DATA.</p> </section>
</refbody>
</reference>

