<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<reference id="rrefsqlj32693" xml:lang="en-us">
<title>AVG function</title>
<prolog><metadata>
<keywords><indexterm>AVG aggregate function</indexterm></keywords>
</metadata></prolog>
<refbody>
<section> <p>AVG is an aggregate function that evaluates the average of an
expression over a set of rows (see <xref href="rrefsqlj33923.dita#rrefsqlj33923"></xref>).
AVG is allowed only on expressions that evaluate to numeric data types.</p></section>
<refsyn><title>Syntax</title> <codeblock><b>AVG ( [ DISTINCT | ALL ] <i>Expression</i> )</b></codeblock> <p><indexterm>DISTINCT<indexterm>qualifier
in AVG function</indexterm></indexterm>The DISTINCT qualifier eliminates duplicates.
The ALL qualifier retains duplicates. ALL is the default value if neither
ALL nor DISTINCT is specified. For example, if a column contains the values
1.0, 1.0, 1.0, 1.0, and 2.0, AVG(col) returns a smaller value than AVG(DISTINCT
col).</p> <p>Only one DISTINCT aggregate expression per <i><xref href="rrefselectexpression.dita#rrefselectexpression">SelectExpression</xref></i> is
allowed. For example, the following query is not valid:   <codeblock><b>SELECT AVG (DISTINCT flying_time), SUM (DISTINCT miles)
FROM Flights</b></codeblock></p> <p>The expression can contain multiple column
references or expressions, but it cannot contain another aggregate or subquery.
It must evaluate to an SQL-92 numeric data type. You can therefore call methods
that evaluate to SQL-92 data types. If an expression evaluates to NULL, the
aggregate skips that value.</p> <p>The resulting data type is the same as
the expression on which it operates (it will never overflow). The following
query, for example, returns the INTEGER <i>1</i>, which might not be what
you would expect:   <codeblock><b>SELECT AVG(c1)
FROM (VALUES (1), (1), (1), (1), (2)) AS myTable (c1)</b></codeblock></p> <p>CAST
the expression to another data type if you want more precision:   <codeblock><b>SELECT AVG(CAST (c1 AS DOUBLE PRECISION))
FROM (VALUES (1), (1), (1), (1), (2)) AS myTable (c1)</b></codeblock></p> </refsyn>
</refbody>
</reference>

