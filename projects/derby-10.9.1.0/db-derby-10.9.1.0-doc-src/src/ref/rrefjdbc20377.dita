<?xml version="1.0" encoding="utf-8"?>
 
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<reference id="rrefjdbc20377" xml:lang="en-us">
<title>Mapping of java.sql.Types to SQL types</title>
<shortdesc>In Derby, the java.sql.Types are mapped to SQL data types</shortdesc>
<prolog><metadata>
<keywords><indexterm>java.sql.Types<indexterm>mapped to SQL types</indexterm></indexterm>
<indexterm>SQL types<indexterm>mapped to java.sql.Types</indexterm></indexterm>
<indexterm>JDBC types<indexterm>mapped to SQL types</indexterm><indexterm>for
JDBC and SQL types</indexterm></indexterm><indexterm>data types<indexterm>JDBC
types to SQL types</indexterm></indexterm><indexterm>java.sql.Types<indexterm>LONGVARBINARY</indexterm></indexterm>
<indexterm>java.sql.Types<indexterm>LONGVARCHAR</indexterm></indexterm><indexterm>java.sql.Types<indexterm>FLOAT
data type</indexterm></indexterm></keywords>
</metadata></prolog>
<refbody>
<section><p>The following table shows the mapping of <i>java.sql.Types</i> to
SQL types.</p>
<table frame="all" id="jdbc31241"><title>Mapping of <i>java.sql.Types</i>
to SQL types</title>
<desc>This table lists the <i>java.sql.Types</i> and shows how they map to SQL types.</desc>
<tgroup cols="2" colsep="1" rowsep="1">
<colspec colname="1" colnum="1" colwidth="30*"/>
<colspec colname="2" colnum="2" colwidth="70*"/>
<thead>
<row valign="bottom">
<entry colname="1"><b><i>java.sql.Types</i></b></entry>
<entry colname="2">SQL Types</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="1">BIGINT</entry>
<entry colname="2">BIGINT</entry>
</row>
<row>
<entry colname="1">BINARY</entry>
<entry colname="2">CHAR FOR BIT DATA</entry>
</row>
<row>
<entry colname="1">BLOB</entry>
<entry colname="2">BLOB</entry>
</row>
<row>
<entry colname="1">BOOLEAN</entry>
<entry colname="2">BOOLEAN</entry>
</row>
<row>
<entry colname="1">CHAR</entry>
<entry colname="2">CHAR</entry>
</row>
<row>
<entry colname="1">CLOB</entry>
<entry colname="2">CLOB</entry>
</row>
<row>
<entry colname="1">DATE</entry>
<entry colname="2">DATE</entry>
</row>
<row>
<entry colname="1">DECIMAL</entry>
<entry colname="2">DECIMAL</entry>
</row>
<row>
<entry colname="1">DOUBLE</entry>
<entry colname="2">DOUBLE PRECISION</entry>
</row>
<row>
<entry colname="1">FLOAT</entry>
<entry colname="2">DOUBLE PRECISION<sup><xref href="rrefjdbc20377.dita#rrefjdbc20377/chdbdbhh">1</xref></sup></entry>
</row>
<row>
<entry colname="1">INTEGER</entry>
<entry colname="2">INTEGER</entry>
</row>
<row>
<entry colname="1">LONGVARBINARY</entry>
<entry colname="2">LONG VARCHAR FOR BIT DATA</entry>
</row>
<row>
<entry colname="1">LONGVARCHAR</entry>
<entry colname="2">LONG VARCHAR</entry>
</row>
<row>
<entry colname="1">NULL</entry>
<entry colname="2">Not a data type; always a value of a particular type</entry>
</row>
<row>
<entry colname="1">NUMERIC</entry>
<entry colname="2">DECIMAL</entry>
</row>
<row>
<entry colname="1">REAL</entry>
<entry colname="2">REAL</entry>
</row>
<row>
<entry colname="1">SMALLINT</entry>
<entry colname="2">SMALLINT</entry>
</row>
<row>
<entry colname="1">SQLXML<sup><xref href="rrefjdbc20377.dita#rrefjdbc20377/sqlxml">2</xref></sup></entry>
<entry colname="2">XML</entry>
</row>
<row>
<entry colname="1">TIME</entry>
<entry colname="2">TIME</entry>
</row>
<row>
<entry colname="1">TIMESTAMP</entry>
<entry colname="2">TIMESTAMP</entry>
</row>
<row>
<entry colname="1">VARBINARY</entry>
<entry colname="2">VARCHAR FOR BIT DATA</entry>
</row>
<row>
<entry colname="1">VARCHAR</entry>
<entry colname="2">VARCHAR</entry>
</row>
</tbody>
</tgroup>
</table> <note othertype="Notes" type="other"><ol>
<li id="chdbdbhh">Values can be passed in using the FLOAT type code; however,
these are stored as DOUBLE PRECISION values, and so always have the type code
DOUBLE when retrieved.</li>
<li id="sqlxml">SQLXML is only valid in JDBC 4.0 and later environments. SQLXML
corresponds to the SQL type XML in <ph conref="../conrefs.dita#prod/productshortname"></ph>.
 However, <ph conref="../conrefs.dita#prod/productshortname"></ph> does not
recognize the java.sql.Types.SQLXML data type and does not support any JDBC-side
operations for the XML data type.  Support for XML and the related operators
is implemented only at the SQL layer.  See <xref href="rrefsqljtypexml.dita#rrefsqljtypexml">XML
data types</xref> for more. </li>
</ol> </note></section>
</refbody>
</reference>
