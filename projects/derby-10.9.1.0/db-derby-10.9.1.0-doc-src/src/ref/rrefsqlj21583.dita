<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<reference id="rrefsqlj21583" xml:lang="en-us">
<title>FROM clause</title>
<prolog><metadata>
<keywords><indexterm>FROM clause</indexterm></keywords>
</metadata></prolog>
<refbody>
<section> <p>The FROM clause is a mandatory clause in a <i><xref href="rrefselectexpression.dita#rrefselectexpression">SelectExpression</xref>.</i> It
specifies the tables (<i><xref href="rreftableexpression.dita#rreftableexpression">TableExpression</xref></i>)
from which the other clauses of the query can access columns for use in expressions. </p></section>
<refsyn><title>Syntax</title> <codeblock><b>FROM TableExpression [ , TableExpression ] *</b></codeblock> </refsyn>
<example><title>Examples</title>
<codeblock><b>SELECT Cities.city_id
FROM Cities
WHERE city_id &lt; 5
<ph>-- other types of TableExpressions</ph>
SELECT TABLENAME, ISINDEX 
FROM SYS.SYSTABLES T, SYS.SYSCONGLOMERATES C
WHERE T.TABLEID = C.TABLEID
ORDER BY TABLENAME, ISINDEX
<ph>-- force the join order</ph>
SELECT *
FROM Flights, FlightAvailability
WHERE FlightAvailability.flight_id = Flights.flight_id
AND FlightAvailability.segment_number = Flights.segment_number
AND Flights.flight_id &lt; 'AA1115'
<ph>-- a TableExpression can be a joinOperation. Therefore
-- you can have multiple join operations in a FROM clause</ph>
SELECT COUNTRIES.COUNTRY, CITIES.CITY_NAME, FLIGHTS.DEST_AIRPORT
FROM COUNTRIES LEFT OUTER JOIN CITIES
ON COUNTRIES.COUNTRY_ISO_CODE = CITIES.COUNTRY_ISO_CODE
LEFT OUTER JOIN FLIGHTS
ON Cities.AIRPORT = FLIGHTS.DEST_AIRPORT</b></codeblock> </example>
</refbody>
</reference>

