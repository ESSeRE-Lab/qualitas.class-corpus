<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "../dtd/reference.dtd">
<reference xml:lang="en-us" id="rrefbuiltbigint">
<title>BIGINT function</title>
<prolog><metadata>
<keywords><indexterm>BIGINT function</indexterm>
</keywords>
</metadata>
</prolog><refbody>
<section>The BIGINT function returns a 64-bit integer representation of a number
or character string in the form of an integer constant.</section>
<refsyn><title>Syntax</title>
<codeblock><b>BIGINT (<i>CharacterExpression</i> | <i>NumericExpression</i> ) </b></codeblock>
<dl>
<dlentry><dt>CharacterExpression</dt>
<dd>An expression that returns a character string value of length not greater
than the maximum length of a character constant. Leading and trailing blanks
are eliminated and the resulting string must conform to the rules for forming
an SQL integer constant. The character string cannot be a long string. If
the argument is a CharacterExpression, the result is the same number that
would occur if the corresponding integer constant were assigned to a big integer
column or variable.</dd></dlentry>
<dlentry><dt>NumericExpression</dt>
<dd>An expression that returns a value of any built-in numeric data type.
If the argument is a NumericExpression, the result is the same number that
would occur if the argument were assigned to a big integer column or variable.
If the whole part of the argument is not within the range of integers, an
error occurs. The decimal part of the argument is truncated if present.</dd></dlentry>
</dl>
<p>The result of the function is a big integer. If the argument can be null,
the result can be null; if the argument is null, the result is the null value.</p>
</refsyn>
<example><title>Example</title>
<p>Using the EMPLOYEE table, select the EMPNO column in big integer form for
further processing in the application:
<codeblock><b>SELECT BIGINT</b> (EMPNO) <b>FROM</b> EMPLOYEE</codeblock></p>
</example></refbody></reference>
