<?xml version="1.0" encoding="utf-8"?>
 
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<reference id="rrefsqlj19433" xml:lang="en-us">
<title>SQL expressions</title>
<shortdesc>Syntax for many statements and expressions includes the term <term>Expression</term>,
or a term for a specific kind of expression such as <varname>TableSubquery</varname>.
Expressions are allowed in these specified places within statements. </shortdesc>
<prolog><metadata>
<keywords><indexterm>SQL expressions<indexterm>column reference</indexterm></indexterm>
<indexterm>SQL expressions<indexterm>constant</indexterm></indexterm><indexterm>SQL
expressions<indexterm>NULL</indexterm></indexterm><indexterm>SQL expressions<indexterm>dynamic
parameter</indexterm></indexterm><indexterm>SQL expressions<indexterm>CAST</indexterm></indexterm>
<indexterm>SQL expressions<indexterm>scalar subquery</indexterm></indexterm>
<indexterm>SQL expressions<indexterm>table subquery</indexterm></indexterm>
<indexterm>SQL expressions<indexterm>conditional</indexterm></indexterm><indexterm>SQL
expressions<indexterm>numeric</indexterm></indexterm><indexterm>SQL expressions<indexterm>character</indexterm></indexterm>
<indexterm>SQL expressions<indexterm>string with wildcards</indexterm></indexterm>
<indexterm>SQL expressions<indexterm>concatenation function</indexterm></indexterm>
<indexterm>SQL expressions<indexterm>CURRENT_DATE function</indexterm></indexterm>
<indexterm>SQL expressions<indexterm>CURRENT_TIME function</indexterm></indexterm>
<indexterm>SQL expressions<indexterm>CURRENT_TIMESTAMP function</indexterm></indexterm>
<indexterm>SQL expressions<indexterm>mathematical (+ -, *, /, unary + and
- )</indexterm></indexterm><indexterm>SQL expressions<indexterm>LENGTH function</indexterm></indexterm>
<indexterm>expressions<indexterm>column reference</indexterm></indexterm>
<indexterm>expressions<indexterm>constant</indexterm></indexterm><indexterm>expressions<indexterm>NULL</indexterm></indexterm>
<indexterm>expressions<indexterm>dynamic parameter</indexterm></indexterm>
<indexterm>expressions<indexterm>CAST</indexterm></indexterm><indexterm>expressions<indexterm>scalar
subquery</indexterm></indexterm><indexterm>expressions<indexterm>table subquery</indexterm></indexterm>
<indexterm>expressions<indexterm>conditional</indexterm></indexterm><indexterm>expressions<indexterm>numeric</indexterm></indexterm>
<indexterm>expressions<indexterm>character</indexterm></indexterm><indexterm>expressions<indexterm>string
with wildcards</indexterm></indexterm><indexterm>expressions<indexterm>concatenation
function</indexterm></indexterm><indexterm>expressions<indexterm>CURRENT_DATE
function</indexterm></indexterm><indexterm>expressions<indexterm>CURRENT_TIME
function</indexterm></indexterm><indexterm>expressions<indexterm>CURRENT_TIMESTAMP
function</indexterm></indexterm><indexterm>expressions<indexterm>mathematical
(+ -, *, /, unary + and - )</indexterm></indexterm><indexterm>expressions<indexterm>LENGTH
function</indexterm></indexterm></keywords>
</metadata></prolog>
<refbody>
<section><p>Some locations allow only a specific type of expression or one
with a specific property. If not otherwise specified, an expression is permitted
anywhere the word <i>Expression</i> appears in the syntax. This includes:
  <ul>
<li><xref href="rrefsqlj13658.dita#rrefsqlj13658">ORDER BY clause</xref></li>
<li><i><xref href="rrefselectexpression.dita#rrefselectexpression">SelectExpression</xref></i></li>
<li><xref href="rrefsqlj26498.dita#rrefsqlj26498">UPDATE statement</xref> (SET
portion)</li>
<li><xref href="rrefsqlj11277.dita#rrefsqlj11277">VALUES Expression</xref></li>
<li><xref href="rrefsqlj33602.dita#rrefsqlj33602">WHERE clause</xref></li>
</ul></p><p>Of course, many other statements include these elements as building
blocks, and so allow expressions as part of these elements. </p><p>The following
tables list all the possible SQL expressions and indicate where the expressions
are allowed.</p></section>
<section><title>General expressions</title>
<p>General expressions are expressions that might result in a value of any type.
The following table lists the types of general expressions.</p>
<table frame="all" id="sqlj18370">
<title>General expressions</title>
<desc>This table lists and describes the types of general SQL expressions.</desc>
<tgroup cols="2" colsep="1" rowsep="1">
<colspec colname="2" colnum="1" colwidth="30*"/>
<colspec colname="3" colnum="2" colwidth="60*"/>
<thead>
<row valign="bottom">
<entry colname="2">Expression Type</entry>
<entry colname="3">Explanation</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="2"> Column reference  </entry>
<entry colname="3">A <xref href="rrefcolumnname.dita#rrefcolumnname"><varname>column-Name</varname></xref> that
references the value of the column made visible to the expression containing
the Column reference.   <p>You must qualify the <varname>column-Name</varname> by
the table name or correlation name if it is ambiguous.</p>  <p>The qualifier
of a <varname>column-Name</varname> must be the correlation name, if a correlation
name is given to a table that is in a <xref href="rrefsqlj21583.dita#rrefsqlj21583">FROM
clause</xref>. The table name is no longer visible as a <i>column-Name</i> qualifier
once it has been aliased by a correlation name.</p><p>Allowed in <i><xref
href="rrefselectexpression.dita#rrefselectexpression">SelectExpression</xref>s</i>,
UPDATE statements, and the WHERE clauses of data manipulation statements.</p></entry>
</row>
<row>
<entry colname="2"> Constant</entry>
<entry colname="3">Most built-in data types typically have constants associated
with them (as shown in <xref href="crefsqlj31068.dita#crefsqlj31068"></xref>). </entry>
</row>
<row>
<entry colname="2"> NULL  </entry>
<entry colname="3">NULL is an untyped constant representing the unknown value.<p>Allowed
in CAST expressions or in INSERT VALUES lists and UPDATE SET clauses. Using
it in a CAST expression gives it a specific data type.</p></entry>
</row>
<row>
<entry colname="2"> Dynamic parameter  </entry>
<entry colname="3">A dynamic parameter is a parameter to an SQL statement
for which the value is not specified when the statement is created. Instead,
the statement has a question mark (?) as a placeholder for each dynamic parameter.
See <xref href="crefsqlj29911.dita#crefsqlj29911"></xref>.   <p>Dynamic parameters
are permitted only in prepared statements. You must specify values for them
before the prepared statement is executed. The values specified must match
the types expected.</p><p>Allowed anywhere in an expression where the data
type can be easily deduced. See <xref href="crefsqlj29911.dita#crefsqlj29911"></xref>.</p></entry>
</row>
<row>
<entry colname="2"> CAST expression</entry>
<entry colname="3">Lets you specify the type of NULL or of a dynamic parameter
or convert a value to another type. See <xref href="rrefsqlj33562.dita#rrefsqlj33562"></xref>.</entry>
</row>
<row>
<entry colname="2">Scalar subquery</entry>
<entry colname="3">Subquery that returns a single row with a single column.
See <i><xref href="rrefscalarsubquery.dita#rrefscalarsubquery"></xref>.</i></entry>
</row>
<row>
<entry colname="2"> Table subquery </entry>
<entry colname="3">Subquery that returns more than one column and more than
one row. See <i><xref href="rreftablesubquery.dita#rreftablesubquery">TableSubquery</xref>.</i><p>Allowed
as a tableExpression in a FROM clause and with EXISTS, IN, and quantified
comparisons.</p></entry>
</row>
<row>
<entry colname="2"> Conditional expression</entry>
<entry colname="3">A conditional expression chooses an expression to evaluate
based on a boolean test. Conditional expressions include the
<xref href="rrefcase.dita#rrefcase">CASE expression</xref>, the
<xref href="rrefcasenullif.dita#rrefcasenullif">NULLIF function</xref>, and the
<xref href="rreffunccoalesce.dita#rreffunccoalesce">COALESCE function</xref>.
</entry>
</row>
</tbody>
</tgroup>
</table></section>
<section><title>Boolean expressions</title>
<p>Boolean expressions are expressions that result in boolean values. Most
general expressions can result in boolean values. Boolean expressions commonly
used in a WHERE clause are made of operands operated on by SQL operators (see
<xref href="rrefsqlj23075.dita#rrefsqlj23075/sqlj34517"></xref> for a table
of SQL operators).</p></section>
<section><title>Numeric expressions</title>
<p>Numeric expressions are expressions that result in numeric values. Most of
the general expressions can result in numeric values. Numeric values have one
of the following types:</p>
<ul>
<li>BIGINT</li>
<li>DECIMAL</li>
<li>DOUBLE PRECISION</li>
<li>INTEGER</li>
<li>REAL</li>
<li>SMALLINT</li>
</ul>
<p>The following table lists the types of numeric expressions.</p>
<table frame="all">
<title>Numeric expressions</title>
<desc>This table lists and describes the types of numeric SQL expressions.</desc>
<tgroup cols="2" colsep="1" rowsep="1">
<colspec colname="2" colnum="1" colwidth="40*"/>
<colspec colname="3" colnum="2" colwidth="60*"/>
<thead>
<row valign="bottom">
<entry colname="2">Expression Type</entry>
<entry colname="3">Explanation</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="2"> +, -, *, /, unary + and - expressions</entry>
<entry colname="3">Evaluate the expected math operation on the operands. If
both operands are the same type, the result type is not promoted, so the division
operator on integers results in an integer that is the truncation of the actual
numeric result. When types are mixed, they are promoted as described in <xref
href="crefsqlj31068.dita#crefsqlj31068"></xref>.  <p>Unary + is a noop (i.e.,
+4 is the same as 4). Unary - is the same as multiplying the value by -1,
effectively changing its sign.</p></entry>
</row>
<row>
<entry colname="2"> AVG</entry>
<entry colname="3">Returns the average of a set of numeric values. <xref href="rrefsqlj32693.dita#rrefsqlj32693"></xref></entry>
</row>
<row>
<entry colname="2"> SUM</entry>
<entry colname="3">Returns the sum of a set of numeric values. <xref href="rrefsqlj13083.dita#rrefsqlj13083"></xref></entry>
</row>
<row>
<entry colname="2"> LENGTH</entry>
<entry colname="3">Returns the number of characters in a character or bit
string. See <xref href="rrefsqlj16762.dita#rrefsqlj16762"></xref>.</entry>
</row>
<row>
<entry colname="2"> LOWER</entry>
<entry colname="3">See <xref href="rrefsqlj42049.dita#rrefsqlj42049"></xref>.</entry>
</row>
<row>
<entry colname="2"> COUNT</entry>
<entry colname="3">Returns the count of a set of values. See <xref href="rrefsqlj38716.dita#rrefsqlj38716"></xref>, <xref
href="rrefsqlj66113.dita#rrefsqlj66113"></xref>.</entry>
</row>
</tbody>
</tgroup>
</table></section>
<section><title>Character expressions</title>
<p>Character expressions are expressions that result in a CHAR or VARCHAR value.
Most general expressions can result in a CHAR or VARCHAR value. The following
table lists the types of character expressions.</p>
<table frame="all">
<title>Character expressions</title>
<desc>This table lists and describes the types of character SQL  expressions.</desc>
<tgroup cols="2" colsep="1" rowsep="1">
<colspec colname="2" colnum="1" colwidth="40*"/>
<colspec colname="3" colnum="2" colwidth="60*"/>
<thead>
<row valign="bottom">
<entry colname="2">Expression Type</entry>
<entry colname="3">Explanation</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="2"> A CHAR or VARCHAR value that uses wildcards. </entry>
<entry colname="3">The wildcards % and _ make a character string a pattern
against which the LIKE operator can look for a match.</entry>
</row>
<row>
<entry colname="2"> Concatenation expression</entry>
<entry colname="3">In a concatenation expression, the concatenation operator,
"||", concatenates its right operand to the end of its left operand. Operates
on character and bit strings. See <xref href="rrefsqlj40899.dita#rrefsqlj40899"></xref>.</entry>
</row>
<row>
<entry colname="2"> Built-in string functions</entry>
<entry colname="3">The built-in string functions act on a String and return
a string. See <xref href="rrefsqlj97870.dita#rrefsqlj97870"></xref>, <xref
href="rrefsqlj42049.dita#rrefsqlj42049"></xref>, <xref href="rrefsqlj32613.dita#rrefsqlj32613"></xref>, <xref href="rreftrimfunc.dita#rreftrimfunc"></xref>, <xref
href="rrefsqlj93082.dita#rrefsqlj93082"></xref>, and <xref href="rrefsqlj29930.dita#rrefsqlj29930"></xref>.</entry>
</row>
<row>
<entry colname="2"> USER functions</entry>
<entry colname="3">User functions return information about the current user
as a String. See <xref href="rrefsqlj42324.dita#rrefsqlj42324"></xref>, <xref
href="rrefsqlj25228.dita#rrefsqlj25228"></xref>, and <xref href="rrefsqlj42476.dita#rrefsqlj42476">.</xref></entry>
</row>
</tbody>
</tgroup>
</table></section>
<section><title>Date and time expressions</title><p>A date or time expression
results in a DATE, TIME, or TIMESTAMP value. Most of the general expressions
can result in a date or time value. The following table lists the types of date
and time expressions.</p>
<table frame="all">
<title>Date and time expressions</title>
<desc>This table lists and describes the types of date and time SQL expressions.</desc>
<tgroup cols="2" colsep="1" rowsep="1">
<colspec colname="2" colnum="1" colwidth="30*"/>
<colspec colname="3" colnum="2" colwidth="50*"/>
<thead>
<row valign="bottom">
<entry colname="2">Expression Type</entry>
<entry colname="3">Explanation</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="2"> CURRENT_DATE</entry>
<entry colname="3">Returns the current date. See <xref href="rrefsqlj34177.dita#rrefsqlj34177"></xref>.</entry>
</row>
<row>
<entry colname="2"> CURRENT_TIME</entry>
<entry colname="3">Returns the current time. See <xref href="rrefsqlj33772.dita#rrefsqlj33772"></xref>.</entry>
</row>
<row>
<entry colname="2"> CURRENT_TIMESTAMP</entry>
<entry colname="3">Returns the current timestamp. See <xref href="rrefsqlj15866.dita#rrefsqlj15866"></xref>.</entry>
</row>
</tbody>
</tgroup>
</table></section>
</refbody>
</reference>
