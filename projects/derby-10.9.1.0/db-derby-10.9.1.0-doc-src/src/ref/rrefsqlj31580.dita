<?xml version="1.0" encoding="utf-8"?>
 
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<reference id="rrefsqlj31580" xml:lang="en-us">
<title>CREATE SCHEMA statement</title>
<prolog><metadata>
<keywords><indexterm>CREATE SCHEMA statement</indexterm><indexterm><indexterm>SQL
statements</indexterm>CREATE SCHEMA</indexterm><indexterm>schemas<indexterm>creating</indexterm></indexterm>
</keywords>
</metadata></prolog>
<refbody>
<section> <p>A schema is a way to logically group objects in a single collection
and provide a unique namespace for objects. </p></section>
<refsyn><title>Syntax</title> <codeblock><b>CREATE SCHEMA { [ <i><xref href="rrefschemaname.dita#rrefschemaname">schemaName</xref></i> AUTHORIZATION <i
>user-name</i> ] | [ <i>schemaName</i> ] | 
[ AUTHORIZATION <i>user-name</i> ] }</b>
</codeblock> <p>The CREATE SCHEMA statement is used to create a schema. A
schema name cannot exceed 128 characters. Schema names must be unique within
the database.</p> 
<p>A schema name cannot start with the prefix SYS (after case normalization).
Use of the prefix SYS raises a <i>SQLException</i>.</p>
<p>The CREATE SCHEMA statement is subject to access control when the 
<codeph><xref href="rrefpropersqlauth.dita#rrefpropersqlauth">derby.database.sqlAuthorization</xref></codeph> property is set to 
<codeph>true</codeph> for the database or system. Only the database owner can create a schema with a name 
different from the current user name, and only the the database owner can 
specify 
<codeblock>AUTHORIZATION <i>user-name</i></codeblock>
with a user name other than the current user name. See 
"<xref href="rrefpropersqlauth.dita#rrefpropersqlauth">derby.database.sqlAuthorization</xref>" for information about the 
<codeph>derby.database.sqlAuthorization</codeph> property.</p>
<note>Although the SQL standard allows you to specify any
<i><xref href="rrefrauthid.dita#rrefrauthid">AuthorizationIdentifier</xref></i>
as an AUTHORIZATION argument,
<ph conref="../conrefs.dita#prod/productshortname"></ph> allows you to specify
only a user, not a role.</note>
</refsyn>
<example><title>CREATE SCHEMA examples</title><p>To create a schema for airline-related
tables and give the authorization ID <codeph>anita</codeph> access to all
of the objects that use the schema, use the following syntax:<codeblock><b>CREATE SCHEMA FLIGHTS AUTHORIZATION anita</b> </codeblock></p><p>To
create a schema employee-related tables, use the following syntax:<codeblock><b>CREATE SCHEMA EMP</b> </codeblock></p><p>To
create a schema that uses the same name as the authorization ID <codeph>takumi</codeph>,
use the following syntax:<codeblock><b>CREATE SCHEMA AUTHORIZATION takumi</b> </codeblock></p><p>To
create a table called <codeph>availability</codeph> in the <codeph>EMP</codeph> and <codeph>FLIGHTS</codeph> schemas,
use the following syntax:<codeblock><b>CREATE TABLE FLIGHTS.AVAILABILITY
	(FLIGHT_ID CHAR(6) NOT NULL, SEGMENT_NUMBER INT NOT NULL,
	FLIGHT_DATE DATE NOT NULL, ECONOMY_SEATS_TAKEN INT,
	BUSINESS_SEATS_TAKEN INT, FIRSTCLASS_SEATS_TAKEN INT, 
	CONSTRAINT FLT_AVAIL_PK
	PRIMARY KEY (FLIGHT_ID, SEGMENT_NUMBER, FLIGHT_DATE))</b> </codeblock></p><codeblock><b>CREATE TABLE EMP.AVAILABILITY
	(HOTEL_ID INT NOT NULL, BOOKING_DATE DATE NOT NULL, ROOMS_TAKEN INT,
	CONSTRAINT HOTELAVAIL_PK PRIMARY KEY (HOTEL_ID, BOOKING_DATE))
</b></codeblock> </example>
</refbody>
</reference>
