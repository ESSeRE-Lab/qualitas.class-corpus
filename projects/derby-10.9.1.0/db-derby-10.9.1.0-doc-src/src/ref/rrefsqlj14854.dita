<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "../dtd/reference.dtd">
<reference xml:lang="en-us" id="rrefsqlj14854">
<title>HAVING clause</title>
<prolog><metadata>
<keywords><indexterm>HAVING clause</indexterm>
</keywords>
</metadata>
</prolog><refbody>
<section>
<p>A HAVING clause restricts the results of a GROUP BY in a <i><xref href="rrefselectexpression.dita#rrefselectexpression"/>.</i> The HAVING clause is applied
to each group of the grouped table, much as a WHERE clause is applied to a
select list. If there is no GROUP BY clause, the HAVING clause is applied
to the entire result as a single group. The SELECT clause cannot refer directly
to any column that does not have a GROUP BY clause. It can, however, refer
to constants, aggregates, and special registers.</p></section>
<refsyn><title>Syntax</title>
<codeblock><b>HAVING <i>searchCondition</i></b></codeblock>
<p>The <i>searchCondition</i>, which is a specialized <i>booleanExpression</i>, can contain only grouping columns (see <xref href="rrefsqlj32654.dita#rrefsqlj32654"/>), columns that are part of aggregate expressions,
and columns that are part of a subquery. For example, the following query
is illegal, because the column SALARY is not a grouping column, it does not
appear within an aggregate, and it is not within a subquery:
<codeblock><b>-- SELECT COUNT(*)
-- FROM SAMP.STAFF
-- GROUP BY ID
-- HAVING SALARY &gt; 15000</b></codeblock></p>
<p>Aggregates in the HAVING clause do not need to appear in the SELECT list.
If the HAVING clause contains a subquery, the subquery can refer to the outer
query block if and only if it refers to a grouping column.</p>
</refsyn>
<example><title>Example</title>
<codeblock><b><ph>-- Find the total number of economy seats taken on a flight,
-- grouped by airline,
-- only when the group has at least 2 records. </ph>
SELECT SUM(ECONOMY_SEATS_TAKEN), AIRLINE_FULL
FROM FLIGHTAVAILABILITY, AIRLINES
WHERE SUBSTR(FLIGHTAVAILABILITY.FLIGHT_ID, 1, 2) = AIRLINE
GROUP BY AIRLINE_FULL
HAVING COUNT(*) &gt; 1
</b></codeblock>
</example></refbody></reference>
