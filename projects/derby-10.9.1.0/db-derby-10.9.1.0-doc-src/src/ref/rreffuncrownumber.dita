<?xml version="1.0" encoding="utf-8"?>
 
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<reference id="rreffuncrownumber" xml:lang="en-us">
<title>ROW_NUMBER function</title>
<shortdesc>The ROW_NUMBER function returns the row number over a named or unnamed window specification.</shortdesc>
<prolog><metadata>
<keywords><indexterm>ROW_NUMBER function</indexterm><indexterm>functions<indexterm>ROW_NUMBER</indexterm><indexterm>LIMIT</indexterm></indexterm>
</keywords>
</metadata></prolog>
<refbody>
<section> <p>The ROW_NUMBER function does not take any arguments, and for each row over the window it returns an ever increasing BIGINT. It is normally used to limit the number of rows returned for a query. The LIMIT keyword used in other databases is not defined in the SQL standard, and is not supported.</p>
<ul>
<li>Derby does not currently allow the named or unnamed window specification to be specified in the <codeph>OVER()</codeph> clause, but requires an empty parenthesis. This means the function is evaluated over the entire result set.</li>
<li>The ROW_NUMBER function cannot currently be used in a WHERE clause.</li>
<li>Derby does not currently support ORDER BY in subqueries, so there is currently no way to guarantee the order of rows in the SELECT subquery. An optimizer override can be used to force the optimizer to use an index ordered on the desired column(s) if ordering is a firm requirement.</li>
</ul>
<p>The data type of the returned value is a BIGINT number.</p> 
</section>

<refsyn><title>Syntax</title> <codeblock><b>ROW_NUMBER() OVER ()</b></codeblock> </refsyn>

<example><title>Example</title><p>To limit the number of rows returned from a query to the 10 first rows of table <codeph>T</codeph>, use the following query:</p>
<codeblock>
SELECT * FROM (
   SELECT 
     ROW_NUMBER() OVER () AS R, 
     T.* 
   FROM T
) AS TR 
   WHERE R &lt;= 10; 
</codeblock>
</example>
</refbody>
</reference>
