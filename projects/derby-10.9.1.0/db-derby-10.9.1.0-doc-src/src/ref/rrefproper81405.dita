<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "../dtd/reference.dtd">
<reference xml:lang="en-us" id="rrefproper81405">
<title>derby.database.forceDatabaseLock</title>
<prolog><metadata>
<keywords><indexterm>derby.database.forceDatabaseLock</indexterm>
</keywords>
</metadata>
</prolog><refbody>
<section><title>Function</title>
<p>On some platforms, if set to true, prevents
<ph conref="../conrefs.dita#prod/productshortname"></ph> from booting a database
if a <i>db.lck</i> file is present in the database directory.</p>
<p><ph conref="../conrefs.dita#prod/productshortname"></ph> attempts to prevent
two JVMs from accessing a database at one time (and potentially corrupting it)
with the use of a file called <i>db.lck</i> in the database directory. On some
operating systems, the use of a lock file does not guarantee single access, and
so <ph conref="../conrefs.dita#prod/productshortname"></ph> only issues
a warning and might allow multiple JVM access even when the file is present.
(For more information, see "Double-booting system behavior" in the
<ph conref="../conrefs.dita#pub/citdevelop"></ph>.)</p>
<p><ph conref="../conrefs.dita#prod/productshortname"></ph> provides the
property <i>derby.database.forceDatabaseLock</i> for use on platforms that do
not provide the ability for
<ph conref="../conrefs.dita#prod/productshortname"></ph> to guarantee single
JVM access. By default, this property is set to false. When this property is
set to true, if <ph conref="../conrefs.dita#prod/productshortname"></ph> finds
the <i>db.lck</i> file when it attempts to boot the database, it throws an
exception and does not boot the database. </p>  
<note>This situation can occur even when no other JVMs are accessing the
database; in that case, remove the <i>db.lck</i> file by hand in order to boot
the database. If the <i>db.lck</i> file is removed by hand while a JVM is still
accessing a <ph conref="../conrefs.dita#prod/productshortname"></ph> database,
there is no way for <ph conref="../conrefs.dita#prod/productshortname"></ph> to
prevent a second VM from starting up and possibly corrupting the database.
In this situation no warning message is logged to the error log.</note>
</section>
<section><title>Default</title>
<p>False.</p>
</section>
<example><title>Example</title>
<codeblock><b>derby.database.forceDatabaseLock=true</b></codeblock>
</example>
<section><title>Dynamic or static</title>
<p>This property is static; if you change it while
<ph conref="../conrefs.dita#prod/productshortname"></ph> is running, the change
does not take effect until you reboot.</p>
</section></refbody></reference>
