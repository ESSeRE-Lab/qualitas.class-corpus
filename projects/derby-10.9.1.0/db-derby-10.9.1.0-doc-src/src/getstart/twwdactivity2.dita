<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN"
 "../dtd/task.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<task id="tgsactivity2" xml:lang="en-us">
<title>Activity 2: Run SQL using the client driver</title>
<shortdesc>This activity uses <ph conref="../conrefs.dita#prod/productshortname"></ph> within
a client/server configuration by using the Network Server. The <codeph>ij</codeph> tool
is the client application that connects to the <ph conref="../conrefs.dita#prod/productshortname"></ph> Network
Server. In this activity, you create a database called <codeph>seconddb</codeph> and
run some basic SQL statements.</shortdesc>
<prolog><metadata>
<keywords><indexterm>Network Server</indexterm><indexterm>Client driver</indexterm>
<indexterm>tutorial<indexterm>client driver</indexterm></indexterm></keywords>
</metadata></prolog>
<taskbody>
<prereq>This activity assumes that you know how to open a command shell and
change to the <codeph>DERBYTUTOR</codeph> directory.  </prereq>
<context><p>You use two command windows (referred to as Shell-1 and Shell-2)
in this activity. You use Shell-1 to start the <ph conref="../conrefs.dita#prod/productshortname"></ph> Network
Server and display Network Server messages. You use Shell-2 to establish a
client connection to the Network Server using <codeph>ij</codeph> and then
perform some basic SQL operations.</p></context>
<steps>
<step><cmd>Open a command window (Shell-1) and change to the <codeph>DERBYTUTOR</codeph> directory.</cmd>
</step>
<step><cmd>Start the Network Server, as shown in the following table.</cmd><stepxmp>
<table>
<title>Command to start the Network Server</title>
<desc>This table lists the commands to start the Network Server on UNIX and Windows systems.</desc>
<tgroup cols="2" colsep="1" rowsep="1">
<colspec colname="col1" colnum="1" colwidth="25*"/>
<colspec colname="col2" colnum="2" colwidth="75*"/>
<thead>
<row valign="bottom">
<entry colname="col1">Operating System</entry>
<entry colname="col2">Command</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="col1">UNIX (Korn Shell)</entry>
<entry colname="col2"><codeblock><b><userinput>java -jar $DERBY_HOME/lib/derbyrun.jar server start</userinput></b>
<systemoutput>Wed Mar 02 17:25:26 EST 2011 : Security manager
 installed using the Basic server security policy.
Wed Mar 02 17:25:27 EST 2011 : Apache Derby
 Network Server - 10.8.0.0 - (1076370) started and
 ready to accept connections on port 1527</systemoutput></codeblock></entry>
</row>
<row>
<entry colname="col1">Windows</entry>
<entry colname="col2"><codeblock><b><userinput>java -jar %DERBY_HOME%\lib\derbyrun.jar server start</userinput></b>
<systemoutput>Wed Mar 02 17:25:26 EST 2011 : Security manager
 installed using the Basic server security policy.
Wed Mar 02 17:25:27 EST 2011 : Apache Derby
 Network Server - 10.8.0.0 - (1076370) started and
 ready to accept connections on port 1527</systemoutput></codeblock></entry>
</row>
</tbody>
</tgroup>
</table>
</stepxmp><stepresult>A Network Server startup message appears
in the Shell-1 command  window.</stepresult></step>
<step><cmd>Open another command window (Shell-2). Change to the <codeph>DERBYTUTOR</codeph> directory.</cmd>
</step>
<step><cmd>Start <codeph>ij</codeph>.</cmd><stepxmp><p>If you included the
<codeph>DERBY_HOME/bin</codeph> directory in your PATH environment variable,
type: <codeblock>ij</codeblock> Otherwise, you can use the
<codeph>java</codeph> command to start the <codeph>ij</codeph> tool, as shown in
the following table.</p>
<table>
<title>Command to start the <codeph>ij</codeph> tool</title>
<desc>This table lists the commands to start the <codeph>ij</codeph> tool on UNIX and Windows systems.</desc>
<tgroup cols="2" colsep="1" rowsep="1">
<colspec colname="col1" colnum="1" colwidth="25*"/>
<colspec colname="col2" colnum="2" colwidth="75*"/>
<thead>
<row valign="bottom">
<entry colname="col1">Operating System</entry>
<entry colname="col2">Command</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="col1">UNIX (Korn Shell)</entry>
<entry colname="col2"><codeblock><b><userinput>java -jar $DERBY_HOME/lib/derbyrun.jar ij</userinput></b>
<systemoutput>ij version @RELEASE_ID_SHORT@</systemoutput></codeblock></entry>
</row>
<row>
<entry colname="col1">Windows</entry>
<entry colname="col2"><codeblock><b><userinput>java -jar %DERBY_HOME%\lib\derbyrun.jar ij</userinput></b>
<systemoutput>ij version @RELEASE_ID_SHORT@</systemoutput></codeblock></entry>
</row>
</tbody>
</tgroup>
</table>
</stepxmp><stepresult>You will enter all subsequent commands
from the network client, so you will type the commands in the Shell-2 command
window.</stepresult></step>
<step><cmd>Create and open a connection to the database using the client driver.</cmd>
<stepxmp><codeblock><b><userinput>CONNECT 'jdbc:derby://localhost:1527/seconddb;create=true';
</userinput></b></codeblock><note type="remember">A client connection URL
contains a hostname and a port number. For example: <codeph>//localhost:1527/</codeph></note> </stepxmp>
</step>
<step><cmd>Create a table with two columns (ID and NAME) using the following
SQL statement:</cmd><stepxmp><codeblock><b><userinput>CREATE TABLE SECONDTABLE
    (ID INT PRIMARY KEY,
    NAME VARCHAR(14));</userinput></b>
<systemoutput>0 rows inserted/updated/deleted
</systemoutput></codeblock></stepxmp></step>
<step><cmd>Insert three records into the table.</cmd><stepxmp><codeblock><b><userinput>INSERT INTO SECONDTABLE VALUES 
    (100,'ONE HUNDRED'),(200,'TWO HUNDRED'),(300,'THREE HUNDRED');</userinput></b>
<systemoutput>3 rows inserted/updated/deleted
</systemoutput></codeblock></stepxmp></step>
<step><cmd>Select all of the records in the table.</cmd><stepxmp><codeblock><b><userinput>SELECT * FROM SECONDTABLE;</userinput></b>
<systemoutput>ID         |NAME
------------------------
100        |ONE HUNDRED
200        |TWO HUNDRED
300        |THREE HUNDRED

3 rows selected</systemoutput></codeblock></stepxmp></step>
<step><cmd>Select a subset of records from the table by specifying a <codeph>WHERE</codeph> clause.</cmd>
<stepxmp><codeblock><b><userinput>SELECT * FROM SECONDTABLE WHERE ID=200;</userinput></b>
<systemoutput>ID         |NAME
------------------------
200        |TWO HUNDRED

1 row selected</systemoutput></codeblock></stepxmp></step>
<step><cmd>Exit <codeph>ij</codeph>.</cmd><stepxmp><codeblock><b><userinput>exit;</userinput></b></codeblock></stepxmp>
</step>
<step><cmd>Shut down the  <ph conref="../conrefs.dita#prod/productshortname"></ph> Network
Server, as shown in the following table.</cmd><stepxmp>
<table>
<title>Command to shut down the Network Server</title>
<desc>This table lists the commands to shut down the Network Server on UNIX and Windows systems.</desc>
<tgroup cols="2" colsep="1" rowsep="1">
<colspec colname="col1" colnum="1" colwidth="25*"/>
<colspec colname="col2" colnum="2" colwidth="75*"/>
<thead>
<row valign="bottom">
<entry colname="col1">Operating System</entry>
<entry colname="col2">Command</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="col1">UNIX (Korn Shell)</entry>
<entry colname="col2"><codeblock><b><userinput>java -jar $DERBY_HOME/lib/derbyrun.jar server shutdown</userinput></b>
<systemoutput>Wed Mar 02 17:29:44 EST 2011 : Apache Derby
 Network Server - 10.8.0.0 - (1076370) shutdown</systemoutput></codeblock></entry>
</row>
<row>
<entry colname="col1">Windows</entry>
<entry colname="col2"><codeblock><b><userinput>java -jar %DERBY_HOME%\lib\derbyrun.jar server shutdown</userinput></b>
<systemoutput>Wed Mar 02 17:29:44 EST 2011 : Apache Derby
 Network Server - 10.8.0.0 - (1076370) shutdown</systemoutput></codeblock></entry>
</row>
</tbody>
</tgroup>
</table>
</stepxmp><stepresult>The server shutdown confirmation appears
in both command windows.</stepresult></step>
</steps>
<postreq><b>Activity notes</b> <p>The client connection URL contains network
information (hostname and portnumber) not found in the URL for an embedded
connection. This information tells the client driver the location of the Network
Server. The client driver sends requests to and receives responses from the
Network Server.</p><p>In this activity the <ph conref="../conrefs.dita#prod/productshortname"></ph> database
engine is embedded in the Network Server and returns data to the  <codeph>ij</codeph> client
(a client/server configuration). In contrast, establishing a connection using
an embedded URL (one without  <codeph>//localhost:1527/</codeph>) would have
caused the  <ph conref="../conrefs.dita#prod/productshortname"></ph> engine
to be embedded  in the <codeph>ij</codeph> application (an embedded configuration).</p>
<p>In
this configuration, multiple client programs can connect to the Network Server
and access the database simultaneously. (This activity does not demonstrate
this capability.)</p></postreq>
</taskbody>
</task>
