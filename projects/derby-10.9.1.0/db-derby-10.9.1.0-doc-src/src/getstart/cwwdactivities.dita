<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="cgsactivities" xml:lang="en-us">
<title>Tutorial overview</title>
<shortdesc>Each activity in this self-study tutorial highlights an important
feature of  <ph conref="../conrefs.dita#prod/productshortname"></ph>. </shortdesc>
<prolog><metadata>
<keywords><indexterm>self-study tutorial<indexterm>overview</indexterm></indexterm>
</keywords>
</metadata></prolog>
<conbody>
<p>Here is what you can expect to learn in each activity:</p>
<dl><dlentry>
<dt>Activity 1:</dt>
<dd>Use the  <ph conref="../conrefs.dita#prod/productshortname"></ph>&nbsp;<codeph>ij</codeph> tool
to load the <ph conref="../conrefs.dita#prod/productshortname"></ph> embedded
driver and start the  <ph conref="../conrefs.dita#prod/productshortname"></ph> database
engine.  Create the database <codeph>firstdb</codeph> and the table <codeph>FIRSTTABLE</codeph>.
Use a few basic SQL statements to insert and select data. The <ph conref="../conrefs.dita#prod/productshortname"></ph> message
log <codeph>derby.log</codeph> and the database directories and files are
introduced.</dd>
</dlentry><dlentry>
<dt>Activity 2:</dt>
<dd>Use <ph conref="../conrefs.dita#prod/productshortname"></ph> within a client/server
configuration. Start the <ph conref="../conrefs.dita#prod/productshortname"></ph> Network
Server, which will embed the <ph conref="../conrefs.dita#prod/productshortname"></ph> engine.
 In a separate process, use the <ph conref="../conrefs.dita#prod/productshortname"></ph>&nbsp;<codeph>ij</codeph> 
tool to load the <ph conref="../conrefs.dita#prod/productshortname"></ph> client
driver and connect to the Network Server. Create a database called  <codeph>seconddb</codeph> and
the table <codeph>SECONDTABLE</codeph>. Use a few  basic SQL statements to
insert and select data.</dd>
</dlentry><dlentry>
<dt>Activity 3:</dt>
<dd>Load the <ph conref="../conrefs.dita#prod/productshortname"></ph> database
engine from a simple Java JDBC program. Use the embedded driver to create
the database <codeph>jdbcDemoDB</codeph> and the <codeph>WISH_LIST</codeph> table.
 Populate the table with text entered from the keyboard, then view a list
of the records in the table. Walk through the code to understand the basic
structure  of a JDBC program that accesses a <ph conref="../conrefs.dita#prod/productshortname"></ph> database.
The <codeph>CLASSPATH</codeph> variable and connection URL attribute <codeph>;shutdown=true</codeph> are
introduced.</dd>
</dlentry><dlentry>
<dt>Activity 4:</dt>
<dd>Modify the Java JDBC program to load the client driver and connect to
the <ph conref="../conrefs.dita#prod/productshortname"></ph> Network Server.
 Compile the altered program and test that the program operates as it did
in the previous activity.</dd>
</dlentry></dl>
</conbody>
</concept>
