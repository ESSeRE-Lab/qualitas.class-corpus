<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN"
 "../dtd/task.dtd">
<!--  
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<task id="tgs26250" xml:lang="en-us">
<title>Manually setting the CLASSPATH environment variable</title>
<shortdesc>You can set the CLASSPATH environment variable in the operating
system either temporarily, permanently, or at run time when you start your
Java application and the JVM. </shortdesc>
<prolog><metadata>
<keywords><indexterm>classpath<indexterm>setting</indexterm></indexterm><indexterm>environment
variables<indexterm>CLASSPATH</indexterm></indexterm><indexterm>scripts<indexterm>setEmbeddedCP</indexterm></indexterm>
<indexterm>scripts<indexterm>setNetworkServerCP</indexterm></indexterm><indexterm>scripts<indexterm>setNetworkClientCP</indexterm></indexterm>
</keywords>
</metadata></prolog>
<taskbody>
<context><p>The classpath is a list of the class libraries that are needed
by the JVM and other Java applications to run your program. There are scripts
that are included with <ph conref="../conrefs.dita#prod/productshortname"></ph> that
can set up the classpath to run the <ph conref="../conrefs.dita#prod/productshortname"></ph> tools. </p><p>If
you want to call the <ph conref="../conrefs.dita#prod/productshortname"></ph> tools
directly using Java and not using the scripts, you must manually set the CLASSPATH
environment variable.</p><p>In most development environments, it is best to
temporarily set the CLASSPATH environment variable in the command line shell
where you are entering commands.</p><p> <ph conref="../conrefs.dita#prod/productshortname"></ph> provides
several scripts in the <ph conref="../conrefs.dita#prod/productinstallpath"></ph><filepath>/bin</filepath> directory
to help you set your classpath quickly. These scripts are: <dl><dlentry>
<dt>setEmbeddedCP</dt>
<dd>Use the <cmdname>setEmbeddedCP</cmdname> script to set the classpath when
the database engine is used in embedded mode. This script adds the <filepath>derby.jar</filepath> and <filepath>derbytools.jar</filepath> files
to the classpath. </dd>
</dlentry><dlentry>
<dt>setNetworkServerCP</dt>
<dd>Use the <cmdname>setNetworkServerCP</cmdname> script to set the classpath
when you want to start the network server. This script adds the <filepath>derbynet.jar</filepath> file
to the classpath. </dd>
</dlentry><dlentry>
<dt>setNetworkClientCP</dt>
<dd>Use the <cmdname>setNetworkClientCP</cmdname> script to set the classpath
when you want to access databases using the network client. This script adds
the <filepath>derbyclient.jar</filepath> and <filepath>derbytools.jar</filepath> files
to the classpath. </dd>
</dlentry></dl></p><p>To set the classpath temporarily, run the script that
is appropriate for your environment every time that you open a new command
window.</p>
<p>
    Note that these scripts behave slightly differently on UNIX systems
    and on Windows systems. On Windows systems, running the script in your
    command shell will set the environment variables for your shell.
</p>
<p>On UNIX systems, you need to use the "dot" or "source"
    command to ensure that the script
    is run in the calling shell's environment. Otherwise, when a script
    is run, it launches a new shell for that script.
    The CLASSPATH is set within that shell.
    Once the script is complete, that
    shell exits and you are returned to your shell.
    The CLASSPATH is changed only for the shell that the script was
    running in.
    The CLASSPATH in your shell is unchanged. 
</p>
<p>
    The UNIX shell scripts are known to run successfully in the Bash shell,
    and you may need to modify them slightly if you are using a
    different UNIX shell.
</p>
<p>
    Here are examples of running the scripts, then displaying
    the classpath that the script sets:
    <ul>
        <li>On UNIX, using the "dot" command to invoke the script,
            a sample session might be as follows:
            <codeblock>
sh-2.05b$ echo $CLASSPATH
sh-2.05b$ DERBY_HOME=/derby/db-derby-10.X.Y.0-bin
sh-2.05b$ . $DERBY_HOME/bin/setEmbeddedCP
sh-2.05b$ echo $CLASSPATH
/derby/db-derby-10.X.Y.0-bin/lib/derby.jar:/derby/db-derby-10.X.Y.0-bin/lib/derbytools.jar:
sh-2.05b$ java org.apache.derby.tools.ij
ij version 10.X
ij> quit;
                </codeblock>
        </li>
        <li>On UNIX, using the "source" command to invoke the script,
            a sample session might be as follows:
            <codeblock>
-bash-2.05b$ echo $CLASSPATH
-bash-2.05b$ export DERBY_HOME=/derby/db-derby-10.X.Y.0-bin
-bash-2.05b$ source $DERBY_HOME/bin/setEmbeddedCP
                </codeblock>
        </li>
        <li>On Windows, a sample session might be as follows:
            <codeblock>
C:\derby\db-derby-10.X.Y.0-bin\bin>echo %CLASSPATH%
%CLASSPATH%
C:\derby\db-derby-10.X.Y.0-bin\bin>set DERBY_HOME=C:\derby\db-derby-10.X.Y.0-bin
C:\derby\db-derby-10.X.Y.0-bin\bin>setEmbeddedCP.bat
C:\derby\db-derby-10.X.Y.0-bin\bin>echo %CLASSPATH%
C:\derby\DB-DERBY-10.X.Y.0-bin\lib\derby.jar;C:\derby\DB-DERBY-10.X.Y.0-bin\lib\derbytools.jar;
C:\derby\db-derby-10.X.Y.0-bin\bin>java org.apache.derby.tools.ij
ij version 10.X
ij> quit;
        </codeblock></li>
</ul>
</p></context>
<postreq>For more information on running the <codeph>ij</codeph> and <codeph>sysinfo</codeph> utilities,
see the <cite><ph conref="../conrefs.dita#pub/citutilities"></ph></cite></postreq>
</taskbody>
</task>
