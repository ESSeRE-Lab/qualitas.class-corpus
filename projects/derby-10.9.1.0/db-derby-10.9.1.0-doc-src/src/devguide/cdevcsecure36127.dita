<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="cdevcsecure36127" xml:lang="en-us">
<title>Enabling user authentication</title>
<shortdesc>
If you use NATIVE authentication, you do not need to set the
<codeph>derby.connection.requireAuthentication</codeph> property. When you
create a database with NATIVE authentication, simply specify a username and
password, and that user becomes the database owner.</shortdesc>
<prolog><metadata>
<keywords><indexterm>User authentication<indexterm>enabling</indexterm></indexterm>
</keywords>
</metadata></prolog>
<conbody>
<p>If you do not use NATIVE authentication, you must set the
<codeph>derby.connection.requireAuthentication</codeph> property to true to
enable user authentication; if you do not set this property,
<ph conref="../conrefs.dita#prod/productshortname"></ph> does
not require a user name and password. You can set this property as a system-wide
property or as a database-wide property. For a multi-user product, you would
typically set it for the system in the <codeph>derby.properties</codeph> file
for your server, since it is in a trusted environment.</p>
<note>If you start a <ph conref="../conrefs.dita#prod/productshortname"></ph> system
with user authentication enabled but without defining at least one user, you
will not be able to shut down the system gracefully. When <ph conref="../conrefs.dita#prod/productshortname"></ph> is
running in a connectivity server and user authentication is turned on, stopping
the server requires a user name and password. You will need to alter shutdown
scripts accordingly. </note>
<p>
</p>
<note>
  Additionally, if you create and start
  a <ph conref="../conrefs.dita#prod/productshortname"></ph> system
  with user authentication and
  <xref href="cdevcsecure36595.dita#cdevcsecure36595">SQL authorization</xref>
  both enabled, or plan to enable them later,
  you should make sure you create
  the database by connecting as the user that is to become the
  <xref href="cdevcsecureDbOwner.dita#cdevcsecureDbOwner">database
    owner</xref>. 
  
  If you neglect to supply a user when the database is created, the
  database owner will by default become "APP". If you later enable
  both authentication and SQL authorization and "APP" is a not valid
  user name, you will not be able to perform operations restricted to
  the database owner, including shutting down the database (as opposed
  to the full system which may currently be shut down by any
  authenticated user, see previous note). Nor will you be able to
  (re)encrypt the database nor perform a full upgrade of it.
</note>

</conbody>
</concept>
