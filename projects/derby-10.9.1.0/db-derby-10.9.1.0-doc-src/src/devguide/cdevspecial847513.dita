<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="cdevspecial847513" xml:lang="en-us">
<title>Invoking a procedure using the CALL command</title>
<shortdesc>If a procedure uses only IN parameters, <ph conref="../conrefs.dita#prod/productshortname"></ph> can
execute the procedure by using the SQL CALL command. A stored procedure with
IN, OUT, or INOUT parameters can be invoked from a client application by using
a <i>CallableStatement</i>.</shortdesc>
<prolog><metadata>
<keywords><indexterm>Database-side JDBC procedures<indexterm>invoking with CALL command</indexterm></indexterm></keywords>
</metadata></prolog>
<conbody>
<p>You can invoke the procedure in an SQL statement such as the following:</p>
<codeblock><b>CALL MYPROC()</b></codeblock>
<note>You can roll back a CALL statement only if no commits or rollbacks
occur within the specified procedure.</note>
<p>You can also use the CALL command to execute a routine that returns
a value, but you will not be able to access the value.</p>
</conbody>
</concept>
