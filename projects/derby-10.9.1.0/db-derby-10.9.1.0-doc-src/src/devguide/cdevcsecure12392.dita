<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="cdevcsecure12392" xml:lang="en-us">
<title>Configuring security for your environment</title>
<shortdesc>In most cases, you enable <ph conref="../conrefs.dita#prod/productshortname"></ph>'s
security features through the use of properties. It is important to understand
the best way of setting properties for your environment.</shortdesc>
<prolog><metadata>
<keywords><indexterm>Security<indexterm>configuring</indexterm></indexterm>
</keywords>
</metadata></prolog>
<conbody>
<section><p><ph conref="../conrefs.dita#prod/productshortname"></ph> does
not come with a built-in superuser. For that reason, be careful when configuring <ph
conref="../conrefs.dita#prod/productshortname"></ph> for user authentication
and user authorization. </p><ol>
<li>When first working with security, work with system-level properties only
so that you can easily override them if you make a mistake. </li>
<li>Be sure to create at least one valid user, and grant that user full (read-write)
access. For example, you might always want to create a user called <i>sa</i> with
the password <i><ph conref="../conrefs.dita#prod/productlowercase"></ph></i> while
you are developing. </li>
<li>Test the authentication system while it is still configured at the system
level. Be absolutely certain that you have configured the system correctly
before setting the properties as database-level properties.</li>
<li>Before disabling system-level properties (by setting <i>derby.database.propertiesOnly</i> to
true), test that at least one database-level read-write user (such as <i>sa</i>)
is valid. If you do not have at least one valid user that the system can authenticate,
you will not be able to access your database.</li>
</ol></section>
</conbody>
</concept>
