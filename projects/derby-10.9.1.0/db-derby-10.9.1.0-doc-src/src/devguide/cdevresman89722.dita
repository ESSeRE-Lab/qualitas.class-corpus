<?xml version="1.0" encoding="utf-8"?>
 
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="cdevresman89722" xml:lang="en-us">
<title>Getting a DataSource</title>
<shortdesc>Normally, you can simply work with the interfaces for <i>javax.sql.DataSource</i>, 
<i>javax.sql.ConnectionPoolDataSource</i>, and <i>javax.sql.XADataSource</i>, as shown in the following
examples.</shortdesc>
<prolog><metadata>
<keywords><indexterm>properties<indexterm>DataSource</indexterm></indexterm>
<indexterm><indexterm>DataSource</indexterm>properties</indexterm><indexterm><indexterm>DataSource</indexterm>getting</indexterm>
</keywords>
</metadata></prolog>
<conbody>
<codeblock>
<b>// If your application is running on the Java SE 6 platform,
// and if you would like to call DataSource methods specific 
// to the JDBC 4 API (for example, isWrapperFor), use the
// JDBC 4 variants of these classes:
//
//   org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40
//   org.apache.derby.jdbc.EmbeddedDataSource40
//   org.apache.derby.jdbc.EmbeddedXADataSource40
//</b>
import org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource;
import org.apache.derby.jdbc.EmbeddedDataSource;
import org.apache.derby.jdbc.EmbeddedXADataSource; 

javax.sql.ConnectionPoolDataSource cpds = new EmbeddedConnectionPoolDataSource(); 
javax.sql.DataSource ds = new EmbeddedDataSource(); 
javax.sql.XADataSource xads = new EmbeddedXADataSource();</codeblock>
<p><ph conref="../conrefs.dita#prod/productshortname"></ph> provides six properties
for a <i>DataSource</i>. These properties are in <i>org.apache.derby.jdbc.EmbeddedDataSource</i>.
They are:</p>
<ul>
<li><i>DatabaseName</i>   <p>This mandatory property must be set. It identifies
which database to access. To access a database named <i>wombat</i> located at 
<i>/local1/db/wombat</i>, call <i>setDatabaseName("/local1/db/wombat")</i>
on the data source object. </p></li>
<li><i>CreateDatabase</i>   <p>Optional. Sets a property to create a database
the next time the <i>getConnection</i> method of a data source object is called.
The string <i>createString</i> is always "create" (or possibly null). (Use
the method <i>setDatabaseName()</i> to define the name of
the database.)</p></li>
<li><i>ShutdownDatabase</i>   <p>Optional. Sets a property to shut down a
database. The string <i>shutDownString</i> is always "shutdown" (or possibly
null). Shuts down the database the next time the <i>getConnection</i> method
of a data source object is called.</p></li>
<li><i>DataSourceName</i>   <p>Optional. Name for <i>ConnectionPoolDataSource</i>
or <i>XADataSource</i>. Not used by the data source object. Used for informational
purposes only. </p></li>
<li><i>Description</i>   <p>Optional. Description of the data source. Not
used by the data source object. Used for informational purposes only. </p></li>
<li><i>connectionAttributes</i>   <p>Optional. Connection attributes specific
to <ph conref="../conrefs.dita#prod/productshortname"></ph>. See the <cite><ph
conref="../conrefs.dita#pub/citref"></ph></cite> for a more information about
the attributes. </p></li>
</ul>
</conbody>
</concept>
