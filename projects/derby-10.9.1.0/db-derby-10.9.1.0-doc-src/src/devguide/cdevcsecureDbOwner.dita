<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="cdevcsecureDbOwner" xml:lang="en-us">
<title>Database owner
</title>

<shortdesc>
  The term <i>database owner</i> refers to the current authorization
  identifier when the database is created, that is, the user creating
  the database. If you use NATIVE authentication, or if you manually enable
  or plan to enable SQL authorization,
  controlling the identity of the database owner becomes important.
</shortdesc>

<prolog>
  <metadata>
    <keywords>

      <indexterm>
        database owner
      </indexterm>

      <indexterm>
        database owner
        <indexterm>
          powers
        </indexterm>
      </indexterm>

      <indexterm>
        database owner
        <indexterm>
          permissions
        </indexterm>
      </indexterm>

    </keywords>
  </metadata>
</prolog>
<conbody>
  <p>
    When a database is created, the database owner of that database
    gets implicitly set to the authorization identifier used in the
    connect operation which creates the database, for example by
    supplying the URL attribute "user".  Note that this applies even
    if authentication is not (yet) enabled.  In SQL, the built-in
    functions USER and the equivalent CURRENT_USER return the current
    authorization identifier.
  </p>
  <p>
    If the database is created <i>without</i> supplying a user (only
    possible if authentication is not enabled), the database owner
    gets set to the default authorization identifier, "APP", which is
    also the name of the default schema, see the section "SET
    SCHEMA statement" in
    the <cite><ph conref="../conrefs.dita#pub/citref"></ph></cite>.
  </p>
  <p>
    The database owner has automatic SQL level permissions when
    SQL authorization is enabled, see more about this
    in <xref href="cdevcsecure36595.dita#cdevcsecure36595"></xref>.
  </p>
  <p>
    To further enhance security, when <i>both</i>
    <xref href="cdevcsecure36127.dita#cdevcsecure36127">authentication</xref>
    and SQL authorization are enabled for a
    database, Derby restricts some special powers to the database
    owner: only the database owner is allowed to
    <xref href="tdevdvlp40464.dita#tdevdvlp40464">shut down</xref>
    the database, to
    <xref href="tdevcsecureunencrypteddb.dita#tdevcsecureunencrypteddb">encrypt</xref>
    or
    <xref href="tdevcsecurenewkeyoverview.dita#tdevcsecurenewkeyoverview">reencrypt</xref>
    the database or to perform a
    <xref href="tdevupgradedb.dita#tdevupgradedb">full upgrade</xref>
    of it. These powers can not be delegated.
  </p>
  <p>
    <note type="attention">
      There is currently no way of changing the database owner once
      the database is created. This means that if you plan to run with
      SQL authorization enabled, you should make sure to create the
      database as the user you want to be the owner.
    </note>
  </p>
  
</conbody>
</concept>
