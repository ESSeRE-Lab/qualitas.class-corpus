<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="cdevdvlp17453" xml:lang="en-us">
<title>Derby JDBC database connection URL</title>
<shortdesc>A Java application using the JDBC API establishes a connection
to a database by obtaining a <i>Connection</i> object.</shortdesc>
<prolog><metadata>
<keywords><indexterm>Database connection URL<indexterm>description</indexterm></indexterm>
<indexterm>Database connection URL<indexterm>features common to embedded and
client/server versions</indexterm></indexterm></keywords>
</metadata></prolog>
<conbody>
<p>The standard way to obtain a <codeph><i>Connection</i></codeph> object
is to call the method <codeph><i>DriverManager.getConnection</i></codeph>,
which takes a String containing a connection URL (uniform resource locator).
A JDBC connection URL provides a way of identifying a database. It also allows
you to perform a number of high-level tasks, such as creating a database or
shutting down the system.</p>
<p>An application in an embedded environment uses a different connection URL
from that used by applications using the <ph conref="../conrefs.dita#prod/productshortname"></ph> Network
Server in a client/server environment. See the <cite><ph conref="../conrefs.dita#pub/citadmin"></ph></cite> for
more information on the Network Server. </p>
<p>However, all versions of the connection URL (which you can use for tasks
besides connecting to a database) have common features:</p>
<ul>
<li>you can specify the name of the database you want to connect to</li>
<li>you can specify a number of attributes and values that allow you to accomplish
tasks. For more information about what you can specify with the <ph conref="../conrefs.dita#prod/productshortname"></ph> connection
URL, see <xref href="rdevdvlp22102.dita#rdevdvlp22102"></xref>.</li>
</ul>
<p>The connection URL syntax is as follows:</p>
<codeblock>jdbc:derby:[subsubprotocol:][<i>databaseName</i>][;<i>attribute</i>=<i>value</i>]*</codeblock>
<p><i>Subsubprotocol</i>, which is not typically specified, determines
how <ph conref="../conrefs.dita#prod/productshortname"></ph> looks for a database:
in a directory, in memory, in a class path, or in a jar file. <i>Subsubprotocol</i> is one of
the following:</p>
<ul>
<li><i>directory</i>: The default, which need not be specified explicitly. The
database is in the file system, and the path is either relative to the system
directory or absolute.</li>
<li><i>memory</i>: Databases exist only in main memory and are not written to
disk. An in-memory database may be useful when there is no need to persist the
database -- for example, in some testing situations.</li>
<li><i>classpath</i>: Databases are treated as read-only databases, relative to
the <i>classpath</i> directory. See
<xref href="cdevdvlp91854.dita#cdevdvlp91854"></xref> for details.</li>
<li><i>jar</i>: Databases are treated as read-only databases. <i>DatabaseNames</i> might
require a leading slash, because you specify them "relative" to the jar file.
See <xref href="cdevdvlp24155.dita#cdevdvlp24155"></xref> for details.
<p><i>jar</i> requires an additional element immediately before the
database name:</p>
<codeblock>(<i>pathToArchive</i>)</codeblock>
<p><i>pathToArchive</i> is the path to the jar or zip file that holds
the database.</p></li>
</ul>
<p>For detailed reference about connection URL attributes and values, see 
"Setting attributes for the database connection URL" in the
<ph conref="../conrefs.dita#pub/citref"></ph>.
</p>
<p>The following example shows the use of the connection URL:</p>
<codeblock>Connection conn = DriverManager.getConnection("jdbc:derby:sample");</codeblock>
</conbody>
</concept>
