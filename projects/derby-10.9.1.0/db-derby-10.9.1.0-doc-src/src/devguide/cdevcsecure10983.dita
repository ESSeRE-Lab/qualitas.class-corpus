<?xml version="1.0" encoding="utf-8"?>
 
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="cdevcsecure10983" xml:lang="en-us">
<title>Notes on the Derby security features</title>
<shortdesc>The <ph conref="../conrefs.dita#prod/productshortname"></ph> security
model has some basic limitations.</shortdesc>
<prolog><metadata>
<keywords><indexterm>security features<indexterm>limitations</indexterm></indexterm>
</keywords>
</metadata></prolog>
<conbody>
<p>You can use database properties to specify what users can and cannot access
your database. However, if someone gets physical access to your database (for
example, if they are able to copy it onto their own disk), they can subvert all
other security mechanisms given enough time and skill. Your best
<ph conref="../conrefs.dita#prod/productshortname"></ph> defense against this
possibility is to encrypt the data (which also encrypts the database
properties). However, if the encryption can be broken, the data is
vulnerable.</p>
<p>There are no authorization checks for system-wide operations. Anyone who can
authenticate at the system level can shut down the
<ph conref="../conrefs.dita#prod/productshortname"></ph> engine and restore
databases. Your best <ph conref="../conrefs.dita#prod/productshortname"></ph>
defense here is to limit the number of users who can authenticate at the system
level. This is easy to do with NATIVE authentication: put only one superuser in
the system-wide credentials database, and store the database-specific users in
their respective databases. With LDAP authentication, you can do this by using
different LDAP servers for system-wide and database-specific authentication.</p>
</conbody>
</concept>
