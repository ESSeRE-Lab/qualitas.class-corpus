<?xml version="1.0" encoding="utf-8"?>
 
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="cdevconcepts16400" xml:lang="en-us">
<title>Configuring deadlock detection and lock wait timeouts</title>
<shortdesc>You configure the amount of time a transaction waits before <ph
conref="../conrefs.dita#prod/productshortname"></ph> does any deadlock checking
with the <i>derby.locks.deadlockTimeout</i> property.</shortdesc>
<prolog><metadata>
<keywords><indexterm>deadlocks<indexterm>configuring detection</indexterm></indexterm>
<indexterm>deadlocks<indexterm>configuring lock wait timeouts</indexterm></indexterm>
</keywords>
</metadata></prolog>
<conbody>
<p>You configure the amount of time a transaction waits before timing out
with the <codeph><i>derby.locks.waitTimeout</i></codeph> property. When configuring
your database or system, you should consider these properties together. For
example, in order for any deadlock checking to occur, the <codeph><i>derby.locks.deadlockTimeout</i></codeph> property
must be set to a value lower than the <codeph><i>derby.locks.waitTimeout</i></codeph> property.
If it is set to a value equal to or higher than the <codeph><i>derby.locks.waitTimeout</i></codeph>,
the transaction times out before <ph conref="../conrefs.dita#prod/productshortname"></ph> does
any deadlock checking.</p>
<p><indexterm>Deadlocks<indexterm>detecting</indexterm></indexterm>By default, <i>derby.locks.waitTimeout</i> is
set to 60 seconds. -1 is the equivalent of no wait timeout. This means that
transactions never time out, although <ph conref="../conrefs.dita#prod/productshortname"></ph> can
choose a transaction as a deadlock victim.</p>
<p>In the following figure, <codeph><i>derby.locks.deadlockTimeout</i></codeph>
is set to 30 seconds, while <codeph><i>derby.locks.waitTimeout</i></codeph> has
no limit.</p>
<fig expanse="column" id="cdevconcepts27089"><title>Configuration with
deadlock checking after 30 seconds and no lock wait timeouts</title>
<image href="lockwa3.gif" placement="break"><alt>This figure shows a configuration in which transactions are never aborted unless they are selected as the victim when deadlocks are checked. If at 30 seconds there is no deadlock, the transaction will wait until it can obtain a lock (or forever).</alt>
</image>
</fig>
<p>In the following figure, <codeph><i>derby.locks.deadlockTimeout</i></codeph>
is set to 60 seconds, while <codeph><i>derby.locks.waitTimeout</i></codeph> is
set to 90 seconds.</p>
<fig expanse="column" id="cdevconcepts91443"><title>Configuration with
deadlock checking after 60 seconds and lock wait timeout at 90 seconds</title>
<image href="lockwa1.gif" placement="break"><alt>This figure shows a configuration where deadlock checking occurs after a transaction has waited 60 seconds for a lock. After it has waited for 90 seconds, the transaction times out and is rolled back.</alt>
</image>
</fig>
<p>In the following figure, <codeph><i>derby.locks.deadlockTimeout</i></codeph>
is set to 60 seconds, while <codeph><i>derby.locks.waitTimeout</i></codeph> is
set to 50 seconds, lower than the deadlock timeout limit.</p>
<fig expanse="column" id="cdevconcepts14875"><title>Configuration with
no deadlock checking and a 50-second lock wait timeout</title>
<image href="lockwa2.gif" placement="break"><alt>This figure shows a configuration where no deadlock checking occurs. The transactions time out after they have waited 50 seconds.</alt>
</image>
</fig>
</conbody>
</concept>
