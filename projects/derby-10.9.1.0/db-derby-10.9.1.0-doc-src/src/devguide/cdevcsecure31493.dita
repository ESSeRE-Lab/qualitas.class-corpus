<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="cdevcsecure31493" xml:lang="en-us">
<title>Specifying an alternate encryption provider</title>
<shortdesc>You can specify an alternate provider when you create the database
with the <codeph><i>encryptionProvider=providerName</i></codeph> attribute.</shortdesc>
<prolog><metadata>
<keywords><indexterm>Encryption providers<indexterm>configuring</indexterm></indexterm>
</keywords>
</metadata></prolog>
<conbody>
<p>You must specify the full package and class name of the provider, and you
must also add the libraries to the application's classpath.</p>
<!-- I assume to use jce_jdk13-10b4.zip here is ok since it's an example. Bernt -->
<codeblock><b>-- using the the provider library jce_jdk13-10b4.zip|
-- available from www.bouncycastle.org</b>
jdbc:derby:encryptedDB3;create=true;dataEncryption=true;
bootPassword=clo760uds2caPe;
encryptionProvider=org.bouncycastle.jce.provider.BouncyCastleProvider;
encryptionAlgorithm=DES/CBC/NoPadding

<b>-- using a provider
-- available from
-- http://jcewww.iaik.tu-graz.ac.at/download.html</b>
jdbc:derby:encryptedDB3;create=true;dataEncryption=true;
bootPassword=clo760uds2caPe;
encryptionProvider=iaik.security.provider.IAIK;encryptionAlgorithm=
DES/CBC/NoPadding</codeblock>
</conbody>
</concept>
