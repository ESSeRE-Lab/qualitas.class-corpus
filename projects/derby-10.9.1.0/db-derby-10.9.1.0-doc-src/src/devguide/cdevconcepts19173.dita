<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="cdevconcepts19173" xml:lang="en-us">
<title>Transactions</title>
<shortdesc>A <i>transaction</i> is a set of one or more SQL statements that
make up a logical unit of work that you can either commit or roll back and
that will be recovered in the event of a system failure.</shortdesc>
<prolog><metadata>
<keywords><indexterm>Transactions<indexterm>definition</indexterm></indexterm>
</keywords>
</metadata></prolog>
<conbody>
<p>All the statements in the transaction are <i>atomic</i>. A transaction
is associated with a single <codeph><i>Connection</i></codeph> object (and
database). A transaction cannot span <i>Connections</i> (or databases).</p>
<p><ph conref="../conrefs.dita#prod/productshortname"></ph> permits schema
and data manipulation statements (DML) to be intermixed within a single transaction.
If you create a table in one transaction, you can also insert into it in that
same transaction. A schema manipulation statement (DDL) is not automatically
committed when it is performed, but participates in the transaction within
which it is issued. Because DDL requires exclusive locks on system tables,
keep transactions that involve DDL short.</p>
</conbody>
</concept>
