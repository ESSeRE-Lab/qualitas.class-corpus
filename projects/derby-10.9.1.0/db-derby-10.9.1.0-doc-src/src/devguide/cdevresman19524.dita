<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="cdevresman19524" xml:lang="en-us">
<title>Using Derby as a Java EE resource manager</title>
<shortdesc>The Java Platform, Enterprise Edition (the Java EE platform) is a
standard for development of enterprise applications based on reusable components
in a multi-tier environment. In addition to the features of the Java Platform,
Standard Edition (the Java SE platform), the Java EE platform adds support for
Enterprise JavaBeans (EJB) technology, the Java Persistence API, JavaServer
Faces technology, Java Servlet technology, JavaServer Pages (JSP) technology,
and many more. The Java EE platform architecture is used to bring together
existing technologies and enterprise applications in a single, manageable
environment.</shortdesc>
<prolog><metadata>
<keywords><indexterm>Resource manager<indexterm>Derby in Java EE system</indexterm></indexterm>
</keywords>
</metadata></prolog>
<conbody>
<p><ph conref="../conrefs.dita#prod/productshortname"></ph> is a Java EE
platform conformant component in a distributed Java EE system. As such,
<ph conref="../conrefs.dita#prod/productshortname"></ph> is one part of a larger
system that includes, among other things, a JNDI server, a connection pool
module, a transaction manager, a resource manager, and user applications.
Within this system, <ph conref="../conrefs.dita#prod/productshortname"></ph> can
serve as the resource manager.</p>
<p>For more information on the Java EE platform, see
<xref format="html" href="http://www.oracle.com/technetwork/java/javaee/documentation/index.html"
scope="external">http://www.oracle.com/technetwork/java/javaee/documentation/index.html</xref>.
</p>
<note>This section does not show you how to use
<ph conref="../conrefs.dita#prod/productshortname"></ph> as a Resource Manager.
Instead, it provides details specific to
<ph conref="../conrefs.dita#prod/productshortname"></ph> that are not covered in
the specification. This information is useful to programmers developing other
modules in a distributed Java EE system, not to end-user application
developers.</note>
<p>In order to qualify as a resource manager in a Java EE system, the Java EE
platform requires three basic areas of support. These three areas of support
involve implementation of APIs and are described in "Java EE Compliance: Java
Transaction API and javax.sql Extensions" in the
<cite><ph conref="../conrefs.dita#pub/citref"></ph></cite>.</p>
<p>This chapter describes the
<ph conref="../conrefs.dita#prod/productshortname"></ph> classes that implement
the APIs and provides some implementation-specific details.</p>
</conbody>
</concept>
