<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="cdevtricks807337" xml:lang="en-us">
<title>Multiple rows</title>
<shortdesc><ph conref="../conrefs.dita#prod/productshortname"></ph> supports
the complete SQL-92 VALUES clause; this is very handy in several cases.</shortdesc>
<prolog><metadata>
<keywords><indexterm>Multiple rows VALUES clause</indexterm></keywords>
</metadata></prolog>
<conbody>
<p>The first useful case is that it can be used to insert multiple rows:</p>
<codeblock><b>INSERT INTO OneColumnTable VALUES 1,2,3,4,5,6,7,8

INSERT INTO TwoColumnTable VALUES
    (1, 'first row'),
    (2, 'second row'),
    (3, 'third row')</b></codeblock>
<p>Dynamic parameters reduce the number of times execute requests are sent
across:</p>
<codeblock>ij&gt; -- send 5 rows at a time:
ij&gt; <b>PREPARE p1 AS 'INSERT INTO ThreeColumnTable VALUES 
(?,?,?), (?,?,?), (?,?,?), (?,?,?), (?,?,?)';</b>
ij&gt; <b>EXECUTE p1 USING 'VALUES (''1st'',1,1,''2nd'',2,2,''3rd'',
3,3,''4th'',4,4,''5th'',5,5)';</b></codeblock>
</conbody>
</concept>
