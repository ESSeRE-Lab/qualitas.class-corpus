<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="cdevconcepts14433" xml:lang="en-us">
<title>Statement versus transaction runtime rollback</title>
<shortdesc>When an SQL statement generates an exception, this exception results
in a <i>runtime rollback</i>. A runtime rollback is a system-generated rollback
of a statement or transaction by <ph conref="../conrefs.dita#prod/productshortname"></ph>,
as opposed to an explicit <codeph><i>rollback</i></codeph> call from your
application.</shortdesc>
<prolog><metadata>
<keywords><indexterm>Rollback<indexterm>implicit versus explicit</indexterm></indexterm>
</keywords>
</metadata></prolog>
<conbody>
<p>Extremely severe exceptions, such as disk-full errors, shut down the system,
and the transaction is rolled back when the database is next booted. Severe
exceptions, such as deadlock, cause transaction rollback; <ph conref="../conrefs.dita#prod/productshortname"></ph> rolls
back all changes since the beginning of the transaction and implicitly begins
a new transaction. Less severe exceptions, such as syntax errors, result in
statement rollback; <ph conref="../conrefs.dita#prod/productshortname"></ph> rolls
back only changes made by the statement that caused the error. The application
developer can insert code to explicitly roll back the entire transaction if
desired.</p>
<p><ph conref="../conrefs.dita#prod/productshortname"></ph> supports partial
rollback through the use of savepoints. See 
<xref href="cdevconceptssavepoints.dita#cdevconceptssavepoints"></xref> for more
information.</p>
</conbody>
</concept>
