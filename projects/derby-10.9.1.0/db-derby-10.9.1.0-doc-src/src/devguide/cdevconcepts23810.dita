<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="cdevconcepts23810" xml:lang="en-us">
<title>Lock granularity</title>
<shortdesc><ph conref="../conrefs.dita#prod/productshortname"></ph> can be
configured for <i>table-level</i> locking. With table-level locking, when
a transaction locks data in order to prevent any transaction anomalies, it
always locks the entire table, not just those rows being accessed.</shortdesc>
<prolog><metadata>
<keywords><indexterm>Lock granularity</indexterm><indexterm>Locking<indexterm>table-level</indexterm><indexterm>row-level</indexterm></indexterm>
</keywords>
</metadata></prolog>
<conbody>
<p>By default, <ph conref="../conrefs.dita#prod/productshortname"></ph> is
configured for row-level locking. Row-level locking uses more memory but allows
greater concurrency, which works better in multi-user systems. Table-level
locking works best with single-user applications or read-only applications. </p>
<p>You typically set lock granularity for the entire <ph conref="../conrefs.dita#prod/productshortname"></ph> system,
not for a particular application. However, at runtime, <ph conref="../conrefs.dita#prod/productshortname"></ph> may
escalate the lock granularity for a particular transaction from row-level
locking to table-level locking for performance reasons. You have some control
over the threshold at which this occurs. For information on turning off row-level
locking, see "<i>derby.storage.rowLocking</i>" in the
<ph conref="../conrefs.dita#pub/citref"></ph>.
For more information about automatic lock escalation, see "About the system's
selection of lock granularity" and "Transaction-based lock escalation" in <ph
conref="../conrefs.dita#pub/cittuning"></ph>. For more
information on tuning your <ph conref="../conrefs.dita#prod/productshortname"></ph> system,
see "Tuning databases and applications," also in
<ph conref="../conrefs.dita#pub/cittuning"></ph>.</p>
</conbody>
</concept>
