<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="cdevtricks807365" xml:lang="en-us">
<title>Mapping column values to return values</title>
<shortdesc>Multiple-row VALUES tables are useful in mapping column values
to desired return values in queries.</shortdesc>
<prolog><metadata>
<keywords><indexterm>Mapping column values to return values</indexterm></keywords>
</metadata></prolog>
<conbody>
<codeblock><b>-- get the names of all departments in Ohio</b>SELECT DeptName
FROM Depts,
(VALUES (1, 'Shoe'),
    (2, 'Laces'),
    (4, 'Polish'))
AS DeptMap(DeptCode,DeptDesc)
WHERE Depts.DeptCode = DeptMap.DeptCode
AND Depts.DeptLocn LIKE '%Ohio%'</codeblock>
<p>You might also find it useful to store values used often for mapping in
a persistent table and then using that table in the query.</p>
</conbody>
</concept>
