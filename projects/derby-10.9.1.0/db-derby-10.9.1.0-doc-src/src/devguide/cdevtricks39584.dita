<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="cdevtricks39584" xml:lang="en-us">
<title>Supplying a parameter only once</title>
<shortdesc>If you want to supply a parameter value once and use it multiple
times within a query, put it in the FROM clause with an appropriate CAST.</shortdesc>
<prolog><metadata>
<keywords><indexterm>VALUES clause<indexterm>power of</indexterm></indexterm>
<indexterm>Using a supplied parameter multiple times in a query</indexterm>
</keywords>
</metadata></prolog>
<conbody>
<codeblock>SELECT  phonebook.* 
	FROM phonebook, (VALUES (CAST(? AS INT), CAST(? AS VARCHAR(255))))  
						AS Choice(choice, search_string)
	WHERE search_string = (case when choice = 1 then firstnme 
                 when choice=2 then lastname 
						when choice=3 then phonenumber end);</codeblock>
<p>This query selects what the second parameter will be compared to based
on the value in the first parameter. Putting the parameters in the FROM clause
means that they need to be applied only once to the query, and you can give
them names so that you can refer to them elsewhere in the query. In the example
above, the first parameter is given the name <i>choice</i>, and the second
parameter is given the name <i>search_string</i>.</p>
</conbody>
</concept>
