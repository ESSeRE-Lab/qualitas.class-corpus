<?xml version="1.0" encoding="utf-8"?>
 
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN"
 "../dtd/task.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<task id="tdevcsecurenewkeyoverview" xml:lang="en-us">
<title>Encrypting databases with a new key</title>
<shortdesc>You can apply a new encryption key to a <ph conref="../conrefs.dita#prod/productshortname"></ph> database
by specifying a new boot password or a new external key.</shortdesc>
<prolog><metadata>
<keywords><indexterm>encrypting databases<indexterm>new key, overview</indexterm></indexterm>
<indexterm>databases<indexterm>overview of encrypting, new key</indexterm></indexterm>
</keywords>
</metadata></prolog>
<taskbody>
<context><p>Encrypting a database with a new encryption key is a time consuming
process because it involves encrypting all of the existing data in the database
with the new encryption key. If the process is interrupted before completion,
all the changes are rolled back the next time that the database is booted.
If the interruption occurs immediately after the database is encrypted with
the new encryption key but before the connection is returned to the application,
you might not be able to boot the database with the old encryption key. In
these rare circumstances, you should try to boot the database with the new
encryption key. </p><note othertype="Recommendation" type="other">Ensure that
you have enough free disk space before you encrypt a database with a new key.
In addition to the disk space required for the current size of the database,
temporary disk space is required to store the old version of the data to restore
the database back to it's original state if the new encryption is interrupted
or returns errors. All of the temporary disk space is released back to the
operating system after the database is reconfigured to work with the new encryption
key.</note><p>To encrypt a database with a new encryption key:</p></context>
<steps>
<step><cmd>Use the type of encryption that is currently used to encrypt the
database:</cmd>
<choices>
<choice>To <xref href="tdevcsecurenewbootpw.dita#tdevcsecurenewbootpw">encrypt
the database with a new boot password key</xref>, use the <i>newBootPassword</i> attribute.</choice>
<choice>To <xref href="tdevcsecurenewextkey.dita#tdevcsecurenewextkey">encrypt
the database with a new external encryption key</xref>, use the <i>newEncryptionKey</i> attribute.</choice>
</choices>
<info>
  If <xref href="cdevcsecure36127.dita#cdevcsecure36127">authentication</xref>
  and
  <xref href="cdevcsecure36595.dita#cdevcsecure36595">SQL authorization</xref>
  are both enabled, the credentials of the 
  <xref href="cdevcsecureDbOwner.dita#cdevcsecureDbOwner">database owner</xref>
  must be supplied, since reencryption is a restricted operation.
</info>

</step>
</steps>
</taskbody>
</task>
