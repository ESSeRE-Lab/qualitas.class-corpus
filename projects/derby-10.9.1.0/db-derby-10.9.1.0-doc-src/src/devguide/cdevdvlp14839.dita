<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="cdevdvlp14839" xml:lang="en-us">
<title>Application development overview</title>
<shortdesc><ph conref="../conrefs.dita#prod/productshortname"></ph> application
developers use the Java Database Connectivity (JDBC) API, the application
programming interface that makes it possible
to access relational databases from Java programs.</shortdesc>
<prolog></prolog>
<conbody>
<p>The JDBC API is part of the Java Platform, Standard Edition and is
not specific to <ph conref="../conrefs.dita#prod/productshortname"></ph>.
It consists of the <i>java.sql</i> and <i>javax.sql</i> packages, which is
a set of classes and interfaces that make it possible to access databases
(from a number of different vendors, not just <ph conref="../conrefs.dita#prod/productshortname"></ph>)
from a Java application.</p>
<p>To develop <ph conref="../conrefs.dita#prod/productshortname"></ph> applications
successfully, you will need to learn the JDBC API. This section does not teach you
how to program with the JDBC API.</p>
<p>This section covers the details of application programming that are specific
to <ph conref="../conrefs.dita#prod/productshortname"></ph> applications.
For example, all JDBC applications typically start their DBMS's JDBC driver
and use a connection URL to connect to a database. This chapter gives you
the details of how to start <ph conref="../conrefs.dita#prod/productshortname"></ph>'s
JDBC driver and how to work with <ph conref="../conrefs.dita#prod/productshortname"></ph>'s
connection URL to accomplish various tasks. It also covers essential <ph conref="../conrefs.dita#prod/productshortname"></ph> concepts
such as the <ph conref="../conrefs.dita#prod/productshortname"></ph> system.</p>
<p>You will find reference information about the particulars of <ph conref="../conrefs.dita#prod/productshortname"></ph>'s
implementation of the JDBC API in the <cite><ph conref="../conrefs.dita#pub/citref"></ph></cite>. </p>
<p><ph conref="../conrefs.dita#prod/productshortname"></ph> application developers
will need to learn SQL. <i>SQL</i> is the standard query language used with
relational databases and is not tied to a particular programming language.
No matter how a particular RDBMS has been implemented, the user can design
databases and insert, modify, and retrieve data using the standard SQL statements
and well-defined data types. SQL-92 is the version of SQL standardized by
ANSI and ISO in 1992; <ph conref="../conrefs.dita#prod/productshortname"></ph> supports
entry-level SQL-92 as well as some higher-level features. Entry-level SQL-92
is a subset of full SQL-92 specified by ANSI and ISO that is supported by
nearly all major DBMSs today. This chapter does not teach you SQL. You will
find reference information about the particulars of <ph conref="../conrefs.dita#prod/productshortname"></ph>'s
implementation of SQL in the <cite><ph conref="../conrefs.dita#pub/citref"></ph></cite>.</p>
<p><ph conref="../conrefs.dita#prod/productshortname"></ph> implements the JDBC
API so as to allow <ph conref="../conrefs.dita#prod/productshortname"></ph> to
serve as a resource manager in a Java EE compliant system.</p>
<p>When an application embeds
<ph conref="../conrefs.dita#prod/productshortname"></ph>, application users take
on the role of database administrator and must maintain the integrity of the
database. See "Part Two:
<ph conref="../conrefs.dita#prod/productshortname"></ph> Administration Guide"
in the <ph conref="../conrefs.dita#pub/citadmin"></ph> for
information on administrative tasks such as backing up and restoring
databases. In particular, see the topic "Maintaining database integrity" for
information on preventing database corruption. You will need to make this
information available to your users.</p>
</conbody>
</concept>
