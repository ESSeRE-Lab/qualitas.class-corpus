<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE concept PUBLIC "-//IBM//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="rdevconceptsinsertrow" xml:lang="en-us">
<title>Inserting rows with updatable result sets</title>
<shortdesc>
Updatable result set can be used to insert rows to the table, by
using <codeph>ResultSet.insertRow()</codeph>.
</shortdesc>
<prolog></prolog>
<conbody>
<section>
When inserting a row, each column in the insert row that does not
allow null as a value and does not have a default value must be given
a value using the appropriate update method. 

If the inserted row satisfies the query predicate, it may become
visible in the result set.

<p>Example of using <codeph>ResultSet.insertRow()</codeph> to insert a
row: </p>

<codeblock>
  Statement stmt = conn.createStatement(ResultSet.TYPE_FORWARD_ONLY, 
                                        ResultSet.CONCUR_UPDATABLE);
  ResultSet uprs = stmt.executeQuery(
    "SELECT firstname, lastname, workdept, bonus " +
    "FROM employee");
  uprs.moveToInsertRow();
  uprs.updateString("FIRSTNAME", "Andreas");
  uprs.updateString("LASTNAME", "Korneliussen");
  uprs.updateInt("WORKDEPT", 123);
  uprs.insertRow();
  uprs.moveToCurrentRow();

</codeblock>

</section>
</conbody>
</concept>
