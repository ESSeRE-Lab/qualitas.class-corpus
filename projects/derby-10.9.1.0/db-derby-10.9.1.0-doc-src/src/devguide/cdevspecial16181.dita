<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="cdevspecial16181" xml:lang="en-us">
<title>Database-side JDBC routines using non-nested connections</title>
<shortdesc>A database-side JDBC routine can create a new connection instead
of using a nested connection. Statements executed in the routine will be
part of a different transaction, and so can issue commits and rollbacks.</shortdesc>
<prolog><metadata>
<keywords><indexterm>Database-side JDBC routines<indexterm>using non-nested
connections</indexterm></indexterm></keywords>
</metadata></prolog>
<conbody>
<p>Such a routine can connect to a database different from the one to which
the parent SQL statement that called it is connected. The routine does not
use the same transaction or <i>Connection</i>. It establishes a new <i>Connection</i> and
transaction.</p>
<note>If database-side JDBC routines do not use nested connections, this
means that they are operating outside of the normal DBMS transaction control,
so it is not good practice to use them indiscriminately.</note>
</conbody>
</concept>
