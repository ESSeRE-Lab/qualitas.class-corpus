<?xml version="1.0" encoding="utf-8"?>
 
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="cdevdeploy855368" xml:lang="en-us">
<title>Embedded deployment application overview</title>
<shortdesc>In an embedded environment, <ph conref="../conrefs.dita#prod/productshortname"></ph> runs
in the same JVM as the application.</shortdesc>
<prolog><metadata>
<keywords><indexterm>embedded applications<indexterm>deploying</indexterm></indexterm>
<indexterm>embedded environments<indexterm>single-user application</indexterm></indexterm>
<indexterm>embedded environments<indexterm>multi-user application server</indexterm></indexterm>
<indexterm>embedded environments<indexterm>overview</indexterm></indexterm>
</keywords>
</metadata></prolog>
<conbody>
<p>The application can be a single-user application or a multi-user application
server. In the latter case, <ph conref="../conrefs.dita#prod/productshortname"></ph> runs
embedded in the user-provided server framework, and any client applications
use user-provided connectivity or allow the application server to handle all
database interaction.</p>
<p>The following figure shows
<ph conref="../conrefs.dita#prod/productshortname"></ph> embedded in a
single-user Java application.</p>
<fig expanse="column" id="cdevdeploy31527"><title><ph conref="../conrefs.dita#prod/productshortname"></ph> embedded
in a single-user Java application</title>
<image href="embed_os.gif" placement="break"><alt>This figure shows the single-user application and the Derby database engine inside the Java Virtual Machine. The single-user application connects to the Derby database engine by using the JDBC API. The Derby database engine connects to the Derby database.</alt>
</image>
</fig>
<p>The following figure shows
<ph conref="../conrefs.dita#prod/productshortname"></ph> embedded in a
multi-user Java application server.</p>
<fig expanse="column" id="cdevdeploy29107"><title>Derby embedded in a multi-user
Java application server</title>
<image href="itserv_os.gif" placement="break"><alt>This figure shows multiple users connecting to the application server, which contains the application and the Derby database engine. The application connects to the Derby database engine. The Derby database engine connects to the Derby database.</alt>
</image>
</fig>
<p>When a <ph conref="../conrefs.dita#prod/productshortname"></ph> database
is embedded in a Java application, the database is dedicated to that single
application. If you deploy more than one copy of the application, <i>each
application has its own copy of the database and <ph conref="../conrefs.dita#prod/productshortname"></ph> software</i>.
A <ph conref="../conrefs.dita#prod/productshortname"></ph> server framework
can work in multi-threaded, multi-connection mode and can even connect to
more than one database at a time. A server framework, such as the <ph conref="../conrefs.dita#prod/productshortname"></ph> Network
Server, can be used to manage multiple connections and handle network capabilities.
Some server framework solutions, such as WebSphere Application Server, provide
additional features such as web services and connection pooling. However,
only one server framework at a time can operate against a <ph conref="../conrefs.dita#prod/productshortname"></ph> database.</p>
<p>The <ph conref="../conrefs.dita#prod/productshortname"></ph> application
accesses an embedded <ph conref="../conrefs.dita#prod/productshortname"></ph> database
through the JDBC API. To connect, an application makes a call to the local <ph
conref="../conrefs.dita#prod/productshortname"></ph> JDBC driver. Accessing
the JDBC driver automatically starts the embedded <ph conref="../conrefs.dita#prod/productshortname"></ph> software.
The calling application is responsible for shutting down the embedded <ph
conref="../conrefs.dita#prod/productshortname"></ph> database software. </p>
</conbody>
</concept>
