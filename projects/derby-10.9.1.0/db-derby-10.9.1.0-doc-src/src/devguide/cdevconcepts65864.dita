<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="cdevconcepts65864" xml:lang="en-us">
<title>Multi-thread programming tips</title>
<shortdesc>You may be sharing a <i>Connection</i> among multiple threads because
you have experienced poor concurrency using separate transactions.</shortdesc>
<prolog></prolog>
<conbody>
<p>Here are some tips for increasing concurrency:</p>
<ul>
<li>Use row-level locking.</li>
<li>Use the <i>TRANSACTION_READ_COMMITTED</i> isolation level.</li>
<li>Avoid queries that cannot use indexes; they require locking of all the
rows in the table (if only very briefly) and might block an update.</li>
</ul>
<p>In addition, some programmers might share a statement among multiple threads
to avoid the overhead of each thread's having its own. Using the single statement
cache, threads can share the same statement from <i>different connections</i>.
For more information, see "Using the statement cache" in
<ph conref="../conrefs.dita#pub/cittuning"></ph>.</p>
</conbody>
</concept>
