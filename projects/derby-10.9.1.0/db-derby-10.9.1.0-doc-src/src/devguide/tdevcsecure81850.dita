<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN"
 "../dtd/task.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<task id="tdevcsecure81850" xml:lang="en-us">
<title>Configuring security in an embedded environment</title>
<shortdesc>In an embedded environment, typically there is only one database
per system and there are no administrative resources to protect databases.</shortdesc>
<prolog></prolog>
<taskbody>
<context>To configure security in an embedded environment:</context>
<steps>
<step><cmd>Encrypt the database when you create it.</cmd></step>
<step><cmd>Configure all security features as database-level properties. 
These properties are stored in the database (which is encrypted). See
<xref href="cdevsetprop824451.dita#cdevsetprop824451"></xref> and 
<xref href="cdevsetprop12821.dita#cdevsetprop12821"></xref> for more
information.</cmd></step>
<step><cmd>Turn on protection for database-level properties so that they cannot
be overridden by system properties by setting the <i>derby.database.propertiesOnly</i> property
to TRUE. See the <ph conref="../conrefs.dita#pub/citref"></ph> for details
on this property.</cmd></step>
<step><cmd>To prevent unauthorized users from accessing databases once they
are booted, turn on user authentication and SQL authorization for the database.
Use NATIVE authentication or, alternatively, LDAP or a user-defined
class.</cmd></step>
</steps>
<result></result>
</taskbody>
</task>
