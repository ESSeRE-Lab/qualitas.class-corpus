<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "../dtd/concept.dtd">
<concept xml:lang="en-us" id="ctunoptimz1008884">
<title>How the system makes its decision if it has a choice</title>
<prolog>
</prolog>
<conbody>
<p>If the lock granularity (whether to lock rows or entire tables) is not
forced by the user, the system makes a decision using the following rules:
 
<ul>
<li>For SELECT statements running in READ_COMMITTED isolation, the system
always chooses row-level locking.</li>
<li>If the statement scans the entire table or index and it does not meet
the criteria above, the system chooses table-level locking. (A statement scans
the entire table whenever it chooses a table as the access path.)</li>
<li>If a statement partially scans the index, the system uses row-level locking,
until the number of rows touched on a table reaches lock escalation threshold.
It is then escalated to a table lock. (You can configure this threshold number;
see <xref href="ctunoptimz26019.dita#ctunoptimz26019"/>.)  
<ul>
<li>For SELECT, UPDATE, and DELETE statements, the number of rows touched
is different from the number of rows read. If the same row is read more than
once, it is considered to have been touched only once. Each row in the inner
table of a join can be read many times, but can be touched at most one time.</li>
</ul></li>
</ul></p>
</conbody></concept>
