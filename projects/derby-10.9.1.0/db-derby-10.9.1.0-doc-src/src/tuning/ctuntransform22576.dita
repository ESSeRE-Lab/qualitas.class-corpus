<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "../dtd/concept.dtd">
<concept xml:lang="en-us" id="ctuntransform22576">
<title>View flattening</title>
<prolog><metadata>
<keywords>
<indexterm>View flattening</indexterm>
</keywords>
</metadata>
</prolog>
<conbody>
<p>When evaluating a statement that references a view, <ph conref="../conrefs.dita#prod/productshortname"></ph> internally
transforms a view into a derived table. This derived table might also be a
candidate for <i>flattening</i> into the outer query block.</p>
<p>A view or derived table can be flattened into the outer query block if
all of the following conditions are met:   
<ul>
<li>The select list is composed entirely of <xref href="ctuntransform13966.dita#ctuntransform13966/rtuntransform13785">simple column reference</xref>s and constants.</li>
<li>There is no GROUP BY clause in the view. </li>
<li>There is no DISTINCT in the view. </li>
<li>There is no ORDER BY, result offset, or fetch first clause in the view.</li>
</ul></p>
<p>For example, given view <i>v1(a,b):</i>  
<codeblock><b>SELECT Cities.city_name, Countries.country_iso_code
FROM Cities, Countries
WHERE Cities.country_iso_code = Countries.country_iso_code</b></codeblock></p>
<p>and a SELECT that references it:  
<codeblock><b>SELECT a, b
FROM v1 WHERE a = 'Melbourne'</b></codeblock></p>
<p>after the view is transformed into a derived table, the internal query
is  
<codeblock><b>SELECT a, b
FROM (select Cities.city_name, Countries.country_iso_code
FROM Cities, Countries
WHERE Cities.country_iso_code = Countries.country_iso_code) v1(a, b)
WHERE a = 'Melbourne'</b></codeblock></p>
<p>After view flattening it becomes  
<codeblock><b>SELECT Cities.city_name, Countries.country_iso_code
FROM Cities, Countries
WHERE Cities.country_iso_code = Countries.country_iso_code
AND Cities.city_name = 'Melbourne'</b></codeblock></p>
</conbody></concept>
