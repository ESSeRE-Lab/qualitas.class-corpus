<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "../dtd/concept.dtd">
<concept xml:lang="en-us" id="ctunoptimz29384">
<title>About the optimizer's selection of bulk fetch</title>
<prolog><metadata>
<keywords>
<indexterm>Bulk fetch<indexterm>how optimizer chooses</indexterm></indexterm>
</keywords>
</metadata>
</prolog>
<conbody>
<p>When <ph conref="../conrefs.dita#prod/productshortname"></ph> retrieves data from a conglomerate, it can fetch more
than one row at a time. Fetching more than one row at a time is called bulk
fetch. By default, <ph conref="../conrefs.dita#prod/productshortname"></ph> fetches 16 rows at a time.</p>
<p>Bulk fetch is faster than retrieving one row at a time when a large number
of rows qualify for each scan of the table or index. Bulk fetch uses extra
memory to hold the pre-fetched rows, so it should be avoided in situations
in which memory is scarce.</p>
<p>Bulk fetch is automatically turned off for updatable cursors, for hash
joins, for statements in which the scan returns a single row, and for subqueries.
It is useful, however, for table scans or index range scans:  
<codeblock><b>SELECT *
FROM Flights
WHERE miles &gt; 4

SELECT *
FROM Flights</b></codeblock></p>
<p>The default size for bulk fetch (16 rows) typically provides good performance.</p>
</conbody></concept>
