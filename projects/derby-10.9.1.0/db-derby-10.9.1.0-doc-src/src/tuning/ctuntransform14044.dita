<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "../dtd/concept.dtd">
<concept xml:lang="en-us" id="ctuntransform14044">
<title>Combining ORDER BY and UNION</title>
<prolog><metadata>
<keywords>
<indexterm>UNION<indexterm>avoiding ordering during</indexterm></indexterm>
</keywords>
</metadata>
</prolog>
<conbody>
<p>Without a transformation, a statement that contains both ORDER BY and UNION
would require two separate sorting steps-one to satisfy ORDER BY and
one to satisfy UNION (Currently <ph conref="../conrefs.dita#prod/productshortname"></ph> uses sorting to eliminate duplicates
from a UNION.  You can use UNION ALL to avoid sorting, but UNION ALL will return duplicates.  So you only use UNION ALL to avoid sorting if you know that there are no duplicate rows in the tables).</p>
<p>In some situations, <ph conref="../conrefs.dita#prod/productshortname"></ph> can transform the statement internally
into one that contains only one of these keywords (the ORDER BY is thrown
out). The requirements are:  
<ul>
<li>The columns in the ORDER BY list must be a subset of the columns in the
select list of the left side of the union. </li>
<li>All the columns in the ORDER BY list must be sorted in ascending order
and they must be an in-order prefix of the columns in the target list of the
left side of the UNION. </li>
</ul></p>
<p><ph conref="../conrefs.dita#prod/productshortname"></ph> will be able to transform the following statements:   
<codeblock><b>SELECT miles, meal
FROM Flights
UNION VALUES (1000, 'D')
ORDER BY 1
</b></codeblock></p>
<p><ph conref="../conrefs.dita#prod/productshortname"></ph> cannot avoid two sorting nodes in the following statement,
because of the order of the columns in the ORDER BY clause:  
<codeblock><b>SELECT flight_id, segment_number FROM Flights
UNION
SELECT flight_id, segment_number FROM FlightAvailability
ORDER BY segment_number , flight_id
</b></codeblock></p>
</conbody></concept>
