<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "../dtd/concept.dtd">
<concept xml:lang="en-us" id="ctuntransform35783">
<title>Predicate transformations</title>
<prolog><metadata>
<keywords>
<indexterm>Internal transformation of statements<indexterm>predicates</indexterm></indexterm>
</keywords>
</metadata>
</prolog>
<conbody>
<p>WHERE clauses with <xref href="ctuntransform13966.dita#ctuntransform13966/rtuntransform25022">predicate</xref>s joined
by OR are usually not optimizable. WHERE clauses with predicates joined by
AND are optimizable if <i>at least one</i> of the predicates
is optimizable. For example:  
<codeblock><b>SELECT * FROM Flights
WHERE flight_id = 'AA1111'
AND segment_number &lt;&gt; 2</b></codeblock></p>
<p>In this example, the first predicate is optimizable; the second predicate
is not. Therefore, the statement is optimizable.  
<note>In a few
cases, a WHERE clause with predicates joined by OR can be transformed into
an optimizable statement. See <xref href="rtuntransform590.dita#rtuntransform590"/>.</note></p>
<p><ph conref="../conrefs.dita#prod/productshortname"></ph> can transform some predicates internally so that at least one
of the predicates is optimizable and thus the statement is optimizable. This
section describes the predicate transformations that <ph conref="../conrefs.dita#prod/productshortname"></ph> performs
to make predicates optimizable.</p>
<p>A predicate that uses the following comparison operators can sometimes
be transformed internally into optimizable predicates. 
</p>
</conbody></concept>
