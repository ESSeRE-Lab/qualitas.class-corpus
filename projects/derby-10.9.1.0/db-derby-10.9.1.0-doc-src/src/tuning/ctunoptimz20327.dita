<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "../dtd/concept.dtd">
<concept xml:lang="en-us" id="ctunoptimz20327">
<title>About the optimizer's choice of join order</title>
<prolog><metadata>
<keywords>
<indexterm>Join order<indexterm>how optimizer chooses</indexterm></indexterm>
</keywords>
</metadata>
</prolog>
<conbody>
<p>The optimizer chooses the optimal join order as well as the optimal index
for each table. The join order can affect which index is the best choice.
The optimizer can choose an index as the access path for a table if it is
the inner table, but not if it is the outer table (and there are no further
qualifications).</p>
<p>The optimizer chooses the join order of tables only in simple FROM clauses.
Most joins using the JOIN keyword are flattened into simple joins, so the
optimizer chooses their join order.</p>
<p>The optimizer does not choose the join order for outer joins; it uses the
order specified in the statement.</p>
<p>When selecting a join order, the optimizer takes into account:  
<ul>
<li>The size of each table</li>
<li>The indexes available on each table</li>
<li>Whether an index on a table is useful in a particular join order</li>
<li>The number of rows and pages to be scanned for each table in each join
order</li>
</ul>
<note><ph conref="../conrefs.dita#prod/productshortname"></ph> does transitive closure on qualifications.
For details, see <xref href="ctuntransform37032.dita#ctuntransform37032"/>.</note></p>
</conbody></concept>
