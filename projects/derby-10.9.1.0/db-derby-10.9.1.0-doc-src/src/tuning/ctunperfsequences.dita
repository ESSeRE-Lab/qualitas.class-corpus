<?xml version="1.0" encoding="utf-8"?>
 
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="ctunperfsequences" xml:lang="en-us">
<title>Increase the concurrency of sequences</title>
<prolog><metadata><keywords>
<indexterm>sequences<indexterm>concurrency</indexterm></indexterm>
<indexterm>concurrency<indexterm>sequences</indexterm></indexterm>
</keywords></metadata></prolog>
<conbody>
<p>If you use a sequence generator (created with the CREATE SEQUENCE statement),
you can increase its concurrency by doing the following:</p>
<ul>
<li>Do not query the SYSSEQUENCES system table directly. Instead, use the
SYSCS_UTIL.SYSCS_PEEK_AT_SEQUENCE system function to obtain the current value
of a sequence generator.</li>
<li>Specifying a higher value for the
<i>derby.language.sequence.preallocator</i> property may increase your
concurrency. However, you should pay special attention to bringing down the
database in an orderly fashion in order to not leak unused preallocated
values. (See also
<xref href="ctunperf17936.dita#ctunperf17936"></xref>.)</li>
</ul>
<p>See the <ph conref="../conrefs.dita#pub/citref"></ph> for more information
about the CREATE SEQUENCE statement, the SYSSEQUENCES system table, the
SYSCS_UTIL.SYSCS_PEEK_AT_SEQUENCE system function, and the
<i>derby.language.sequence.preallocator</i> property.</p> 
</conbody>
</concept>
