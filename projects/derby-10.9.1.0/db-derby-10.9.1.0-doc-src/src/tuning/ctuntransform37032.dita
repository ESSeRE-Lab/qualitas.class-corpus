<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "../dtd/concept.dtd">
<concept xml:lang="en-us" id="ctuntransform37032">
<title>Transitive closure</title>
<prolog><metadata>
<keywords>
<indexterm>Transitive closure</indexterm>
<indexterm>Internal transformation of statements<indexterm>transitive closure</indexterm></indexterm>
</keywords>
</metadata>
</prolog>
<conbody>
<p>The transitive property of numbers states that if A = B and B = C, then
A = C.</p>
<p><ph conref="../conrefs.dita#prod/productshortname"></ph> applies this property to query predicates to add additional
predicates to the query in order to give the optimizer more information. This
process is called <i>transitive closure</i>. There are two
types of transitive closure:  
<ul>
<li>Transitive closure on join clauses  
<p>Applied first, if applicable</p></li>
<li>Transitive closure on search clauses</li>
</ul></p>
</conbody></concept>
