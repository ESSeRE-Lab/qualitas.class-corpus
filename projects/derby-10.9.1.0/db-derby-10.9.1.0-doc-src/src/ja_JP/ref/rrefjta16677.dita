<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<reference id="rrefjta16677" xml:lang="ja">
<title>J2EEへの準拠:Java Transaction APIとjavax.sql インターフェイス</title>
<prolog><metadata>
<keywords><indexterm>Resource manager<indexterm>Derby as a J2EE system</indexterm><indexterm>JNDI</indexterm><indexterm>javax.sql.DataSource</indexterm
></indexterm><indexterm>Connection pooling</indexterm><indexterm>javax.sql.
ConnectionPoolDataSource</indexterm><indexterm>javax.sql.PooledConnection</indexterm>
<indexterm>XA</indexterm><indexterm>Distributed transaction management</indexterm>
<indexterm>javax.sql.XAxxx interfaces</indexterm><indexterm>java.transaction.xa
package</indexterm></keywords>
</metadata></prolog>
<refbody>
<section><p>J2EE、Java 2 Platform, Enterprise Editionは、多階層環境の再利用可能なソフトウェア部品に基づきエンタープライズアプリケーションを開発する標準です。
J2EEではJava 2 Platform, Standard Edition (J2SE)に加えて、Enterprise Java Beans (EJB)、Java Server Pages (JSP)、サーブレット、XMLなどの機能を提供しています。
J2EEアーキテクチャにより既存の技術やエンタープライズアプリケーションを統合して、単一の管理が可能な環境にまとめ上げることが可能です。</p></section>
<section><p><ph conref="../conrefs.dita#prod/productshortname"></ph>は分散化されたJ2EEシステムにおいては、J2EE準拠のソフトウェア部品です。JNDIサーバやコネクションプールのモジュール、トランザクションマネージャ、リソースマネージャ、ユーザアプリケーション等のほかのソフトウェアと並んで、<ph conref="../conrefs.dita#prod/productshortname"></ph>は大きなシステムの一部となるソフトウェアとなります。<ph conref="../conrefs.dita#prod/productshortname"></ph>は、これらのうち、リソースマネージャとしての機能を提供します。</p><p>J2EEについてのより詳細な情報は、<i><xref format="html" href="http://java.sun.com/javaee/reference/" scope="external">http://java.sun.com/javaee/reference/</xref></i>にて入手可能なJ2EEの仕様を参照してください。</p><p>J2EEのシステムにてリソースマネージャとして働くためには、J2EEが要求する以下の基本機能・機構を実現しなければなりません。<ul>
<li>JNDIのサポート<p>この機能により、アプリケーションは、データベースの名前を登録して、データベース接続URLではなく、登録した名前によりデータベースに接続できます。JDBCインターフェイスの一つである、<i><xref href="rrefjta18596.dita#rrefjta18596/jta20722">javax.sql.DataSource</xref></i>により、この機能は実現されています。</p></li>
<li>コネクションプーリング<p>リソースマネージャ((<ph conref="../conrefs.dita#prod/productshortname"></ph>)への接続を保持する機構です。
接続を要求するユーザは、プールされた接続をこの機構から受け取ることができます。
接続の確率は比較的に高価な処理となるので、クライアント/サーバの環境にてコネクションプールは有用です。組み込み環境では接続は比較的安価に手に入れることができます。したがってコネクションプールによるパフォーマンス上の利得は余りありません。
この機能はJDBCインターフェイスの、<i><xref href="rrefjta18596.dita#rrefjta18596/jta96573">javax.sql.ConnectionPoolDataSourceとjavax.sql.PooledConnection</xref></i>により提供されます。</p></li>

<li>XA のサポート<p>XAは分散トランザクション管理の標準の一つです。
これは2フェーズコミットに基づくものです。<i>javax.sql.XAxxx</i>インターフェイスと<i>java.transaction.xa</i>パッケージはXAの抽象的な実装です。
XAの詳細については<cite>X/Open CAE Specification-Distributed
Transaction Processing: The XA Specification</cite>, X/Open Document No. XO/CAE/91/300か、ISBN 1 872630 24 3を参照してください。
JTAのAPIは、java.transaction.xaパッケージのインターフェイス(<i><xref href="rrefjta18596.dita#rrefjta18596/jta18170">javax.sql.XAConnection</xref>,</i> <i><xref
href="rrefjta18596.dita#rrefjta18596/jta88962">javax.sql.XADataSource</xref>,</i> <i><xref
href="rrefjta51021.dita#rrefjta51021/jta18387">javax.transaction.xa.XAResource</xref>,</i> <i><xref
href="rrefjta51021.dita#rrefjta51021/jta75105">javax.transaction.xa.Xid</xref>,</i> and <i><xref
href="rrefjta51021.dita#rrefjta51021/jta93666">javax.transaction.xa.XAException</xref></i>)から構成されて、この機能を提供します。</p></li>
</ul></p><p>基本となるJDBCのインターフェイスを除いて、これらのインターフェイスはエンドユーザーのアプリケーションからは意識されません。これらはシステムのバックエンドのソフトウェアコンポーネントにて利用されます。
<note>これらのインターフェイスを実装するクラスの情報や、どのようにして<ph conref="../conrefs.dita#prod/productshortname"></ph>をリソースマネージャーとして使うかは、<cite><ph conref="../conrefs.dita#pub/citdevelop"></ph></cite>の第6章にある「<ph conref="../conrefs.dita#prod/productshortname"></ph>をJ2EEのリソースマネージャに使う」を参照してください。</note></p></section>
</refbody>
</reference>
