<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<reference id="rrefsqlj13733" xml:lang="ja">
<title>CHAR データ型</title>
<prolog><metadata>
<keywords><indexterm>CHAR data type</indexterm></keywords>
</metadata></prolog>
<refbody>
<section> <p>CHARは固定長の領域で文字列を記録します。</p></section>
<refsyn><title>Syntax</title> <codeblock><b>CHAR[ACTER] [(<i>長さ</i>)] </b></codeblock> <p><i>長さ</i> は符号のない定数の整数値です。長さの既定値は1です。</p> </refsyn>
<section><title>実行時の対応するJavaの型</title> <p><i>java.lang.String</i></p> </section>
<section><title>JDBCのメタデータ型(java.sql.Types)</title> 
<p>CHAR</p> 
<p><ph conref="../conrefs.dita#prod/productshortname"></ph>は文字列値が型の長さより短い場合、空白で空きを詰めます。<ph conref="../conrefs.dita#prod/productshortname"></ph> は文字列値が型の長さより長い場合、空白を切り捨てます。空白以外の文字を残した文字列が長すぎる場合、例外が挙がります。<xref href="rrefsqlj23075.dita#rrefsqlj23075">比較演算子</xref>がCHARに適用された場合、文字列長の短い値には空白がつめられて、文字列長の長い値と同じ長さになるように処理されます。</p> 
<p>CHARとVARCHARの値が式にて混在して利用されていた場合、長さの短い値はスペースで詰められて、文字列長の長い値と同じ長さになるよう処理されます。</p> 
<p>文字列の定数の型はCHARです。</p> </section>
<section><title>実装レベルで定義されている事</title> 
<p>CHARデータ型の最大長は<i>java.lang.Integer.MAX_VALUE</i>です。</p> </section>
<example> <codeblock><b><ph>-- 文字列の定数では連続した引用符により、
-- 一重引用符あるいはアポストロフィーを表します。</ph>
VALUES 'hello this is Joe''s string'</b></codeblock> </example>
</refbody>
</reference>

