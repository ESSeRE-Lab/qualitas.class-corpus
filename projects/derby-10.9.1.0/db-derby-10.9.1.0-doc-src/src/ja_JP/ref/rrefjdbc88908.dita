<?xml version="1.0" encoding="utf-8"?>
 
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<reference id="rrefjdbc88908" xml:lang="ja">
<title>fnキーワードを使ったJDBCエスケープ構文</title>
<prolog><metadata>
<keywords><indexterm>fn<indexterm>JDBC escape keyword</indexterm><indexterm>JDBC <indexterm>escape
keyword</indexterm></indexterm><indexterm>escape keyword<indexterm>JDBC </indexterm></indexterm></indexterm>
<indexterm>JDBC<indexterm>escape functions</indexterm></indexterm><indexterm>substring<indexterm>JDBC
scalar function</indexterm></indexterm><indexterm>mod<indexterm>JDBC scalar
function</indexterm></indexterm><indexterm>locate<indexterm>JDBC scalar function</indexterm></indexterm>
<indexterm>abs<indexterm>JDBC scalar function</indexterm></indexterm><indexterm>sqrt<indexterm>JDBC
scalar function</indexterm></indexterm><indexterm>concat<indexterm>JDBC scalar
function</indexterm></indexterm><indexterm>TIMESTAMPADD function<indexterm>JDBC
scalar function</indexterm></indexterm><indexterm>TIMESTAMPDIFF function<indexterm>JDBC
scalar function</indexterm></indexterm><indexterm>acos<indexterm>JDBC scalar
function</indexterm></indexterm><indexterm>asin<indexterm>JDBC scalar function</indexterm></indexterm>
<indexterm>atan<indexterm>JDBC scalar function</indexterm></indexterm><indexterm>ceiling<indexterm>JDBC
scalar function</indexterm></indexterm><indexterm>cos<indexterm>JDBC scalar
function</indexterm></indexterm><indexterm>degrees<indexterm>JDBC scalar function</indexterm></indexterm>
<indexterm>exp<indexterm>JDBC scalar function</indexterm></indexterm><indexterm>floor<indexterm>JDBC
scalar function</indexterm><indexterm>log<indexterm>JDBC scalar function</indexterm></indexterm><indexterm>log10<indexterm>JDBC
scalar function</indexterm></indexterm><indexterm>pi<indexterm>JDBC scalar
function</indexterm></indexterm><indexterm>radians<indexterm>JDBC scalar function</indexterm></indexterm><indexterm>sin<indexterm>JDBC
scalar function</indexterm></indexterm></indexterm><indexterm>tan<indexterm>JDBC
scalar function</indexterm></indexterm></keywords>
</metadata></prolog>
<refbody>
<section> <p>JDBCエスケープ構文にて<parmname>fn</parmname>というキーワードを使うことで関数を指定できます。</p></section>
<refsyn><title>構文</title><codeblock><b>{fn <i>関数呼び出し</i>}</b></codeblock><p>ここで<i>関数呼び出し</i>は、以下に挙げるスカラー関数の何れかの名前です。</p><dl><dlentry>
<dt>abs</dt>
<dd>数の絶対値を返す。<codeblock><b>abs(<i>数式</i>)</b></codeblock>
<p>JDBCエスケープ構文の{fn abs(<i>数式</i>)}は、組込み構文の<xref href="rrefsqlj98067.dita#rrefsqlj98067/i1195049">ABSOLUTE(数式)</xref>と同等です。
より詳細な情報は、<xref href="rrefsqlj98067.dita#rrefsqlj98067"></xref>を参照してください。</p></dd>
</dlentry><dlentry>
<dt>acos</dt>
<dd>指定した数の逆余弦を返します。<codeblock><b>acos(<i>数</i>)</b></codeblock><p>JDBCエスケープ構文の{fn acos(<i>数</i>)}は、組込み構文のACOS(数)と同等です。より詳細な情報は、<xref href="rreffuncacos.dita#rreffuncacos">ACOS</xref>を参照してください。</p></dd>
</dlentry><dlentry>
<dt>asin</dt>
<dd>指定した数の逆正弦を返します。<codeblock><b>asin(<i>数</i>)</b></codeblock><p>JDBCエスケープ構文の{fn asin(<i>数</i>)}は、組込み構文のASIN(数)と同等です。より詳細な情報は、<xref href="rreffuncasin.dita#rreffuncasin">ASIN</xref>を参照してください。</p></dd>
</dlentry><dlentry>
<dt>atan</dt>
<dd>指定した数の逆正接を返します。<codeblock><b>atan(<i>数</i>)</b></codeblock><p>The
JDBCエスケープ構文の{fn atan(<i>数</i>)}は、組込み構文のATAN(数)と同等です。より詳細な情報は、<xref href="rreffuncatan.dita#rreffuncatan">ATAN</xref>を参照してください。</p></dd>
</dlentry><dlentry>
<dt>ceiling</dt>
<dd>指定した数を切り上げて、指定した数以上の最小の数を返します。<codeblock><b>ceiling(<i>数</i>)</b></codeblock>
<p>JDBCエスケープ構文の{fn ceiling(<i>数</i>)}は、組込み構文のCEILING(数)と同等です。より詳細な情報は<xref href="rreffuncceil.dita#rreffuncceil"></xref>を参照してください。</p></dd>
</dlentry><dlentry>
<dt>concat</dt>
<dd>連結した文字列を返します。<codeblock><b>concat(<i>文字式</i>, <i>文字式</i>)</b></codeblock><p
>最初の文字列に二つ目の文字列を連結した文字列が構成されます。もしどちらかの文字列が空なら、返り値はNULLとなります。JDBCエスケープ構文の{fn concat
(<i>文字式</i>, <i>文字式</i>)は、組込み構文の{ 文字式 || 文字式 }と同等です。詳細は、<xref href="rrefsqlj40899.dita#rrefsqlj40899"></xref>を参照してください。</p></dd>
</dlentry><dlentry>
<dt>cos</dt>
<dd>指定した引数の余弦を返します。<codeblock><b>cos(<i>数</i>)</b></codeblock>
<p>JDBCエスケープ構文の{fn cos(<i>数</i>)}は、組込み構文のCOS(数)と同等です。詳細は、<xref href="rreffunccos.dita#rreffunccos"></xref>を参照してください。</p></dd>
</dlentry><dlentry>
<dt>degrees</dt>
<dd>指定した数をラジアンから度に変換します。<codeblock><b>degrees(<i>数</i>)</b></codeblock>
<p>JDBCエスケープ構文の{fn degrees(<i>数</i>)}は、組込み構文のDEGREES(数)と同等です。詳細は<xref href="rreffuncdegrees.dita#rreffuncdegrees"></xref>を参照してください。</p></dd>
</dlentry><dlentry>
<dt>exp</dt>
<dd><term>e</term>を指定した数で累乗した数を返します。<codeblock><b>exp(<i>数</i>)</b></codeblock>
<p>JDBCエスケープ構文の{fn exp(<i>数</i>)}は、組み込み構文のEXP(数)と同等です。詳細は<xref href="rreffuncexp.dita#rreffuncexp"></xref>を参照してください。</p></dd>
</dlentry><dlentry>
<dt>floor</dt>
<dd>指定した数を切り捨てて、指定した数以下の最大の数を返します。<codeblock><b>floor(<i>数</i>)</b></codeblock>
<p>JDBCエスケープ構文の{fn floor(<i>数</i>)}は、組込み構文のFLOOR(数)と同等です。
詳細は<xref href="rreffuncfloor.dita#rreffuncfloor"></xref>を参照してください。</p></dd>
</dlentry><dlentry>
<dt>locate</dt>
<dd>二つ目の<i>文字式</i>のうちで、一つ目の<i>文字式</i>が見つかる位置を返します。
<i>開始位置</i>が指定されない場合、二つ目の<i>文字式</i>の頭から、一致する位置を見つけようとします。<codeblock><b>locate(<i>文字式</i>,<i>文字式</i> [, <i>開始位置</i>] )</b></codeblock>
<p>JDBCエスケープ構文の{fn locate(<i>文字式</i>,<i>文字式</i> [, <i>開始位置</i>]
)}は、組込み構文の<xref href="rrefsqlj61998.dita#rrefsqlj61998/i1195050">LOCATE(CharacterExpression,
CharacterExpression [, StartPosition] )</xref>と等価です。詳細は<xref href="rrefsqlj61998.dita#rrefsqlj61998"></xref>を参照してください。</p></dd>
</dlentry><dlentry>
<dt>log</dt>
<dd>指定した数の自然対数(底を<term>e</term>とします。)を返します。<codeblock><b>log(<i>数</i>)</b> </codeblock>
<p>JDBCエスケープ構文の{fn log(<i>数</i>)}は、組込み構文のLOG(数)と等価です。詳細は<xref href="rreffunclog.dita#rreffunclog"></xref>を参照してください。</p></dd>
</dlentry><dlentry>
<dt>log10</dt>
<dd>指定した数の10を底とする対数を返します。<codeblock><b>log10(<i>数</i>)</b></codeblock><p>JDBCエスケープ構文の{fn log10(<i>数</i>)}は、組込み構文の、LOG10(数)と等価です。詳細は<xref href="rreffunclog10.dita#rreffunclog10"></xref>を参照してください。</p></dd>
</dlentry><dlentry>
<dt>mod</dt>
<dd> 一つ目の引数を二つ目の引数で割った余り(剰余)を返します。
一つ目の引数が負であった場合のみ、結果は負となります。<codeblock><b>mod(<i>整数</i>, <i>整数</i>)</b></codeblock>
<p>詳細は<xref href="rrefsqljmod.dita#rrefsqljmod"></xref>を参照してください。</p></dd>
</dlentry><dlentry>
<dt>pi</dt>
<dd><term>pi</term>の最近似値を返します。<codeblock><b>pi()</b></codeblock>
<p>JDBCエスケープ構文の{fn pi()}は、組込み構文のPI()と等価です。詳細は<xref href="rreffuncpi.dita#rreffuncpi"></xref>を参照してください。</p></dd>
</dlentry><dlentry>
<dt>radians</dt>
<dd>指定した数を度からラジアンに変換します。<codeblock><b>radians(<i>数</i>)</b></codeblock>
<p>JDBCエスケープ構文の{fn radians(<i>数</i>)}は、組込み構文のRADIANS(数)と等価です。詳細は<xref href="rreffuncradians.dita#rreffuncradians"></xref>を参照してください。</p></dd>
</dlentry><dlentry>
<dt>sin</dt>
<dd>指定した数の正弦を返します。<codeblock><b>sin(<i>数</i>)</b></codeblock>
<p>JDBCエスケープ構文の{fn sin(<i>数</i>)}は、組込み構文のSIN(数)と等価です。詳細は<xref href="rreffuncsin.dita#rreffuncsin">SIN</xref>を参照してください。</p></dd>
</dlentry><dlentry>
<dt>sqrt</dt>
<dd>浮動小数点数の平方根を返します。<codeblock><b>sqrt(<i>浮動小数点数式</i>)</b></codeblock><p>
JDBCエスケープ構文の{fn sqrt (<i>浮動小数点数式</i>)}は、組込み構文の<xref href="rrefsqlj73147.dita#rrefsqlj73147/i1195048">SQRT(浮動小数点数式)</xref>と等価です。詳細は<xref href="rrefsqlj73147.dita#rrefsqlj73147"></xref>を参照してください。</p></dd>
</dlentry><dlentry>
<dt>substring</dt>
<dd><i>文字式</i>の<i>開始位置</i>から始まる部分文字列を構成して返します。
<i>文字式</i>の最初の文字は1と数えます。
<codeblock><b>substring(<i>文字式</i>, <i>開始位置</i>, <i>長さ</i>)</b></codeblock></dd>
</dlentry><dlentry>
<dt>tan</dt>
<dd>引数の正接を返します。<codeblock><b>tan(<i>数</i>)</b></codeblock>
<p>JDBCエスケープ構文の{fn tan(<i>数</i>)}は、組込み構文のTAN(数)と等価です。詳細は<xref href="rreffunctan.dita#rreffunctan">TAN</xref>を参照してください。</p></dd>
</dlentry><dlentry>
<dt>TIMESTAMPADD</dt>
<dd><codeph>TIMESTAMPADD</codeph>関数を使って、タイムスタンプに時間を足すことができます。関数はタイムスタンプに整数を時間の種類に沿って処理して、加算した値を新しいタイムスタンプとして返します。負の整数を与えることで減算もできます。
<p><codeph>TIMESTAMPADD</codeph>はJDBCエスケープの関数で、JDBCエスケープ関数の構文でのみ利用可能です。</p>
<codeblock><b>TIMESTAMPADD( <i>時間の種類</i>, <i>整数式</i>, <i>タイムスタンプ式</i> )</b></codeblock>
<p>日付や時刻に<codeph>TIMESTAMPADD</codeph>を実行するには、日付や時刻をタイムスタンプに変換する必要があります。日付は時刻のフィールドに00:00:00.0を与えることでタイムスタンプに変換できます。時刻は現在日付を日付のフィールドに与えることで、タイムスタンプに変換できます。</p>
<p>WHERE節にて、タイムスタンプを計算する関数に日時の列を置くべきではありません。なぜならオプティマイザが、その列への索引を利用しなくなるからです。</p></dd>
</dlentry><dlentry>
<dt>TIMESTAMPDIFF</dt>
<dd><codeph>TIMESTAMPDIFF</codeph>関数により指定した時間の種類によるタイムスタンプの間の差を計算できます。例えば、関数により二つのタイムスタンプ間の分数を返すことができます。
<p><codeph>TIMESTAMPDIFF</codeph>はJDBCエスケープの関数で、JDBCエスケープ関数の構文でのみ利用できます。</p>
<codeblock><b>TIMESTAMPDIFF( <i>時間の種類</i>, <i>タイムスタンプ式1</i>, <i>タイムスタンプ式2</i> )</b></codeblock>
<p>日付や時刻に<codeph>TIMESTAMPDIFF</codeph>を実行するには、日付や時刻をタイムスタンプに変換する必要があります。日付は時刻のフィールドに00:00:00.0を与えることでタイムスタンプに変換できます。時刻は現在日付を日付のフィールドに与えることで、タイムスタンプに変換できます。</p>
<p>WHERE節にて、タイムスタンプを計算する関数に日時の列を置くべきではありません。なぜならオプティマイザが、その列への索引を利用しなくなるからです。</p></dd>
</dlentry></dl></refsyn>
<section><title>TIMESTAMPADD および TIMESTAMPDIFFに指定できる時間の種類</title>
<codeph>TIMESTAMPADD</codeph>および<codeph>TIMESTAMPDIFF</codeph>は、タイムスタンプへの算術演算を行うために使われます。これ等の関数は以下にあげる時間の種類を演算処理で利用できます。<ul>
<li>SQL_TSI_DAY</li>
<li>SQL_TSI_FRAC_SECOND</li>
<li>SQL_TSI_HOUR</li>
<li>SQL_TSI_MINUTE</li>
<li>SQL_TSI_MONTH</li>
<li>SQL_TSI_QUARTER</li>
<li>SQL_TSI_SECOND</li>
<li>SQL_TSI_WEEK</li>
<li>SQL_TSI_YEAR</li>
</ul></section>
<example><title>エスケープ関数のTIMESTAMPADDとTIMESTAMPDIFFを利用する例</title>
<p>次の書き方で、現在より一ヵ月後の値を返します。</p><codeblock><b>{fn TIMESTAMPADD( SQL_TSI_MONTH, 1, CURRENT_TIMESTAMP)}</b></codeblock>
<p>次の書き方で、現在と2008年1月1日の間が何週間かを返します。</p><codeblock><b>{fn TIMESTAMPDIFF(SQL_TSI_WEEK, CURRENT_TIMESTAMP, 
  timestamp('2008-01-01-12.00.00.000000'))}</b></codeblock></example>
</refbody>
</reference>
