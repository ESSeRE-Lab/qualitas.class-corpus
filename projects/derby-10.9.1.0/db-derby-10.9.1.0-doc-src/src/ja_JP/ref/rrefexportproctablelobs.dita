<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<reference id="rrefexportproclobs" xml:lang="ja">
<title>SYSCS_UTIL.SYSCS_EXPORT_TABLE_LOBS_TO_EXTFILE システム手続き</title>
<shortdesc><codeph>SYSCS_UTIL.SYSCS_EXPORT_TABLE_LOBS_TO_EXTFILE</codeph>システム手続きをつかって、表の全情報をエクスポートできます。このときLOBの情報は別ファイルにエクスポートして書かれます。LOBが書かれた場所への参照は、主となるエクスポートファイルのLOB列にあります。</shortdesc>
<prolog><metadata>
<keywords><indexterm>system procedures<indexterm>SYSCS_UTIL.SYSCS_EXPORT_TABLE_LOBS_TO_EXTFILE</indexterm></indexterm>
<indexterm>SYSCS_UTIL.SYSCS_EXPORT_TABLE_LOBS_TO_EXTFILE<indexterm>system
procedures</indexterm></indexterm></keywords>
</metadata></prolog>
<refbody>
<section>
<p>セキュリティへの配慮や意図しないファイルの破壊を避ける理由で、この手続きは既存のファイルへのエクスポートは行いません。手続きのファイル名には存在しないファイル名を指定する必要があります。手続きを実行するとファイルが作成され、そのファイルへ情報がエクスポートされます。</p>
<p>情報はデリミトされたファイル書式によりエクスポートされます。</p></section>
<section><title>構文</title> <codeblock>SYSCS_UTIL.SYSCS_EXPORT_TABLE_LOBS_TO_EXTFILE (
    IN SCHEMANAME VARCHAR(128), 
    IN TABLENAME VARCHAR(128), 
    IN FILENAME VARCHAR(32672), 
    IN COLUMNDELIMITER CHAR(1), 
    IN CHARACTERDELIMITER CHAR(1), 
    IN CODESET VARCHAR(128) 
    IN LOBSFILENAME VARCHAR(32672)
    ) </codeblock> 
<p>
この手続きを実行すると、列の情報は主となるエクスポートファイルにデリミトされたデータファイルの書式で書かれます。</p><dl><dlentry>
<dt>SCHEMANAME</dt>
<dd>表のスキーマを指定します。既定のスキーマ名を利用するため、NULLを指定することもできます。<parmname>SCHEMANAME</parmname>パラメータには、VARCHAR (128)データ型の引数を入力として与えます。</dd>
</dlentry><dlentry>
<dt>TABLENAME</dt>
<dd>情報をエクスポートする表やビューの名前を指定します。この表はシステム表や一時表であってはなりません。文字列は表名と大文字小文字が一致していなければなりません。<parmname>TABLENAME</parmname>パラメータには、VARCHAR (128)型の引数を入力に与えます。</dd>
</dlentry><dlentry>
<dt>FILENAME</dt>
<dd>
情報がエクスポートされる新規ファイルの名前を指定します。もしパスが省略されている場合、現在のディレクトリが使われます。もし既存ファイルの名前が指定された場合、エクスポート手続きはエラーを返します。
ネットワークサーバを利用している場合、指定するファイルの位置はサーバサイドでの位置です。NULLの値を指定するとエラーとなります。<parmname>FILENAME</parmname>パラメータには、VARCHAR (32672)データ型の引数を入力に与えます。</dd>
</dlentry><dlentry>
<dt>COLUMNDELIMITER</dt>
<dd>列のデリミタを指定します。指定された文字は列の終了を表すために、コンマに代わって使われます。既定値のコンマを使う場合、NULLを指定することができます。
<parmname>COLUMNDELIMITER</parmname>パラメータはCHAR (1)データ型でなければなりません。</dd>
</dlentry><dlentry>
<dt>CHARACTERDELIMITER</dt>
<dd>文字のデリミタを指定します。指定された文字は文字列を囲うために、二重引用符に代わって使われます。既定値の二重引用符を使う場合、NULLを指定することができます。
<parmname>CHARACTERDELIMITER</parmname>パラメータには、CHAR (1)データ型の引数を入力に与えます。</dd>
</dlentry><dlentry>
<dt>CODESET</dt>
<dd>エクスポートファイルの情報のコードセットを指定します。コードセットの名前はJavaにて利用可能な文字エンコードでなければなりません。ファイルに情報が書き出される前に、データベースのコードページから指定されたコードページへの情報の変換がおこなわれます。プログラムを実行しているJVMのコードページで情報を書き出す場合、NULLを指定することができます。<parmname>CODESET</parmname>パラメータには、VARCHAR (128)データ型の引数を入力に与えます。</dd>
</dlentry><dlentry>
<dt>LOBSFILENAME</dt>
<dd>ラージオブジェクトの情報が書き出されるファイルを指定します。もしパスが省略された場合、LOBファイルは主となるエクスポートファイルと同じディレクトリに作成されます。もし既存ファイルの名前が指定された場合、エクスポートユーティリティはファイルの内容を上書きします。情報がファイルに追加されることはありません。
ネットワークサーバを利用する場合、ファイルはサーバサイドでの位置である必要があります。
NULLを引数に与えるとエラーとなります。
<parmname>LOBSFILENAME</parmname>パラメータは、VARCHAR (32672)データ型の引数を入力に与えます。</dd>
</dlentry></dl>
<p>スキーマ、表、列名がデリミトされない識別子で作成されていた場合、エクスポートの手続きに渡す名前は全文字が大文字からなっている必要があります。
スキーマ、表、列名がデリミトされた識別子で作成されていた場合、エクスポートの手続きに渡す名前は作成した時の名前と大文字小文字が一致していなければなりません。</p></section>
<section><title>使い方</title>
<p>この手続きの使い方について追加の情報が、<ph conref="../conrefs.dita#pub/citutilities"></ph>の「バルクインポートとエクスポートの手続きを使う」にあります。</p></section>
<section><title>表の全情報をLOBの情報を別ファイルに分けてエクスポートする例</title>
<p>以下の例にて、サンプルデータベースにあるSTAFF表から、<codeph>staff.del</codeph>という主ファイルと<codeph>pictures.dat</codeph>というLOBエクスポートファイルに、情報をエクスポートする方法を示します。</p><codeblock>CALL SYSCS_UTIL.SYSCS_EXPORT_TABLE_LOBS_TO_EXTFILE(
    'APP', 'STAFF', 'c:＼data＼staff.del', ',' ,'"', 
    'UTF-8', 'c:＼data＼pictures.dat'); </codeblock></section>
</refbody>
</reference>