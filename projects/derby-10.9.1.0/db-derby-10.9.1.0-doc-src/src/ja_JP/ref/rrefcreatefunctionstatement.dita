<?xml version="1.0" encoding="utf-8"?>
 
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<reference id="rrefcreatefunctionstatement" xml:lang="ja">
<title>CREATE FUNCTION 文</title>
<shortdesc>CREATE FUNCTION文により、式で利用できるJava関数を作成できます。</shortdesc>
<prolog><metadata>
<keywords><indexterm>CREATE FUNCTION statement</indexterm><indexterm><indexterm>SQL
statements</indexterm>CREATE FUNCTION</indexterm><indexterm>functions<indexterm>creating</indexterm></indexterm>
</keywords>
</metadata></prolog>
<refbody>
<section><p>関数の所有者および、<xref href="rrefattrib26867.dita#rrefattrib26867">データベースの所有者</xref>は、自動的に関数へのEXECUTE権限を手に入れます。加えて、他のユーザへの権限付与の権限も手に入れます。関数とデータベースの所有者から、関数の実行権限を剥奪することはできません。</p></section>
<refsyn><title>構文</title> <codeblock><b>CREATE FUNCTION <i><xref href="rrefcreatefunctionstatement.dita#rrefcreatefunctionstatement/rrefcrprofunctionname"
>関数名</xref></i> ( [ <xref href="rrefcreatefunctionstatement.dita#rrefcreatefunctionstatement/rrefcrprofunctionparameter">関数の引数</xref
> 
   [, <xref href="rrefcreatefunctionstatement.dita#rrefcreatefunctionstatement/rrefcrprofunctionparameter">FunctionParameter</xref>] ] * ) RETURNS <xref href="rrefcreatefunctionstatement.dita#rrefcreatefunctionstatement/rrefcrfunctionreturntype">返却データ型</xref> [ <xref
href="rrefcreatefunctionstatement.dita#rrefcreatefunctionstatement/rrefcrprofunctionelement">関数の要素</xref> ] *</b></codeblock></refsyn>
<example id="rrefcrprofunctionname"><title>関数名</title><codeblock><b>[ <i><xref
href="rrefschemaname.dita#rrefschemaname">スキーマ名</xref>.</i> ] <i><xref
href="crefsqlj34834.dita#crefsqlj34834">SQL92識別子</xref></i></b></codeblock>
<p>スキーマ名が与えられなかった場合、デフォルトは現在のスキーマとなります。限定された関数名にて、スキーマ名はSYSで始まってはなりません。</p></example>
<example id="rrefcrprofunctionparameter"><title>関数の引数</title><codeblock><b>[ 引数名 ] <i>データ型</i></b></codeblock></example>
<section><p>引数名は関数にて一意である必要があります。</p><p><i>データ型</i>の構文は、<xref href="crefsqlj31068.dita#crefsqlj31068"></xref>に書かれています。</p>
<note>CREATE FUNCTION文のパラメータにできないデータ型があります。それは、BLOB、CLOB、LONG VARCHAR、LONG VARCHAR FOR BIT DATAやXML等です。</note></section>

<example id="rrefcrfunctionreturntype"><title>返却データ型</title>
<codeblock><b><xref href="rrefcreatefunctionstatement.dita#rrefcreatefunctionstatement/rrefcrfunctiontabletype">表型</xref> | <i>データ型</i></b></codeblock></example>
<section><p>データ型の構文は<xref href="crefsqlj31068.dita#crefsqlj31068"></xref>に記述されています。</p></section>

<example id="rrefcrfunctiontabletype"><title>表型</title>
<codeblock><b>TABLE( <xref href="rrefcreatefunctionstatement.dita#rrefcreatefunctionstatement/rrefcrfunctioncolelement">列要素</xref> [, <xref href="rrefcreatefunctionstatement.dita#rrefcreatefunctionstatement/rrefcrfunctioncolelement">列要素</xref> ]* )</b></codeblock></example>
<section><p>表関数の返り値の型です。現在利用できるのはDerbyの表関数の形式のみです。
これらはJDBCの<i>ResultSet</i>を返す関数です。
より詳細な情報は、<cite><ph conref="../conrefs.dita#pub/citdevelop"></ph></cite>に記述された「Derbyの表関数のプログラミング」を参照してください。</p></section>

<example id="rrefcrfunctioncolelement"><title>列要素</title>
<codeblock><b><i><xref href="crefsqlj34834.dita#crefsqlj34834">SQL92識別子</xref></i> <i>データ型</i></b></codeblock></example>
<section><p><i>データ型</i>の構文は、<xref href="crefsqlj31068.dita#crefsqlj31068"></xref>に記述されています。</p>
<note>表関数から返却する情報の列の型を、XMLとすることはできません。</note></section>

<example id="rrefcrprofunctionelement"> <title>関数の要素</title><codeblock><b> {
| LANGUAGE { JAVA }
| EXTERNAL NAME <i>文字列</i>
| PARAMETER STYLE <xref href="rrefcreatefunctionstatement.dita#rrefcreatefunctionstatement/rrefcrfunctionparameterstyle">パラメータの種類</xref>
| { NO SQL | CONTAINS SQL | READS SQL DATA }
| { RETURNS NULL ON NULL INPUT | CALLED ON NULL INPUT }
 }</b></codeblock></example>
<section><title>LANGUAGE</title><p><b>JAVA</b>- 関数はJavaのクラスにあるpublic staticなメソッドとして呼ばれます。</p></section>
<section><title>EXTERNAL NAME <i>string</i></title><p><i>文字列</i>により、関数が実行されたときに呼ばれるJavaのメソッドが記述されます。この文字列は次の書式です。<codeblock>クラス名.メソッド名</codeblock>これは空白を含んではなりません。</p></section>

<example id="rrefcrfunctionparameterstyle"><title>パラメータの種類</title>
<codeblock><b>JAVA | DERBY_JDBC_RESULT_SET</b></codeblock></example>
<section>
<p>
関数はJava言語およびSQLルーチンの仕様に沿って、引数を値渡しします。INOUTとOUTの引数は変更後の値を返せるように、要素がひとつの配列として渡されます。さらに結果セットはJavaのメソッドのパラメータを経て、配列に渡したjava.sql.ResultSet[]型の要素により返すことができます。</p><p><ph conref="../conrefs.dita#prod/productshortname"></ph> は長い列の型(これは例えばLong VarcharやBLOB等のことです。)をサポートしません。
これらの長い列の型を使おうとすると、エラーが発生します。</p>
<p>Derbyの表関数の場合、PARAMETER STYLEは常にDERBY_JDBC_RESULT_SETで、これ以外の値とすることはできません。表関数とは<xref href="rrefcreatefunctionstatement.dita#rrefcreatefunctionstatement/rrefcrfunctiontabletype">表型</xref>を返す関数で、JDBCの<i>ResultSet</i>を返すメソッドに対応します。
それ以外の場合は、PARAMETER STYLEは常にJAVAです。
</p>
</section>
<section><title>NO SQL, CONTAINS SQL, READS SQL DATA</title> <p>により関数がSQLを発行するか否か。もしするならどのようなSQLを発行するかを記述します。</p> <dl>
<dlentry>
<dt>CONTAINS SQL</dt>
<dd>関数により変更も更新も行わないSQL文を実行できます。
関数にて許可されていない文が実行された場合、違うというエラーが返ります。</dd>
</dlentry><dlentry>
<dt>NO SQL</dt>
<dd>関数はSQLを実行できません。</dd>
</dlentry><dlentry>
<dt>READS SQL DATA </dt>
<dd>関数は情報の更新を行わないSQLを実行することができます。
関数にて許可されていない文が実行された場合、違うというエラーが返ります。
これは既定です。</dd>
</dlentry></dl></section>
<section><title>RETURNS NULL ON NULL INPUT or CALLED ON NULL INPUT</title>
<p>入力の引数をnullにして関数が呼ばれるかをあらわします。その場合はnull値と扱います。<dl><dlentry>
<dt>RETURNS NULL ON NULL INPUT</dt>
<dd>入力の引数のうちいずれかがnullであった場合、関数は呼ばれません。そのときの帰り値はnullとなります。</dd>
</dlentry><dlentry>
<dt>CALLED ON NULL INPUT</dt>
<dd>関数は入力の引数をnullにして呼ぶことができます。この場合は関数がnullの引数をとっても動作するようにコーディングされていなければなりません。関数はnullあるいはそれ以外の値を返すことができます。これは既定です。</dd>
</dlentry></dl></p></section>
<section><p>関数の要素はどのような順序で現れてもかまいませんが、それぞれの要素は一回しか現れてはなりません。関数の定義にはこれらの要素が必要です。<ul>
<li><b>LANGUAGE</b></li>
<li><b>PARAMETER STYLE</b></li>
<li><b>EXTERNAL NAME</b></li>
</ul></p></section>
<section><title>Example</title><codeblock><b>CREATE FUNCTION TO_DEGREES(RADIANS DOUBLE) RETURNS DOUBLE
PARAMETER STYLE JAVA NO SQL LANGUAGE JAVA
EXTERNAL NAME 'java.lang.Math.toDegrees'</b></codeblock></section>
</refbody>
</reference>
