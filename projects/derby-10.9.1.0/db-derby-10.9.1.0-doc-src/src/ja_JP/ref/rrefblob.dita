<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "reference.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<reference id="rrefblob" xml:lang="ja">
<title>BLOBデータ型</title>
<prolog><metadata>
<keywords><indexterm>BLOB data type</indexterm></keywords>
</metadata></prolog>
<refbody>
<section> <p>BLOB(バイナリラージオブジェクト)は、最大2,147,483,647文字からなる可変長のバイナリ列です。他のバイナリの型と同様にBLOBの列には関連づくコードページがありません。さらにBLOBの列は文字の情報を持ちません。</p>
<p>BLOBの長さはバイトで指定します。また長さには、1024、1024*1024、1024*1024*1024を表す、K、MやGのうち何れかのサフィックスを指定することが可能です。</p>
<note>BLOBに対してLengthはバイト数で指定されます。</note></section>
<refsyn><title>構文</title><codeblock><b>
{ BLOB | BINARY LARGE OBJECT } [ ( <i>length</i> [{K |M |G }] ) ]
</b></codeblock> </refsyn>
<section><title>既定の設定</title>
<p>既定でBLOBの長さは2GB(2,147,483,647)です。</p> </section>
<section><title>コンパイル時の対応するJavaの型</title><p><i>java.sql.Blob</i></p> </section>
<section><title>JDBCのメタデータ型</title><p>BLOB</p>
<p>格納された情報を扱うためBLOBのハンドルを取得するには、<i>java.sql.ResultSet</i>の<i>getBlob</i>メソッドを使います。</p>
</section>
<section><title>関連する情報</title>
<p><xref href="rrefjdbc96386.dita#rrefjdbc96386"></xref>も参照してください。</p> </section>
<example> <codeblock><ph>create table pictures(name varchar(32) not null primary key, pic blob(16M));
</ph>
--あらゆるロゴの画像を見つける。
select length(pic), name from pictures where name like '%logo%';
--重複した画像を見つける(blobの比較)
select a.name as double_one, b.name as double_two
from pictures as a, pictures as b
where a.name &lt; b.name
and a.pic = b.pic
order by 1,2;</codeblock> </example>
</refbody>
</reference>
