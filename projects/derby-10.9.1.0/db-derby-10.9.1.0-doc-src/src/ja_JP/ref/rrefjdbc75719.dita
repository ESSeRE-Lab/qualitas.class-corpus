<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<reference id="rrefjdbc75719" xml:lang="ja">
<title>CallableStatementsとINOUT引数</title>
<prolog><metadata>
<keywords><indexterm>java.sql.CallableStatement<indexterm>and INOUT parameters</indexterm></indexterm>
</keywords>
</metadata></prolog>
<refbody>
<section><p>Javaのプログラムでは、INOUT引数に対して引数の型を要素とする<i>配列</i>が対応します。(メソッドは配列を引数としてとらなければなりません。)
この対応関係はSQL標準の推奨に沿ったものです。</p></section>
<section><p>次の例を考えます。:   <codeblock expanse="column"><b>CallableStatement call = conn.prepareCall(
    "{CALL doubleMyInt(?)}");
<ph>// 値を代入する前に引数を登録する事が、
// inout引数では良いやり方です。</ph>
call.registerOutParameter(1, Types.INTEGER);
call.setInt(1,10);
call.execute();
int retval = call.getInt(1);</b></codeblock></p></section>
<section><p>メソッドの<i>doubleIt</i>は一次元の<codeph>int</codeph>配列を取るべきです。メソッドのソースコードを次に例示します。   <codeblock
expanse="column"><b>public static void doubleMyInt(int[] i) {
    i[0] *=2;
    <ph>/* <ph conref="../conrefs.dita#prod/productshortname"></ph>は配列の最初の要素を返します。*/</ph>
}</b></codeblock> <note>メソッドの引数と違って、返り値は配列では<i>ありません</i>。</note> <table frame="all"><title>INOUTの引数型の対応</title>
<tgroup cols="3" colsep="1" rowsep="1"><colspec colname="1" colnum="1" colwidth="39*"/>
<colspec colname="2" colnum="2" colwidth="27*"/><colspec colname="3" colnum="3"
colwidth="33*"/>
<thead>
<row>
<entry align="left" colname="1" valign="bottom">JDBCの型</entry>
<entry align="left" colname="2" valign="bottom">メソッドの引数の配列型</entry>
<entry align="left" colname="3" valign="bottom">値と返り値の型</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="1">BIGINT</entry>
<entry colname="2">long[]</entry>
<entry colname="3">long</entry>
</row>
<row>
<entry colname="1">BINARY</entry>
<entry colname="2">byte[][]</entry>
<entry colname="3">byte[]</entry>
</row>
<row>
<entry colname="1">BIT</entry>
<entry colname="2">boolean[]</entry>
<entry colname="3">boolean</entry>
</row>
<row>
<entry colname="1">DATE</entry>
<entry colname="2"><i>java.sql.Date[]</i></entry>
<entry colname="3"><i>java.sql.Date</i></entry>
</row>
<row>
<entry colname="1">DOUBLE</entry>
<entry colname="2">double[]</entry>
<entry colname="3">double</entry>
</row>
<row>
<entry colname="1">FLOAT</entry>
<entry colname="2">double[]</entry>
<entry colname="3">double</entry>
</row>
<row>
<entry colname="1">INTEGER</entry>
<entry colname="2">int[]</entry>
<entry colname="3">int</entry>
</row>
<row>
<entry colname="1">LONGVARBINARY</entry>
<entry colname="2">byte[][]</entry>
<entry colname="3">byte[]</entry>
</row>
<row>
<entry colname="1">REAL</entry>
<entry colname="2">float[]</entry>
<entry colname="3">float</entry>
</row>
<row>
<entry colname="1">SMALLINT</entry>
<entry colname="2">short[]</entry>
<entry colname="3">short</entry>
</row>
<row>
<entry colname="1">TIME</entry>
<entry colname="2"><i>java.sql.Time[]</i></entry>
<entry colname="3"><i>java.sql.Time</i></entry>
</row>
<row>
<entry colname="1">TIMESTAMP</entry>
<entry colname="2"><i>java.sql.Timestamp[]</i></entry>
<entry colname="3"><i>java.sql.Timestamp</i></entry>
</row>
<row>
<entry colname="1">VARBINARY</entry>
<entry colname="2">byte[][]</entry>
<entry colname="3">byte[]</entry>
</row>
<row>
<entry colname="1">OTHER</entry>
<entry colname="2"><i>yourType[]</i></entry>
<entry colname="3"><i>yourType</i></entry>
</row>
<row>
<entry colname="1">JAVA_OBJECT (Java2/JDBC 2.0の環境でのみ有効)</entry>
<entry colname="2"><i>yourType[]</i></entry>
<entry colname="3"><i>yourType</i></entry>
</row>
</tbody>
</tgroup>
</table></p></section>
<section><p>呼び出し前に出力の引数を登録してください。INOUTの引数では、値を代入する前に出力の引数を登録するのが良いやり方です。</p></section>
</refbody>
</reference>

