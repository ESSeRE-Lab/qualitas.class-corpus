<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="crefjavstateautogen" xml:lang="ja">
<title>Autogenerated keys</title>
<prolog><metadata>
<keywords><indexterm>autogenerated keys</indexterm></keywords>
</metadata></prolog>
<conbody>
<p></p>
<p>JDBC 3.0のキー自動生成に関する機能により、索引の一部あるいは既定値の割り当てられた列から値を取得する方法があります。
<ph conref="../conrefs.dita#prod/productshortname"></ph>には自動増分の機能があって、この機能により、データベースにより自動的に増分された値をとる列を、ユーザは表に定義することができます。
JDBC 3.0では<i>Statement.getGeneratedKeys</i>メソッドを呼んでこの種類の列の値を取得することができます。このメソッドは値に自動生成キーをとる列を持つ<i>ResultSet</i>を返します。
また<i>getGeneratedKeys</i>から返された<i>ResultSet</i>オブジェクトにて<i>ResultSet.getMetaData</i>メソッドを呼んで、<xref href="rrefidentityvallocal.dita#rrefidentityvallocal">IDENTITY_VAL_LOCAL</xref>から返るのと同様な<i>ResultSetMetaData</i>オブジェクトを得ることもできます。</p>

<p> ユーザは<i>Connection.prepareStatement</i>メソッドや、<i>Statement.execute</i>メソッド、<i>Statement.executeUpdate</i>メソッドの二つ目の引数に、以下に示すいずれかの値を渡すことで、自動生成された列を取得できます。</p>
<ul>
<li>自動生成されたキーを取得できるようにする定数。具体的には<codeph>Statement.RETURN_GENERATED_KEYS</codeph>です。</li>
<li>挿入する行の列の内、取得できるようにする列名の配列。配列にある列名のいずれも自動生成される列で無ければ、<ph conref="../conrefs.dita#prod/productshortname"></ph> は例外を挙げます。(なおこの引数は、<ph conref="../conrefs.dita#prod/productshortname"></ph>では組み込みドライバでのみ利用可能です。) </li>
<li>挿入する行の列の内、取得できるようにする列位置の配列。配列のいずれも自動生成される列で<i>なければ</i>、<ph conref="../conrefs.dita#prod/productshortname"></ph>は例外を挙げます。(この引数は<ph conref="../conrefs.dita#prod/productshortname"></ph>では組み込みドライバでのみ利用可能です。) </li>
</ul>
<section><title>例</title> 
<p>以下のように定義されたTABLE1という表があるとします。</p> 
<codeblock>CREATE TABLE TABLE1 (C11 int, C12 int GENERATED ALWAYS AS IDENTITY)
</codeblock> 
<p>以下の三つのコードは同じことを行います。すなわち、TABLE1に挿入された<codeph>C12</codeph> の値を持つ、<i>ResultSet</i>を生成します。
</p> 
<p>コード 1:</p> <codeblock>
Statement stmt = conn.createStatement(); 
stmt.execute(
    "INSERT INTO TABLE1 (C11) VALUES (1)",
    Statement.RETURN_GENERATED_KEYS);
ResultSet rs = stmt.getGeneratedKeys();
</codeblock> 
<p>コード 2:</p> <codeblock>
Statement stmt = conn.createStatement(); 
String [] colNames = new String [] { "C12" };
stmt.execute(
    "INSERT INTO TABLE1 (C11) VALUES (1)",
    colNames);
ResultSet rs = stmt.getGeneratedKeys();
</codeblock> 
<p>コード 3:</p> <codeblock>
Statement stmt = conn.createStatement(); 
int [] colIndexes = new int [] { 2 };
stmt.execute(
    "INSERT INTO TABLE1 (C11) VALUES (1)",
    colIndexes);
ResultSet rs = stmt.getGeneratedKeys();
</codeblock> 
<p>もし自動生成された列を取得できるようにする指定がなければ、
<i>Statement.getGeneratedKeys</i>への呼び出しはnullの<i>ResultSet</i>を返します。</p> </section>

</conbody>
</concept>

