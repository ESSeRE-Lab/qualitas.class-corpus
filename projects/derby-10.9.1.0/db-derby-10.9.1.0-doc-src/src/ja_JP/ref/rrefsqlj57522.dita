<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "reference.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<reference id="rrefsqlj57522" xml:lang="ja">
<title>RIGHT OUTER JOIN 演算</title>
<prolog><metadata>
<keywords><indexterm>RIGHT OUTER JOIN operation</indexterm></keywords>
</metadata></prolog>
<refbody>
<section> <p>RIGHT OUTER JOIN演算は、JOIN節に置くことのできる<xref href="rrefsqlj29840.dita#rrefsqlj29840">JOIN演算</xref>の一種です。
この式では、一つ目(左)の表に合う行がない二つ目(右)の表にある行も結果に残ります。そのとき一つ目の表からの情報はNULLと扱われます。A LEFT OUTER JOIN B は B RIGHT OUTER JOIN Aと、列の順が違う事を除けば同じです。</p></section>
<refsyn><title>構文</title><codeblock><b><i><xref href="rreftableexpression.dita#rreftableexpression">表式</xref></i> RIGHT [ OUTER ] JOIN <i
><xref href="rreftableexpression.dita#rreftableexpression">表式</xref></i>
{
    ON <i>真偽式</i> 
    }</b></codeblock>
<p>ON節にて可視なのは、直接の表と直接のSELECTによる問合せにある表です。
ON節では結合されていない表を参照することもできますし、結合している表を参照しなくともかまいません。(ただし一般的には参照します。)</p> </refsyn>
<example> <title>例1</title><codeblock>
<b>-- 都市のない国を含めた、
-- 全ての国と都市の一覧を得ます。
</b>
SELECT COUNTRIES.COUNTRY, CITIES.CITY_NAME 
FROM CITIES 
RIGHT OUTER JOIN COUNTRIES 
ON CITIES.COUNTRY_ISO_CODE = COUNTRIES.COUNTRY_ISO_CODE

<b>-- 都市のない国を含めた、
-- アフリカの全ての国と都市の一覧を得ます。
</b>
SELECT COUNTRIES.COUNTRY, CITIES.CITY_NAME
FROM CITIES 
RIGHT OUTER JOIN COUNTRIES 
ON CITIES.COUNTRY_ISO_CODE = COUNTRIES.COUNTRY_ISO_CODE
WHERE Countries.region = 'Africa'

<b>-- RIGHT JOINという同じ内容の記述により、
-- 前の例と同じ結果を得ます。</b>
SELECT COUNTRIES.COUNTRY, CITIES.CITY_NAME
FROM CITIES 
RIGHT JOIN COUNTRIES 
ON CITIES.COUNTRY_ISO_CODE = COUNTRIES.COUNTRY_ISO_CODE
WHERE Countries.region = 'Africa'
</codeblock> </example>
<example><title>例2</title><codeblock><b>-- 演算は表式の一つです。
-- なのでFRON句には複数の演算を置くことができます。
-- 以下の例では全社員の社員番号と苗字を、
-- その社員の管理者の社員番号と苗字と共に一覧します。
</b>
SELECT E.EMPNO, E.LASTNAME, M.EMPNO, M.LASTNAME	
	FROM EMPLOYEE E RIGHT OUTER JOIN	
	DEPARTMENT RIGHT OUTER JOIN EMPLOYEE M 
        ON MGRNO = M.EMPNO
        ON E.WORKDEPT = DEPTNO</codeblock></example>
</refbody>
</reference>
