<?xml version="1.0" encoding="utf-8"?>
 
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<reference id="rrefbuiltchar" xml:lang="ja">
<title>CHAR 関数</title>
<shortdesc>CHAR関数により固定長の文字列への変換値が返されます。</shortdesc>
<prolog><metadata>
<keywords><indexterm>CHAR関数</indexterm></keywords>
</metadata></prolog>
<refbody>
<section>行われる変換は以下のとおりです。<ul>
<li>文字列変換 一つ目の引数が文字列である場合です。</li>
<li>日時変換 一つ目の引数が日付、時刻、タイムスタンプである場合です。</li>
<li>小数変換 一つ目の引数が小数である場合です。</li>
<li>倍精度浮動小数点数変換 一つ目の引数がDOUBLEあるいはREALである場合です。</li>
<li>整数変換 一つ目の引数がSMALLINT、INTEGER、BIGINTである場合です。</li>
</ul>
一つ目の引数は、その型が組込みのデータ型である必要があります。CHAR関数の返り値は固定長の文字列です。一つ目の引数はNULLとすることができ、その場合は返り値はNULLです。一つ目の引数は、その型がXMLであってはなりません。もしXMLの値を固定長のCHARにしたいのなら、SQL/XML直列化演算子のXMLSERIALIZEを使う必要があります。</section>
<section><title>文字から文字への変換を行う時の書き方</title> <codeblock><b>CHAR (<i>文字式</i> [, <i>数</i>] ) </b></codeblock> <dl>
<dlentry>
<dt>文字式</dt>
<dd>CHAR、VARCHAR、LONG VARCHAR、CLOBのいずれかのデータ型の値を返す式。</dd>
</dlentry><dlentry>
<dt>数</dt>
<dd>返却される固定長文字列の長さ。値は0から254の間でなければならない。</dd>
</dlentry></dl> <p>もし文字式の長さが数よりも小さかった場合、長さが数と等しくなるよう、関数の結果は空白によりつめられます。もし文字式の長さが数より大きかった場合、切捨てが行われます。もし空白以外の文字が切り捨てられ、文字式が長い文字列(LONG VARCHARやCLOB)でなければ、警告が返されます。</p> </section>
<section><title>整数から文字への変換を行うときの書き方</title> <codeblock><b>CHAR (<i>整数式</i> ) </b></codeblock> <dl>
<dlentry>
<dt>整数式</dt>
<dd>整数のデータ型(SMALLINT、INTEGER、BIGINT)型の値を返す式</dd>
</dlentry></dl> <p>関数の結果は、SQLの整数として渡された引数を文字列で表現したものとなります。結果は引数の数を10進で表すn文字および、もし引数が負数であったなら負の符号から構成されます。また結果は左詰めされています。</p> <ul>
<li>もし一つ目の引数がSMALLINTなら、結果の文字列の長さは6です。もし結果にて数値の文字数が6に満たない場合は、6文字となるよう右側に空白が詰められます。</li>
<li>もし一つ目の引数がINTEGERなら、結果の文字列の長さは11です。もし結果にて数値の文字数が11に満たない場合は、11文字となるよう右側に空白が詰められます。</li>
<li>もし一つ目の引数がBIGINTなら、結果の文字列の長さは20です。もし結果にて数値の文字数が20に満たない場合は、20文字となるよう右側に空白が詰められます。</li>
</ul> </section>
<section><title>日時から文字への変換を行うときの書き方</title> <codeblock><b>CHAR (<i>日時式</i> ) </b></codeblock> <dl>
<dlentry>
<dt>日時式</dt>
<dd>式は次のデータ型の何れかです。<ul>
<li><b>日付</b>: 結果は日付を表す文字表現です。結果の長さは10です。</li>
<li><b>時刻</b>: 結果は時刻を表す文字表現です。結果の長さは8です。</li>
<li><b>タイムスタンプ</b>: 結果はタイムスタンプを表す文字表現です。結果の長さは26です。</li>
</ul></dd>
</dlentry></dl> </section>
<section><title>小数から文字への変換を行うときの書き方</title> <codeblock><b>CHAR (<i>小数式</i> ) </b></codeblock> <dl>
<dlentry>
<dt>小数式</dt>
<dd>小数のデータ型を返す式です。もし精度や目盛りの変更を行う場合は、文字への変換を行う前にDECIMALというスカラー関数により変更してください。</dd>
</dlentry></dl> </section>
<section><title>浮動小数点数から文字への変換を行うときの書き方</title> <codeblock><b>CHAR (<i>浮動小数点数式</i> ) </b></codeblock> <dl>
<dlentry>
<dt>浮動小数点数式</dt>
<dd>浮動小数点数のデータ型(DOUBLEやREAL)の値を返す式です。</dd>
</dlentry></dl> </section>
<example> <p>CHAR関数によりEDLEVEL(smallint型と定義されているとします。)の値を、固定長の文字列として返します。<codeblock><b>SELECT CHAR</b>(EDLEVEL) <b>FROM</b> EMPLOYEE</codeblock>
EDLEVELが18とするなら、その値がCHAR(6)型で'18&nbsp;&nbsp;&nbsp;&nbsp;'と返されます。(18に空白が4つ続きます。)</p> </example>
</refbody>
</reference>
