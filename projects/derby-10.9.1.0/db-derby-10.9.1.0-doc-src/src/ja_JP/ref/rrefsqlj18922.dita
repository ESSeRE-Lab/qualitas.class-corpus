<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "reference.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<reference id="rrefsqlj18922" xml:lang="ja">
<title>LEFT OUTER JOIN演算</title>
<prolog><metadata>
<keywords><indexterm>LEFT OUTER JOIN operation</indexterm></keywords>
</metadata></prolog>
<refbody>
<section> 
<p>LEFT OUTER JOIN演算は、join節を記述できる<xref href="rrefsqlj29840.dita#rrefsqlj29840">JOIN演算</xref>の一つです。
この演算では最初の(左の)表にて、一致する行が二つ目の(右の)表にない行は、二つ目の表のNULLの行に結合されたものとして、結果に残ります。</p></section>
<refsyn><title>構文</title>
<codeblock>
<b><i><xref href="rreftableexpression.dita#rreftableexpression">表式</xref></i> LEFT [ OUTER ] JOIN <i
><xref href="rreftableexpression.dita#rreftableexpression">表式</xref></i>
{
    ON <i>真偽式</i> 
    }</b></codeblock>
<p>ON節にあるいずれの真偽式も、直接の表と直接の問い合わせ文にあるいかなる表を参照することができます。
ON節は結合されていない表を参照することもできますし、結合されている表を参照しなくともかまいません。(ただし一般的には参照します。)</p> </refsyn>
<example><title>例 1</title><codeblock><b>--都市に対応するアジアの国</b>

SELECT CITIES.COUNTRY, CITIES.CITY_NAME, REGION 
FROM Countries 
LEFT OUTER JOIN Cities
ON CITIES.COUNTRY_ISO_CODE = COUNTRIES.COUNTRY_ISO_CODE
WHERE REGION = 'Asia'

<b>-- LEFT JOINという別の書き方により、前例と同じ結果を
-- 実現する。
</b>
SELECT  COUNTRIES.COUNTRY, CITIES.CITY_NAME,REGION 
FROM COUNTRIES 
LEFT JOIN CITIES 
ON CITIES.COUNTRY_ISO_CODE = COUNTRIES.COUNTRY_ISO_CODE
WHERE REGION = 'Asia'
</codeblock></example>
<example><title>例 2</title><codeblock><b>
-- EMPLOYEEとDEPAETMENTという表を結合して、
-- 1930より前に生まれた(BIRTHDATE)全ての社員の、
-- 社員番号(EMPNO)と、
-- 社員の苗字(LASTNAME)と、
-- 部署番号(EMPLOYEEという表のWORKDEPTと、DEPARTMENTという表のDEPTNO)と、
-- 部署名(DEPTNAME)を選択する。
</b>
SELECT EMPNO, LASTNAME, WORKDEPT, DEPTNAME 
   FROM SAMP.EMPLOYEE LEFT OUTER JOIN SAMP.DEPARTMENT 
   ON WORKDEPT = DEPTNO 
   AND YEAR(BIRTHDATE) &lt; 1930

<b>-- 管理者のいない部署を含め全ての部署を、
-- 部署の管理者の社員番号と苗字と共に一覧する。
</b>
SELECT DEPTNO, DEPTNAME, EMPNO, LASTNAME
      FROM DEPARTMENT LEFT OUTER JOIN EMPLOYEE
	    ON MGRNO = EMPNO</codeblock> </example>
</refbody>
</reference>
