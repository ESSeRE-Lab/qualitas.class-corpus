<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<reference id="rrefidentityvallocal" xml:lang="ja">
<title>IDENTITY_VAL_LOCAL関数</title>
<refbody>
<section><p><ph conref="../conrefs.dita#prod/productshortname"></ph> はIDENTITY_VAL_LOCAL関数をサポートします。</p></section>
<section><p><b>構文:</b> <codeblock> IDENTITY_VAL_LOCAL ( )</codeblock></p></section>
<section><p>IDENTITY_VAL_LOCAL関数は非決定性の関数で、最近その接続でVALUES節のあるINSERT文により識別列へ代入された値を返します。</p></section>
<section><p>IDENTITY_VAL_LOCAL関数には引数はありません。関数の結果は対応する識別列のデータ型によらずDECIMAL (31,0)です。</p></section>
<section><p>IDENTITY_VAL_LOCAL関数により、ある接続に返される値は、単行のINSERT文で識別列に代入された最近の値です。INSERT文は識別列を持つ表へのVALUES節を持たなければなりません。
代入された値は<ph conref="../conrefs.dita#prod/productshortname"></ph>が生成した識別値です。
もし識別列を持つ表に対して単行のINSERT文が発行されていないなら、この関数はnullを返します。
</p></section>
<section><p>この関数の結果は以下の事柄に影響を受けません。
 <ul>
<li>識別列のないVALUES節を持つ単行のINSERT文</li>
<li>VALUES節を持つ複数行のINSERT文</li>
<li>selectによるINSERT文</li>
</ul></p>もし識別列を持つ表にINSERTトリガが定義されており、そのトリガが別の識別列を持つ表への挿入を行う場合、IDENTITY_VAL_LOCAL()関数は文で生成された値を返し、トリガによる値を返しません。</section>
<section><p><b>例:</b></p></section>
<example> <codeblock>ij&gt; create table t1(c1 int generated always as identity, c2 int);
0 rows inserted/updated/deleted
ij&gt; insert into t1(c2) values (8);
1 row inserted/updated/deleted
ij&gt; values IDENTITY_VAL_LOCAL();
1 
-------------------------------
1                              
1 row selected
ij&gt; select IDENTITY_VAL_LOCAL()+1, IDENTITY_VAL_LOCAL()-1 from t1;
1                                |2                          
-------------------------------------------------------------------
2                                |0                                
1 row selected
ij&gt; insert into t1(c2) values (IDENTITY_VAL_LOCAL());
1 row inserted/updated/deleted
ij&gt; select * from t1;
C1             |C2             
-------------------------------
1              |8              
2              |1              
2 rows selected
ij&gt; values IDENTITY_VAL_LOCAL();
1                        
-------------------------------
2                              
1 row selected
ij&gt; insert into t1(c2) values (8), (9);
2 rows inserted/updated/deleted
ij&gt; -- 複数の値の挿入では、関数が返す値は変わらない。
values IDENTITY_VAL_LOCAL();
1                        
-------------------------------
2                              
1 row selected
ij&gt; select * from t1;
C1             |C2             
-------------------------------
1              |8              
2              |1              
3              |8              
4              |9              
4 rows selected
ij&gt; insert into t1(c2) select c1 from t1;
4 rows inserted/updated/deleted
-- selectを元にした挿入では、関数が返す値は変わらない。
ij&gt; values IDENTITY_VAL_LOCAL();
1                        
-------------------------------
2                              
1 row selected
ij&gt; select * from t1;
C1             |C2             
-------------------------------
1              |8              
2              |1              
3              |8              
4              |9              
5              |1              
6              |2              
7              |3              
8              |4              
8 rows selected         </codeblock></example>
</refbody>
</reference>
