<?xml version="1.0" encoding="utf-8"?>
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->

<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<concept id="crefjavsavesetroll" xml:lang="ja">
<title>設定したセーブポイントへのロールバック</title>
<prolog><metadata>
<keywords><indexterm>Savepoints<indexterm>setting and rolling
back to</indexterm></indexterm></keywords>
</metadata></prolog>
<conbody>
<p>JDBC 3.0のAPIには、<i>Connection.setSavepoint</i>メソッドが新たに用意されています。このメソッドは現在のトランザクションにセーブポイントを設定します。
 <i>Connection.rollback</i>メソッドはセーブポイントを引数に取れるよう、オーバーロードされています。より詳細な情報は<i><xref href="rrefjdbcjavasqlconnection30.dita#rrefjdbcjavasqlconnection30"></xref></i>を参照してください。</p>
<p>以下に例示するコードでは、表に行を挿入して<codeph>svpt1</codeph>というセーブポイントを設定し、さらに二つ目の行を挿入します。トランザクションが<codeph>svpt1</codeph>へロールバックされると、二つ目の挿入は取り消されますが最初の挿入は損なわれません。別の表現をすれば、トランザクションをコミットすると、'1'のを持つ行だけがTABLE1に追加されます。
<codeblock expanse="column"><b>conn.setAutoCommit(false); // セーブポイントを使うためには自動コミットを切らなければなりません。
Statement stmt = conn.createStatement();
int rows = stmt.executeUpdate("INSERT INTO TABLE1 (COL1) VALUES(1)");
<ph>// セーブポイントの設定
set savepoint</ph>
Savepoint svpt1 = conn.setSavepoint("S1");
rows = stmt.executeUpdate("INSERT INTO TABLE1 (COL1) VALUES (2)");
...
conn.rollback(svpt1);
...
conn.commit();</b></codeblock></p>
</conbody>
</concept>

