<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<reference id="rrefjdbc32052" xml:lang="ja">
<title>java.sql.Driverインターフェイス</title>
<prolog><metadata>
<keywords><indexterm>java.sql.Driver interface</indexterm><indexterm>JDBC driver<indexterm>loading</indexterm></indexterm>
</keywords>
</metadata></prolog>
<refbody>
<section><p><i><ph conref="../conrefs.dita#prod/productshortname"></ph>の単独環境向けのドライバは、org.apache.derby.jdbc.EmbeddedDriver</i>によりロードします。
以下にクラスのインスタンスを作成する方法を幾つか挙げます。
<i>java.sql.Driver</i>のインターフェイスは直接使わないでください。接続を作るには<i>DriverManager</i>クラスを使います。
<ul id="i1012571">
<li>もしアプリケーションがJDK1.6以上のバージョンで動作しているなら、以下のいずれも行う必要はありません。アプリケーションが最初に接続を要求したときに、自動的にEmbeddedDriverがロードされます。<p> </p></li>
<li id="i1012580">
<i id="jdbc10841">Class.forName("org.apache.derby.jdbc.EmbeddedDriver")</i> 
 <p>インスタンスを作成することでどのJVMでも同じ時にクラスをロードできるので、この方法をお勧めします。</p></li>
<li><i>new org.apache.derby.jdbc.EmbeddedDriver()</i>   
<p><i><xref
href="#rrefjdbc32052/jdbc10841">Class.forName("org.apache.derby.jdbc.EmbeddedDriver")</xref></i>と同様ですが、プログラムをコンパイルするときにクラスを必要とします。</p></li>
<li><i>Class c = org.apache.derby.jdbc.EmbeddedDriver.class</i>   
<p>これも<i><xref href="rrefjdbc32052.dita#rrefjdbc32052/jdbc10841">Class.forName("org.apache.derby.jdbc.EmbeddedDriver")</xref></i>と同様ですが、プログラムをコンパイルするときにクラスを必要とします。擬似的な静的なフィールドの<i>class</i>は、指定された名前のクラスと評価されます。</p></li>
<li><i>システムプロパティのjdbc.drivers<ph><indexterm>JDBC driver<indexterm>loading</indexterm></indexterm></ph><ph><indexterm>jdbc.drivers
system property<indexterm>using to load driver</indexterm></indexterm></ph></i> 
 <p>システムプロパティの設定は、起動のコマンドラインあるいはアプリケーション内にて行います。アプレットではこれは不可能です。</p></li>
</ul></p></section>
<example><codeblock><b>java -Djdbc.drivers=org.apache.derby.jdbc.EmbeddedDriver
    applicationClass</b></codeblock></example>
<section><p><i>jdbc:derby:</i>プロトコルを処理するために<i>DriverManager</i>へ実際に登録されるドライバは、<i>org.apache.derby.jdbc.EmbeddedDriver</i>ではありません。このクラスのすることは、必要とされる<ph conref="../conrefs.dita#prod/productshortname"></ph>ドライバを検知して、<ph conref="../conrefs.dita#prod/productshortname"></ph>ドライバを読み込むだけです。</p></section>
<section><p><i>jdbc:derby:</i>プロトコルを介して、<ph conref="../conrefs.dita#prod/productshortname"></ph>のシステムに接続する方法は、<i>DriverManager</i>を使ってドライバ(<i>java.sql.Driver</i>)を得るか、
あるいは<i>getDriver</i>と<i>getConnection</i>メソッドを使って、接続(<i>java.sql.Connection</i>)を得る方法の二つです。</p></section>
</refbody>
</reference>
