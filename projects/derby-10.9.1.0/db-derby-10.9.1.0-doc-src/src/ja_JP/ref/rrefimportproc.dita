<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<reference id="rrefimportproc" xml:lang="ja">
<title>SYSCS_UTIL.SYSCS_IMPORT_TABLEシステム手続き</title>
<refbody>
<section><p><codeph>SYSCS_UTIL.SYSCS_IMPORT_TABLE</codeph>システム手続きは、入力ファイルから表の全ての列に情報をインポートします。
インポート先の表に既に情報がある場合、既存の情報を置き換えることも、新たに情報を追加することもできます。</p></section>
<section><title>構文</title> <codeblock>SYSCS_UTIL.SYSCS_IMPORT_TABLE (IN SCHEMANAME VARCHAR(128),
IN TABLENAME VARCHAR(128), IN FILENAME VARCHAR(32672),
IN COLUMNDELIMITER CHAR(1), IN CHARACTERDELIMITER CHAR(1),
IN CODESET VARCHAR(128), IN REPLACE SMALLINT)</codeblock> 
<p>この手続きは結果を返しません。</p> <dl><dlentry>
<dt>SCHEMANAME</dt>
<dd>この引数の型はVARCHAR(128)で、値には表のスキーマを指定します。空の値を与えた場合は既定のスキーマ名が用いられます。</dd>
</dlentry><dlentry>
<dt>TABLENAME</dt>
<dd>この引数の型はVARCHAR (128)で、値には情報をインポートする表の表名を指定します。
この表はシステム表や一時表であってはなりません。空の値を与えた場合はエラーとなります。
</dd>
</dlentry><dlentry>
<dt>FILENAME</dt>
<dd>この引数の型はVARCHAR(32672)で、値にはインポートする情報の書かれたファイルを指定します。
パスを指定しなければ、現在の作業ディレクトリが使われます。空の値を与えた場合はエラーとなります。</dd>
</dlentry><dlentry>
<dt>COLUMNDELIMITER</dt>
<dd>この引数の型はCHAR(1)で、値には列のデリミタを指定します。
指定した文字はコンマの代わりに列の最後を表すために用いられます。
空の値を渡すと既定値が使われます。既定値はコンマ(,)です。</dd>
</dlentry><dlentry>
<dt>CHARACTERDELIMITER</dt>
<dd>この引数の型はCHAR(1)で、値には文字のデリミタを指定します。
指定した文字は二重引用符の代わりに文字を囲うために用いられます。
空の値を渡すと既定値が使われます。既定値は二重引用符(")です。</dd>
</dlentry><dlentry>
<dt>CODESET</dt>
<dd>この引数の型はVARCHAR(128)で、値には入力ファイルに書かれた情報のコードセットを指定します。コードセットの名称はJavaがサポートする文字エンコーディングのうちの一つでなければなりません。情報は指定したコードセットからデータベースのコードセット(utf-8)に変換されます。
空の値を渡すと、手続きを実行しているJVMと同じコードセットで、データファイルを読み取ります。</dd>
</dlentry><dlentry>
<dt>REPLACE</dt>
<dd>この引数の型はSMALLINTです。値が零でなければREPLACEモードで動作して、値が零であればINSERTモードで動作します。
REPLACEモードでは情報を切り捨てて、表にある全ての情報を削除してから、インポートする情報を挿入します。
なお表の定義や索引の定義は変わりません。INSERTモードでは表にある既存の情報はそのままにして、表にインポートする情報を追加します。空の値を渡すとエラーとなります。</dd>
</dlentry></dl>
スキーマ、表あるいは列の名称をデリミトされない識別子として作成した場合、インポートの手続きには、その名称を全て大文字で指定しなければなりません。
スキーマ、表あるいは列の名称をデリミトされた識別子として作成した場合、インポートの手続きには、大文字・小文字を作成したときと同じにして名称を指定しなければなりません。</section>
<section><title>使い方</title>
<p>この手続きの使い方については、<ph conref="../conrefs.dita#pub/citutilities"></ph>にある「バルクインポートとエクスポートの手続き」の章も参照してください。</p></section>
<section><title>例</title>
<p>以下の例では、<codeph>myfile.del</codeph>というデリミトされたデータファイルから<codeph>STAFF</codeph>表に情報をインポートします。このとき、文字列のデリミタとしてはパーセンテージ(%)を、列のデリミタとしてはセミコロン(;)を指定します。<codeblock>CALL SYSCS_UTIL.SYSCS_IMPORT_TABLE
(null, 'STAFF', 'c:/output/myfile.del', ';', '%', null,0);</codeblock></p></section>
<section><p>インポートの詳細については<i><ph conref="../conrefs.dita#pub/citutilities"></ph></i>を参照してください。</p></section>
</refbody>
</reference>
