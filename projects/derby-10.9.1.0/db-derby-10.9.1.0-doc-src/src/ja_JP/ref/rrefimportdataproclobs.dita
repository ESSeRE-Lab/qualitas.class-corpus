<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<reference id="rrefimportdataproclobs" xml:lang="ja">
<title>SYSCS_UTIL.SYSCS_IMPORT_DATA_LOBS_FROM_EXTFILE システム手続き</title>
<shortdesc><codeph>SYSCS_UTIL.SYSCS_IMPORT_DATA_LOBS_FROM_EXTFILE</codeph>システム手続きを使って表にある列にインポートすることができます。このときLOBのデータは別ファイルから分けてインポートされます。
主となるインポートファイルには、LOBの情報がある場所への参照と他の全データが置かれます。</shortdesc>
<refbody>
<section><title>構文</title><codeblock>SYSCS_UTIL.SYSCS_IMPORT_DATA_LOBS_FROM_EXTFILE (
   IN SCHEMANAME VARCHAR(128), 
   IN TABLENAME VARCHAR(128), 
   IN INSERTCOLUMNS VARCHAR(32672), 
   IN COLUMNINDEXES VARCHAR(32672),
   IN FILENAME VARCHAR(32672), 
   IN COLUMNDELIMITER CHAR(1), 
   IN CHARACTERDELIMITER CHAR(1), 
   IN CODESET VARCHAR(128), 
   IN REPLACE SMALLINT)
   )
</codeblock>
<p>インポートユーティリティはLOBの情報がある場所への参照を主となるインポートファイルから探します。</p><dl><dlentry>
<dt>SCHEMANAME</dt>
<dd>表のスキーマを指定します。既定のスキーマ名を利用するために、NULLの値を指定することができます。
<parmname>SCHEMANAME</parmname>パラメータは、VARCHAR (128)型の引数を入力にとります。</dd>
</dlentry><dlentry>
<dt>TABLENAME</dt>
<dd>情報がインポートされる表の名前を指定します。
表はシステム表や一時表であってはなりません。
文字列は表名と大文字小文字が一致していなければなりません。NULL値を指定するとエラーとなります。
<parmname>TABLENAME</parmname>パラメータは、VARCHAR (128)型の引数を入力にとります。</dd>
</dlentry><dlentry>
<dt>INSERTCOLUMNS</dt>
<dd>情報がインポートされる表の列の名前を、コンマで区切って指定します。
表の全列へインポートする場合、NULL値を指定することができます。
<parmname>INSERTCOLUMNS</parmname>パラメータは、VARCHAR (32672)型の引数を入力にとります。</dd>
</dlentry><dlentry>
<dt>COLUMNINDEXES</dt>
<dd>入力される情報のうち、インポートされる欄の列番号(1から数えます。)をコンマで区切って指定します。
ファイルの全欄を指定する場合、NULL値を指定することもできます。<parmname>COLUMNINDEXES</parmname>パラメータは、VARCHAR (32762)型の引数を入力にとります。</dd>
</dlentry><dlentry>
<dt>FILENAME</dt>
<dd>インポートする情報のあるファイルの名前を指定します。パスが省略された場合、現在の作業ディレクトリが使われます。ネットワークサーバで利用する場合、ファイルの位置はサーバサイドの位置を参照します。
NULLを指定するとエラーになります。
<parmname>fileName</parmname>パラメータは、VARCHAR (32672)型の引数を入力にとります。</dd>
</dlentry><dlentry>
<dt>COLUMNDELIMITER</dt>
<dd>列のデリミタを指定します。指定された文字はコンマの代わりに列の終わりを表します。既定値のコンマを利用する場合、NULL値を指定できます。
<parmname>COLUMNDELIMITER</parmname>パラメータは、CHAR (1)型の引数を入力にとります。</dd>
</dlentry><dlentry>
<dt>CHARACTERDELIMITER</dt>
<dd>文字のデリミタを指定します。指定された文字は二重引用符の代わりに列の終わりを表します。既定値の二重引用符を利用する場合、NULL値を指定できます。
<parmname>CHARACTERDELIMITER</parmname>パラメータは、
CHAR (1)型の引数を入力にとります。</dd>
</dlentry><dlentry>
<dt>CODESET</dt>
<dd>入力ファイル中の情報のコードセットを指定します。コードセットの名前はJavaで利用可能な文字円コーディングでなければなりません。
情報は指定されたコードセットから、データベースのコードセット(UTF-8)へと変換されます。
実行するJVMと同じコードセットでデータファイルを解釈する場合、NULL値を指定することができます。
<parmname>CODESET</parmname>パラメータは、VARCHAR (128)データ型を入力にとります。</dd>
</dlentry><dlentry>
<dt>REPLACE</dt>
<dd>このパラメータに0以外の値を指定すると、インポートがREPLACEモードで行われます。一方で0を指定すると、インポートはINSERTモードで行われます。
REPLACEモードでは表にある既存の情報はすべて切り捨てられたのち、インポートした情報が挿入されます。
表の定義や索引の定義には変更がありません。表が既にある場合のみ、REPLACEモードで情報をインポートすることができます。INSERTモードでは既存の表の情報に変更を加えずに、インポートした情報を追加します。
パラメータにNULL値を指定するとエラーが発生します。
<parmname>REPLACE</parmname>パラメータは、SMALLINTデータ型を入力にとります。</dd>
</dlentry></dl>
<p>デリミトされない識別子でスキーマ、表、列が作成された場合、インポートの手続きに渡す名前はすべて大文字でなければなりません。
デリミトされた識別子でスキーマ、表、列が作成された場合、インポートの手続きに渡す名前は作成された名前と大文字と小文字が一致しなければなりません。</p></section>
<section><title>使い方</title>
<p>この手続きは主となるインポートファイルに書かれた参照を使って、LOBの情報を読みます。
主となるインポートファイルに書かれたLOBへの参照は、<codeph>lobsFileName.Offset.length/</codeph>という書式に決まっています。
</p>
<ul>
<li><codeph>Offset</codeph>は外部ファイル中のバイト数で数えた位置です。</li>
<li><codeph>length</codeph>はバイト数で数えたLOB列の情報の長さです。</li>
</ul>
<p>この手続きの使い方については、<ph conref="../conrefs.dita#pub/citutilities"></ph>の「バルクインポートとエクスポートの手続きを使う」の章も参照してください。</p></section>
<section><title>指定した列にデータをインポートする例。LOBデータは別ファイルからインポートされる。</title>
以下の例では、STAFF表のいくつかの列に情報をインポートする方法を示します。
STAFF表にはサンプルデータベースのLOB列があります。
インポートファイルの<codeph>staff.del</codeph>は、デリミトされたデータファイルです。<codeph>staff.del</codeph>ファイルには、LOBデータの書かれた外部ファイルへの参照が書かれます。
入力ファイルの情報は、文字のデリミタが二重引用符(")、列のデリミタがコンマ(')という書式となっています。
インポートした情報はSTAFF表の既存の情報に追加されます。
<codeblock>CALL SYSCS_UTIL.SYSCS_IMPORT_DATA_LOBS_FROM_EXTFILE
    (null, 'STAFF', 'NAME,DEPT,SALARY,PICTURE', '2,3,4,6',
+    'c:＼data＼staff.del', ',','"','UTF-8',  0);</codeblock></section>
</refbody>
</reference>
