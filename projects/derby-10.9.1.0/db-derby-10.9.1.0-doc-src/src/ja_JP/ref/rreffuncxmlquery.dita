<?xml version="1.0" encoding="utf-8"?>
 
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either XMLEXISTSress or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<reference id="rreffuncxmlquery" xml:lang="ja">
<title>XMLQUERY演算子</title>
<shortdesc>XMLQUERYはSQLにてXMLの値を問い合わせることができるSQL/XML演算子です。</shortdesc>
<prolog><metadata>
<keywords><indexterm>XMLQUERY operator</indexterm><indexterm>operators<indexterm>XMLQUERY</indexterm></indexterm>
<indexterm>XML<indexterm>operators, XMLQUERY</indexterm></indexterm></keywords>
</metadata></prolog>
<refbody>
<section> <p>XMLQUERY演算子には二つの引数があります。片方はXML問合せ式で、もう一つは<ph conref="../conrefs.dita#prod/productshortname"></ph>XML値です。</p></section>
<refsyn><title>構文</title><codeblock><b>XMLQUERY ( <varname>xquery文字列リテラル</varname>
    PASSING BY REF <varname>xml値式</varname> 
    [ RETURNING SEQUENCE [ BY REF ] ]
    EMPTY ON EMPTY
    )</b></codeblock><dl><dlentry>
<dt><codeph>xquery文字列リテラル</codeph></dt>
<dd>文字列のリテラルが指定されなければなりません。もし引数にパラメータが与えられたり、リテラルではない式が与えられたり、文字列ではない(整数のような)リテラルが与えられた場合、<ph conref="../conrefs.dita#prod/productshortname"></ph>はエラーを挙げます。 
引数の<codeph>xquery文字列リテラル</codeph>は、Apache XalanがサポートするXPath式でなければなりません。<ph conref="../conrefs.dita#prod/productshortname"></ph>はどのようなXML問合せ式を評価するでもApache Xalanを利用します。XalanはXQueryを完全にサポートしないので、<ph conref="../conrefs.dita#prod/productshortname"></ph>も同様に完全にサポートしません。
もしXalanが問合せのコンパイルや実行を行えなかった場合、<ph conref="../conrefs.dita#prod/productshortname"></ph>はXalanが挙げたエラーを補足して、SQLExceptionとして挙げなおします。
XPathおよびXQuery式の詳細については、次のWebサイトを参照してください。<xref format="html"
href="http://www.w3.org/TR/xpath">http://www.w3.org/TR/xpath</xref>と<xref
format="html" href="http://www.w3.org/TR/xquery/">http://www.w3.org/TR/xquery/</xref></dd>
</dlentry><dlentry>
<dt><codeph>xml値式</codeph></dt>
<dd>これはXMLの値でなければならず、また整形式のSQL/XML文書でなければなりません。
<codeph>xml値式</codeph>はパラメータであってはなりません。
<ph conref="../conrefs.dita#prod/productshortname"></ph>は暗黙の構文解析や、XML値への変換を行わないので、文字列やその他のデータ型を使うとエラーとなります。
もし引数が<ph conref="../conrefs.dita#prod/productshortname"></ph>のXMLQUERY演算子により返る並びであった場合、もしその並びが一つの文書ノードであるノードからなる並びであれば、引数にとる事ができます。そうではなければ、<ph conref="../conrefs.dita#prod/productshortname"></ph>はエラーを挙げます。</dd>
</dlentry><dlentry>
<dt>BY REF</dt>
<dd>この省略可能なキーワードにより、<ph conref="../conrefs.dita#prod/productshortname"></ph>にて可能な引数渡しの仕組みが記述されます。BY REFは規定の引数渡しの仕組みなので、このキーワードのあるなしにかかわらず、XMLQUERY演算子は同様に振舞います。引数渡しの仕組みについてのより詳細な情報は、SQL/XML仕様を参照してください。</dd>
</dlentry><dlentry>
<dt>RETURNING SEQUENCE</dt>
<dd>省略可能なこのキーワードにより、<ph
conref="../conrefs.dita#prod/productshortname"></ph>のXMLQUERY演算子にて唯一返すことのできるXMLの種類を記述します。SEQUENCEは既定の返却値の種類なので、このキーワードのあるなしにかかわらず、XMLQUERY演算子は同様に振舞います。他のXML返却値の種類についてのより詳細な情報は、SQL/XML仕様を参照してください。</dd>
</dlentry><dlentry>
<dt>EMPTY ON EMPTY</dt>
<dd>省略できないこのキーワードにより、XMLQUERY演算子の結果が空の並びであった時の振る舞いが記述されます。XMLQUERY演算子は空の並びをそのまま返します。XMLQUERY演算子はnull値に変換しません。空の並びは直列化されると空文字列になります。<ph conref="../conrefs.dita#prod/productshortname"></ph>は、空の並びを整形式のXML文書としません。</dd>
</dlentry></dl>
<p>XMLQUERY演算子の結果は、XML型の値です。
結果はXMLノードや値の並びを表します。文字列のような値は、結果の並びの一部となることができます。XMLQUERY演算子の結果は整形式のXML文書であることが保障されず、XML列にXMLQUERY演算子の結果を挿入できないことがあります。
XML列に結果を記録するためには、その結果は唯一つの項目を持つ並びで、その項目が整形式の文書ノードでなければなりません。
結果は<xref href="rreffuncxmlserialize.dita#rreffuncxmlserialize"></xref>によって直列化することによってのみ見られるようにできます。</p></refsyn>
<section><title>例</title>
<p><codeph>x_table</codeph>表にて、<codeph>xcol</codeph>というXML列を検索して、age属性が20より大きいstudents要素を返すには次の文を書きます。
<codeblock>SELECT ID,
    XMLSERIALIZE(
        XMLQUERY('<varname>//student[@age>20]</varname>' PASSING BY REF <varname>xcol</varname> EMPTY ON EMPTY)
    AS VARCHAR(50))
FROM <varname>x_table</varname>

</codeblock>この問合せでは、XMLQUERY演算子が実際に結果を返すか否かにかかわらず、結果には<codeph>x_table</codeph>の全行毎に結果行があります。</p>
<p><codeph>x_table</codeph>表にて<codeph>xcol</codeph>というXML列を検索して、BCという名前の生徒の年齢を返すには、次の文を書きます。<codeblock>SELECT ID, 
    XMLSERIALIZE(
        XMLQUERY('<varname>string(//student[text() = "BC"]/@age</varname>)' PASSING BY REF <varname>xcol</varname> EMPTY ON EMPTY)
    AS VARCHAR(50))
FROM <varname>x_table</varname>
WHERE
    XMLEXISTS('<varname>//student[text() = "BC"]</varname>' PASSING BY REF <varname>xcol</varname>)
</codeblock> この問合せでは結果には、<codeph>x_table</codeph>中のBCという名前の生徒の行のみあります。</p></section>
<section><title>利用上の覚書</title>
<p><ph conref="../conrefs.dita#prod/productshortname"></ph>はXMLの機能を動作させるために、Apache XercesのようなJAXP構文解析器とApache XalanがJavaのクラスパスに記述されている必要があります。JAXP構文解析器、Xalanの何れかがクラスパスに記述されていない場合に、XMLQUERY演算子を利用しようとするとエラーが発生します。</p></section>
</refbody>
</reference>
