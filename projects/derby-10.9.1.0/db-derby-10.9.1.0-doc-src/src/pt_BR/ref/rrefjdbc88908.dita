<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../../dtd/reference.dtd">
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<reference id="rrefjdbc88908" xml:lang="pt-br">
<title>Sintaxe de escape do JDBC para a palavra chave fn</title>
<prolog>
<metadata>
<keywords>
<indexterm>fn (palavra chave de escape do JDBC)</indexterm>
<indexterm>substring (função escalar do JDBC)</indexterm>
<indexterm>mod (função escalar do JDBC)</indexterm>
<indexterm>locate (função escalar do JDBC)</indexterm>
<indexterm>abs (função escalar do JDBC)</indexterm>
<indexterm>sqrt (função escalar do JDBC)</indexterm>
<indexterm>concat (função escalar do JDBC)</indexterm>
<indexterm>função TIMESTAMPADD</indexterm>
<indexterm>função TIMESTAMPDIFF</indexterm>
</keywords>
</metadata>
</prolog>
<refbody>
<section>
<p>A palavra chave <i>fn</i> permite utilizar várias funções escalares.
O nome da função vem imediatamente após a palavra chave <i>fn</i>.</p>
</section>
<refsyn>
<title>Sintaxe</title>
<codeblock><b>{fn <i>chamadaFunção</i>}</b>
</codeblock><p>onde <i>chamadaFunção</i> é uma das seguintes funções:</p>
<codeblock><b>concat (<b><i>ExpressãoCaractere</i></b>,
<b><i>ExpressãoCaractere</i></b>)</b></codeblock>
<p>Cadeia de caracteres formada anexando a segunda cadeia à primeira;
se uma das cadeias for nula, o resultado será nulo.
{fn concat (<i>ExpressãoCaractere</i>, <i>ExpressãoCaractere</i>)
é equivalente à sintaxe nativa { ExpressãoCaractere || ExpressãoCaractere }.
Para obter mais detalhes deve ser consultado
<xref href="rrefsqlj40899.dita#rrefsqlj40899"></xref>.</p>
<codeblock><b><i>sqrt (<b><i>ExpressãoPontoFlutuante</i></b>)</i></b>
</codeblock><p>Raiz quadrada do número de ponto flutuante.</p>
<p>{fn sqrt (<i>ExpressãoPontoFlutuante</i>)} é equivalente à sintaxe nativa
<xref href="rrefsqlj73147.dita#rrefsqlj73147/i1195048">SQRT(ExpressãoPontoFlutuante)</xref>.
Para obter mais detalhes deve ser consultado
<xref href="rrefsqlj73147.dita#rrefsqlj73147"></xref>.</p>
<codeblock><b>abs (<b><i>ExpressãoNumérica</i></b>)</b></codeblock>
<p>Valor absoluto do número.
{fn abs(<i>ExpressãoNumérica</i>)} é equivalente à sintaxe nativa
<xref href="rrefsqlj98067.dita#rrefsqlj98067/i1195049">ABSOLUTE(ExpressãoNumérica)</xref>.
Para obter mais detalhes deve ser consultado <xref href="rrefsqlj98067.dita#rrefsqlj98067"></xref>.
</p><codeblock><b>locate(<b><i>ExpressãoCaractere</i></b>, <b><i>ExpressãoCaractere</i></b> [, <b><i>posiçãoInício</i></b>] )</b></codeblock>
<p>Posição na segunda <i>ExpressãoCaractere</i> da primeira ocorrência da
primeira <i>ExpressãoCaractere</i>, procurando a partir do início da segunda
expressão caractere, a menos que esteja especificada a <i>posiçãoInício</i>.
{fn locate(<i>ExpressãoCaractere</i>,<i>ExpressãoCaractere</i> [, <i>posiçãoInício</i>])}
é equivalente à sintaxe nativa
<xref href="rrefsqlj61998.dita#rrefsqlj61998/i1195050">LOCATE(ExpressãoCaractere, ExpressãoCaractere [, PosiçãoInício] )</xref>.
Para obter mais detalhes deve ser consultado
<xref href="rrefsqlj61998.dita#rrefsqlj61998"></xref>.</p>
<codeblock><b>substring(<b><i>ExpressãoCaractere</i></b>, <b><i>posiçãoInício</i></b>, <b><i>comprimento</i></b>)</b></codeblock>
<p>A cadeia de caracteres formada pela extração de <i>comprimento</i> caracteres
da <i>ExpressãoCaractere</i> a partir da <i>posiçãoInício</i>;
a posição começa em 1.</p>
<codeblock><b>mod(<b><i>tipo_inteiro</i></b>, <b><i>tipo_inteiro</i></b>)</b></codeblock>
<p>MOD retorna o resto (módulo) do argumento 1 dividido pelo argumento 2.
O resultado será negativo apenas se o argumento 1 for negativo.
Para obter mais detalhes deve ser consultado
<xref href="rrefsqljmod.dita#rrefsqljmod"></xref>.</p>
<note>Esta sintaxe permite o uso de qualquer função nativa do
<ph conref="refconrefs.dita#prod/productshortname"></ph>,
e não apenas as listadas nesta seção.</note>
<codeblock><b>TIMESTAMPADD( <i>intervalo</i>, <i>expressãoInteira</i>, <i>expressãoCarimboTempo</i> )</b></codeblock>
<p>Utiliza a função <codeph>TIMESTAMPADD</codeph> para adicionar o valor de
um intervalo a um carimbo do tempo.
A função aplica o inteiro ao carimbo do tempo especificado baseado no tipo
de intervalo, e retorna a soma como um novo carimbo do tempo.
Pode ser realizada subtração no carimbo do tempo utilizando inteiros negativos.</p>
<p>Deve ser observado que <codeph>TIMESTAMPADD</codeph> é uma função do JDBC
com escape, sendo acessível apenas utilizando a sintaxe de função com escape
do JDBC.</p>
<p>Para realizar <codeph>TIMESTAMPADD</codeph> em datas e horas, é necessário
convertê-los para carimbo do tempo.
As datas são convertidas em carimbos do tempo colocando 00:00:00.0 no campo
das horas.
As horas são convertidas em carimbos do tempo colocando a data corrente no
campo da data.</p>
<p>Deve ser observado que não deve ser colocada uma coluna data/hora dentro de
uma função aritmética de carimbo do tempo na cláusula WHERE, porque o
otimizador não usará nenhum índice na coluna.</p>
<codeblock><b>TIMESTAMPDIFF( intervalo, expressãoCarimboTempo1, expressãoCarimboTempo2 )</b></codeblock>
<p>Utiliza a função <codeph>TIMESTAMPDIFF</codeph> para descobrir a diferença
entre dois valores de carimbo do tempo no intervalo especificado.
Por exemplo, a função pode retornar o número de minutos entre dois carimbos do
tempo especificados.</p>
<p>Deve ser observado que <codeph>TIMESTAMPDIFF</codeph> é uma função do JDBC
com escape, sendo acessível apenas utilizando a sintaxe de função com escape
do JDBC.</p>
<p>Para realizar <codeph>TIMESTAMPDIFF</codeph> em datas e horas, é
necessário convertê-los em carimbo do tempo.
As datas são convertidas em carimbos do tempo colocando 00:00:00.0 no campo
das horas.
As horas são convertidas em carimbos do tempo colocando a data corrente no
campo da data.</p>
<p>Deve ser observado que não deve ser colocada uma coluna data/hora dentro de
uma função aritmética de carimbo do tempo na cláusula WHERE, porque o
otimizador não usará nenhum índice para a coluna.</p>
</refsyn>
<section>
<title>Intervalos válidos para TIMESTAMPADD e TIMESTAMPDIFF</title>
As funções <codeph>TIMESTAMPADD</codeph> e <codeph>TIMESTAMPDIFF</codeph>
podem ser utilizadas para realizar aritmética com carimbos do tempo.
Estas duas funções utilizam os seguintes intervalos válidos para as operações
aritméticas:
<ul>
<li>SQL_TSI_DAY</li>
<li>SQL_TSI_FRAC_SECOND</li>
<li>SQL_TSI_HOUR</li>
<li>SQL_TSI_MINUTE</li>
<li>SQL_TSI_MONTH</li>
<li>SQL_TSI_QUARTER</li>
<li>SQL_TSI_SECOND</li>
<li>SQL_TSI_WEEK</li>
<li>SQL_TSI_YEAR</li>
</ul>
</section>
<example>
<title>Exemplo de TIMESTAMPADD e TIMESTAMPDIFF</title>
<codeblock><b>{fn TIMESTAMPADD( SQL_TSI_MONTH, 1, CURRENT_TIMESTAMP)}</b></codeblock>
<p>Retorna um valor carimbo do tempo um mês após o carimbo do tempo corrente.</p>
<codeblock><b>{fn TIMESTAMPDIFF(SQL_TSI_WEEK, CURRENT_TIMESTAMP,
  timestamp('2001-01-01-12.00.00.000000'))}</b></codeblock>
<p>Retorna o número de semanas entre agora e a hora especificada em
1 de janeiro de 2001.</p>
</example>
</refbody>
</reference>
