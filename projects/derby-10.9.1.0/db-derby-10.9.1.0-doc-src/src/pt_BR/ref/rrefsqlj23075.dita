<?xml version="1.0" encoding="utf-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../../dtd/reference.dtd">
<reference id="rrefsqlj23075" xml:lang="pt-br">
<title>Expressão booleana</title>
<prolog>
<metadata>
<keywords>
<indexterm>Expressão booleana</indexterm>
</keywords>
</metadata>
</prolog>
<refbody>
<section>
<p>As expressões booleanas são permitidas na cláusula WHERE e nas restrições
de verificação.
As expressões booleanas nas restrições de verificação possuem limitações não
descritas aqui; para obter mais informações deve ser consultada a
<xref href="rrefsqlj13590.dita#rrefsqlj13590"></xref>.
As expressões booleanas nas cláusulas WHERE possuem uma sintaxe bem liberal;
consulte, por exemplo, a
<xref href="rrefsqlj33602.dita#rrefsqlj33602">Cláusula WHERE</xref>.</p>
</section>
<section>
<p>As expressões booleanas podem incluir um ou mais operadores booleanos,
listados em <xref href="rrefsqlj23075.dita#rrefsqlj23075/sqlj34517"></xref>.
<table pgwide="1" frame="all" id="sqlj34517">
<title>
<ph><indexterm>Operadores booleanos<indexterm>parte da cláusula WHERE</indexterm></indexterm></ph>
Operadores booleanos SQL
</title>
<tgroup cols="3" colsep="1" rowsep="1">
<colspec colname="1" colnum="1" colwidth="24*"/>
<colspec colname="2" colnum="2" colwidth="46*"/>
<colspec colname="3" colnum="3" colwidth="30*"/>
<thead>
<row>
<entry align="left" colname="1" valign="bottom">Operador</entry>
<entry align="left" colname="2" valign="bottom">Explicação e exemplo</entry>
<entry align="left" colname="3" valign="bottom">Sintaxe</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="1">
<indexterm>operador booleano AND</indexterm>
<indexterm>operador booleano OR</indexterm>
<indexterm>operador booleano NOT</indexterm>
AND, OR, NOT
</entry>
<entry colname="2">
Avalia os operandos, que são expressões booleanas
<codeblock><b>(AEROPORTO_ORIGEM = 'SFO') OR
    (AEROPORTO_DESTINO = 'GRU')
<ph>-- retorna verdade</ph></b>
</codeblock>
</entry>
<entry colname="3"> <codeblock><b>{
<b><i>  Expressão</i></b> AND
<b><i>    Expressão </i></b>|
<b><i>  Expressão</i></b> OR
<b><i>    Expressão</i></b> |
  NOT <b><i>Expressão</i></b>
}</b>
</codeblock>
</entry>
</row>
<row>
<entry colname="1">Comparações
<indexterm>Operadores de comparação booleanos</indexterm>
</entry>
<entry colname="2">
&lt;, =, &gt;, &lt;=, &gt;=, &lt;&gt; são aplicáveis a todos os tipos nativos.
<codeblock><b>DATE('1998-02-26') &lt;
    DATE('1998-03-01')
<ph>-- retorna verdade</ph></b>
</codeblock></entry>
<entry colname="3"> <codeblock><b><b><i>Expressão</i></b>
{
  &lt; |
  = |
  &gt; |
  &lt;= |
  &gt;= |
  &lt;&gt;
}
<b><i>Expressão</i></b></b>
</codeblock></entry>
</row>
<row>
<entry colname="1">IS NULL, IS NOT NULL
<indexterm>Operador booleano IS NULL</indexterm>
<indexterm>Operador booleano IS NOT NULL</indexterm>
</entry>
<entry colname="2">Testa se o resultado de uma expressão é nulo ou não.
  <codeblock><b>WHERE NOME_DO_MEIO IS NULL</b>
</codeblock></entry>
<entry colname="3">
<codeblock><b><b><i>Expressão</i></b> IS [ NOT ]
  NULL</b>
</codeblock>
</entry>
</row>
<row>
<entry colname="1">LIKE
<indexterm>Operador booleano LIKE</indexterm>
<indexterm>LIKE<indexterm>CARACTERE DE escape</indexterm></indexterm>
</entry>
<entry colname="2">
Tenta fazer a correspondência entre uma expressão de caractere e um padrão de
caractere, que é uma cadeia de caracteres que inclui um ou mais caracteres
curinga.
<p>O caractere % corresponde a qualquer número (zero ou mais) de caracteres
na posição correspondente na primeira expressão de caractere.</p>
<p>O caractere _ corresponde a um caractere
na posição correspondente na expressão de caractere.</p>
<p>Qualquer outro caractere corresponde apenas a este caractere na posição
correspondente na expressão de caractere.
<codeblock><b>cidade LIKE 'Sant_'</b>
</codeblock>
</p>
<p>Para tratar os caracteres % e _ como caracteres constante, o caractere
deve ser precedido por um caractere de escape opcional, especificado na
cláusula ESCAPE.
<codeblock><b>SELECT a FROM tabA WHERE a
LIKE '%=_' ESCAPE '='</b>
</codeblock>
</p>
</entry>
<entry colname="3"> <codeblock><b><b><i>ExpressãoCaractere</i></b>
  [ NOT ] LIKE
<b><i>  ExpressãoCaractere
  ComCaractereCuringa</i></b>
  [ ESCAPE
  '<b><i>CaractereDeEscape</i></b>']</b>
</codeblock></entry>
</row>
<row>
<entry colname="1">BETWEEN
<indexterm>Operador booleano BETWEEN</indexterm>
</entry>
<entry colname="2">
Testa se o primeiro operando está entre o segundo e o terceiro operandos.
O segundo operando deve ser menor que o terceiro operando.
Aplicável apenas aos tipos de dado onde se pode aplicar &lt;= e &gt;=.
<codeblock><b>WHERE DATA_DE_RESERVA BETWEEN
    DATE('1998-02-26') AND
    DATE('1998-03-01')</b>
</codeblock>
</entry>
<entry colname="3">
<codeblock><b><b><i>Expressão</i></b> [ NOT ]
BETWEEN <b><i>Expressão</i></b>
  AND <b><i>Expressão</i></b></b>
</codeblock>
</entry>
</row>
<row>
<entry colname="1">IN
<indexterm>Operador booleano IN</indexterm>
</entry>
<entry colname="2">
Opera sobre uma subconsulta a tabela ou uma lista de valores.
Retorna TRUE se o valor da expressão à esquerda está presente no resultado da
subconsulta a tabela ou na lista de valores.
A subconsulta a tabela pode retornar várias linhas, mas deve retornar uma
única coluna.
<codeblock><b>WHERE DATA_DE_RESERVA NOT IN
    (SELECT DATA_DE_RESERVA FROM
RESERVAS_EM_HOTEL WHERE QUARTOS_DISPONÍVEIS = 0)</b>
</codeblock></entry>
<entry colname="3">
<codeblock><b>{
<b><i>  Expressão</i></b> [ NOT ]
    IN
    <b><i><xref href="rreftablesubquery.dita#rreftablesubquery">SubconsultaTabela</xref></i></b> |
<b><i>  Expressão</i></b> [ NOT ]
    IN ( <b><i>Expressão</i></b>
    [, <b><i>Expressão</i></b> ]* )
}</b>
</codeblock>
</entry>
</row>
<row>
<entry colname="1">EXISTS
<indexterm>Operador booleano EXISTS</indexterm>
</entry>
<entry colname="2">
Opera sobre uma subconsulta a tabela.
Retorna TRUE se a subconsulta a tabela retornar alguma linha,
e FALSE se não retornar nenhuma linha.
A subconsulta a tabela pode retornar várias colunas (somente se for utilizado
* para indicar várias colunas) e linhas.
<codeblock><b>WHERE EXISTS
  (SELECT *
  FROM VÔOS
  WHERE AEROPORTO_DESTINO = 'SFO'
  AND AEROPORTO_ORIGEM = 'GRU')</b>
</codeblock>
</entry>
<entry colname="3">
<codeblock><b>[NOT] EXISTS <b><i><xref href="rreftablesubquery.dita#rreftablesubquery">SubconsultaTabela</xref></i></b></b>
</codeblock>
</entry>
</row>
<row>
<entry colname="1">Comparação quantificada
<indexterm>Operador booleano de comparação quantificada</indexterm>
</entry>
<entry colname="2">
A comparação quantificada é um operador de comparação
(&lt;, =, &gt;, &lt;=, &gt;=, &lt;&gt;)
com ALL, ANY ou SOME aplicado.
<p>Opera sobre subconsultas a tabela, que podem retornar várias linhas, mas
devem retornar uma única coluna.</p>
<p>Se for utilizado ALL, a comparação deverá ser verdade para todos os valores
retornados pela subconsulta a tabela.
Se for utilizado ANY ou SOME, a comparação deverá ser verdade para pelo menos um
valor da subconsulta a tabela.
ANY e SOME são equivalentes.
<codeblock><b>WHERE TAXA_NORMAL &lt; ALL
(SELECT ORÇAMENTO/550 FROM GRUPOS) </b>
</codeblock>
</p>
</entry>
<entry colname="3"> <codeblock><b><b><i>Expressão</i></b>
  OperadorComparação
  {
    ALL |
    ANY |
    SOME
  }
  <b><i><xref href="rreftablesubquery.dita#rreftablesubquery">SubconsultaTabela</xref></i></b></b>
</codeblock>
</entry>
</row>
</tbody>
</tgroup>
</table>
</p>
</section>
</refbody>
</reference>
