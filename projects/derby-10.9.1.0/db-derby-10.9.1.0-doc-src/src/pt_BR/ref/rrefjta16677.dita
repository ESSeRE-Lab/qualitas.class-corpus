<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../../dtd/reference.dtd">
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<reference id="rrefjta16677" xml:lang="pt-br">
<title>Conformidade com o J2EE: API de transação Java e extensões javax.sql</title>
<prolog>
<metadata>
<keywords>
<indexterm>Gerenciador de recursos<indexterm>Derby como um sistema J2EE</indexterm><indexterm>JNDI</indexterm><indexterm>javax.sql.DataSource</indexterm></indexterm>
<indexterm>Pool de conexão</indexterm>
<indexterm>javax.sql.ConnectionPoolDataSource</indexterm>
<indexterm>javax.sql.PooledConnection</indexterm>
</keywords>
</metadata>
</prolog>
<refbody>
<section>
<p>A J2EE, ou <i>Java 2 Platform, Enterprise Edition</i>, é um padrão para
desenvolvimento de aplicativos empresariais, baseado em componentes
reutilizáveis em um ambiente de várias camadas (<i>multi-tier</i>).
Além das funcionalidades da <i>Java 2 Platform, Standard Edition (J2SE)</i>,
a J2EE adiciona suporte a <i>Enterprise Java Beans (EJBs)</i>,
<i>Java Server Pages (JSPs)</i>, <i>Servlets</i>, <i>XML</i>, e muito mais.
A arquitetura J2EE é utilizada para unir tecnologias existentes e aplicativos
empresariais em um único ambiente gerenciável.</p>
</section>
<section>
<p>O <ph conref="refconrefs.dita#prod/productshortname"></ph>
é um componente em conformidade com a J2EE em um sistema J2EE distribuído.
Como tal, é parte de um sistema maior que inclui, entre outras coisas,
um servidor JNDI , um módulo de <i>pool</i> de conexões, um gerenciador de
transações, um gerenciador de recursos, e aplicativos dos usuários.
Dentro deste sistema, o
<ph conref="refconrefs.dita#prod/productshortname"></ph>
pode servir como gerenciador de recursos.</p>
</section>
<section>
<p>Para obter mais informações sobre a J2EE, deve ser vista a especificação da
J2EE disponível na página
<i><xref format="html" href="http://java.sun.com/j2ee/docs.html" scope="local">http://java.sun.com/j2ee/docs.html</xref></i>.</p>
</section>
<section>
<p>Para se qualificar como um gerenciador de recursos em um sistema J2EE, é
requerido pela J2EE suporte a estas áreas básicas:
<ul>
<li>Suporte JNDI.
<p>Permite aos aplicativos que fazem a chamada registrar nomes para os
bancos de dados, e acessá-los através destes nomes em vez de através de
URL de conexão com o banco de dados.
A implementação de uma das extensões do JDBC,
<i><xref href="rrefjta18596.dita#rrefjta18596/jta20722">javax.sql.DataSource</xref>,</i>
fornece este suporte.</p></li>
<li>Pool de conexões.
<p>Mecanismo pelo qual um servidor de <i>pool</i> de conexões mantém
um conjunto de conexões abertas para o gerenciador de recursos
(<ph conref="refconrefs.dita#prod/productshortname"></ph>).
Um usuário requisitando uma conexão pode obtê-la entre as conexões disponíveis
no <i>pool</i>.
Este <i>pool</i> de conexões é útil em ambientes cliente/servidor, porque o
estabelecimento de uma conexão é relativamente dispendioso.
Em um ambiente incorporado as conexões são muito menos dispendiosas, tornando
a melhoria de desempenho do <i>pool</i> de conexões insignificante.
A implementação de duas extensões do JDBC,
<i><xref href="rrefjta18596.dita#rrefjta18596/jta96573">javax.sql.ConnectionPoolDataSource
e javax.sql.PooledConnection</xref></i>, fornecem este suporte.</p></li>
<li>Suporte ao XA.
<indexterm>XA</indexterm>
<indexterm>Gerenciamento de transações distribuídas</indexterm>
<indexterm>Interfaces javax.sql.XAxxx</indexterm>
<indexterm>pacote java.transaction.xa</indexterm>
<p>O XA é um dos diversos padrões para gerenciamento de transações distribuídas.
É baseado na efetivação de duas fases (<i>two-phase commit</i>).
As interfaces <i>javax.sql.XAxxx</i>, junto com o pacote
<i>java.transaction.xa</i>, são uma implementação abstrata do XA.
Para obter mais informações sobre o XA deve ser consultado
<cite>X/Open CAE Specification-Distributed Transaction Processing: The XA Specification</cite>,
X/Open Document No. XO/CAE/91/300 ou ISBN 1 872630 24 3.
A implementação da API do JTA, as interfaces do pacote
<i>java.transaction.xa</i>
(<i><xref href="rrefjta18596.dita#rrefjta18596/jta18170">javax.sql.XAConnection</xref>,</i>
<i><xref href="rrefjta18596.dita#rrefjta18596/jta88962">javax.sql.XADataSource</xref>,</i>
<i><xref href="rrefjta51021.dita#rrefjta51021/jta18387">javax.transaction.xa.XAResource</xref>,</i>
<i><xref href="rrefjta51021.dita#rrefjta51021/jta75105">javax.transaction.xa.Xid</xref>,</i> e
<i><xref href="rrefjta51021.dita#rrefjta51021/jta93666">javax.transaction.xa.XAException</xref></i>),
fornecem este suporte.</p></li>
</ul>
</p>
</section>
<section>
<p>Exceto pelas interfaces JDBC do núcleo, estas interfaces não são visíveis
pelos aplicativos do usuário final; em vez disso, são utilizadas no sistema
somente pelos outros componentes do lado servidor.
<note>Para obter informações sobre as classes que implementam estas interfaces,
e como utilizar o <ph conref="refconrefs.dita#prod/productshortname"></ph>
como gerenciador de recursos, deve ser visto o capítulo 6,
"Utilização do <ph conref="refconrefs.dita#prod/productshortname"></ph>
como gerenciador de recursos J2EE", no
<cite><ph conref="refconrefs.dita#pub/citdevelop"></ph></cite>.</note></p>
</section>
</refbody>
</reference>
