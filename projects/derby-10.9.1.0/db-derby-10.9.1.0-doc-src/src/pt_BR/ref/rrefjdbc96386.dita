<?xml version="1.0" encoding="utf-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../../dtd/reference.dtd">
<reference id="rrefjdbc96386" xml:lang="pt-br">
<title>java.sql.Blob e java.sql.Clob</title>
<prolog>
<metadata>
<keywords>
<indexterm>java.sql.Blob</indexterm>
<indexterm>java.sql.Clob</indexterm>
<indexterm>BLOB data type</indexterm>
<indexterm>CLOB data type</indexterm>
</keywords>
</metadata>
</prolog>
<refbody>
<section>
<p>No JDBC 2.0, <i>java.sql.Blob</i> é o mapeamento para o tipo BLOB
(objeto grande binário) do SQL;
<i>java.sql.Clob</i> é o mapeamento para o tipo CLOB (objeto grande caractere)
do SQL.</p>
</section>
<section>
<p>java.sql.Blob e java.sql.Clob fornecem um ponteiro lógico para um objeto
grande, em vez de uma cópia completa do objeto.
O <ph conref="refconrefs.dita#prod/productshortname"></ph>
processa somente uma página de dados na memória por vez.
Não há necessidade de processar e armazenar todo o BLOB em memória apenas para
acessar alguns poucos bytes iniciais do objeto LOB</p>
</section>
<section>
<p>O <ph conref="refconrefs.dita#prod/productshortname"></ph>
agora suporta os tipos de dado nativos BLOB e CLOB.
O <ph conref="refconrefs.dita#prod/productshortname"></ph>
também fornece o seguinte suporte para estes tipos de dado:
<ul>
<li><b>Funcionalidades do BLOB</b>
O <ph conref="refconrefs.dita#prod/productshortname"></ph> suporta a interface
<i>java.sql.Blob</i>, e os métodos relacionados ao BLOB em
<i><xref href="rrefjdbc99392.dita#rrefjdbc99392"></xref></i> e
<i><xref href="rrefjdbc77156.dita#rrefjdbc77156"></xref></i>.
Os métodos <i>getBlob</i> de <i>CallableStatement</i> não estão implementados.</li>
<li><b>Funcionalidades do CLOB</b>
O <ph conref="refconrefs.dita#prod/productshortname"></ph>
suporta a interface java.sql.Clob, e os métodos relacionados ao CLOB em
<i><xref href="rrefjdbc99392.dita#rrefjdbc99392"></xref></i> e
<i><xref href="rrefjdbc77156.dita#rrefjdbc77156"></xref></i>.
Os métodos <i>getClob</i> dos procedimentos de <i>CallableStatement</i>
não estão implementados.</li>
</ul>
</p>
</section>
<section>
<p>Para utilizar as funcionalidades java.sql.Blob e java.sql.Clob:
<ul>
<li>Utilizar o tipo BLOB do SQL para armazenamento;
Os tipos LONG VARCHAR FOR BIT DATA, BINARY e VARCHAR FOR BIT DATA
também funcionam.</li>
<li>Utilizar o tipo CLOB do SQL para armazenamento;
Os tipos LONG VARCHAR, CHAR e VARCHAR também funcionam.</li>
<li>Utilizar os métodos <i>getBlob</i> ou <i>getClob</i> da
interface <i>java.sql.ResultSet</i>, para obter um tratador de <i>BLOB</i> ou
<i>CLOB</i> para os dados subjacentes.</li>
<li>Não podem ser chamados métodos estáticos (Extensão SQL sobre SQL)
em qualquer coluna LOB.</li>
</ul>
</p>
</section>
<section>
<p>Além disso, a conversão entre cadeias e BLOBs não é recomendada,
porque a conversão é dependente da plataforma e do banco de dados. </p>
</section>
<section>
<p>O <ph conref="refconrefs.dita#prod/productshortname"></ph>
utiliza cadeias UNICODE (caracteres com 2 bytes), enquanto outros produtos
de banco de dados podem utilizar caracteres ASCII (1 byte por caractere).
Se forem utilizadas várias páginas de código, cada caractere poderá necessitar
de vários bytes.
Poderá ser necessário um tipo BLOB maior para acomodar uma cadeia normal no
<ph conref="refconrefs.dita#prod/productshortname"></ph>.
Devem ser utilizados tipos CLOB para armazenar cadeias.</p>
</section>
<section>
<p><b>Restrições de BLOB, CLOB, (tipos-LOB):</b>
<ul>
<li>Os tipos-LOB não podem ser comparados com relação a igualdade (=)
e desigualdade (!=, &lt;&gt;). </li>
<li>Os valores dos tipos-LOB não são ordenáveis, portanto não são suportados os
testes &lt;, &lt;=, &gt;, &gt;=.</li>
<li>Os tipos-LOB não podem ser utilizados em índices, ou como colunas de
chave primária.</li>
<li>Também são proibidas as cláusulas DISTINCT, GROUP BY e ORDER BY
nos tipos-LOB.</li>
<li>Os tipos-LOB não podem estar envolvidos em conversões implícitas como
outros tipos base.</li>
</ul>
</p>
</section>
<section>
<p>O <ph conref="refconrefs.dita#prod/productshortname"></ph>
implementa todos os métodos para estas interfaces do JDBC 2.0, exceto pelos
métodos <i>set</i> e <i>get</i> da interface <i>CallableStatement</i>.</p>
</section>
<section>
<p><b>Recomendações:</b>
Como o tempo de vida de <i>java.sql.Blob</i> e <i>java.sql.Clob</i> termina
quando a transação é efetivada, deve ser desativada a auto-efetivação
(auto-commit) quando se usa as funcionalidades
<i>java.sql.Blob</i> e <i>java.sql.Clob</i>.</p>
</section>
<section>
<p>
<table pgwide="1" frame="all">
<title>Métodos java.sql.Blob do JDBC 2.0 suportados</title>
<tgroup cols="3" colsep="1" rowsep="1">
<colspec colname="1" colnum="1" colwidth="13*"/>
<colspec colname="2" colnum="2" colwidth="32*"/>
<colspec colname="3" colnum="3" colwidth="55*"/>
<thead>
<row>
<entry align="left" colname="1" valign="bottom">Retorna</entry>
<entry align="left" colname="2" valign="bottom">Assinatura</entry>
<entry align="left" colname="3" valign="bottom">Notas de implementação</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="1"><i>InputStream</i></entry>
<entry colname="2"><i>getBinaryStream()</i></entry>
<entry colname="3"></entry>
</row>
<row>
<entry colname="1"><i>byte[]</i></entry>
<entry colname="2"><i>getBytes(long pos, int length)</i></entry>
<entry colname="3">São lançadas exceções se <i>pos</i> &lt; 1,
se <i>pos</i> for maior que o comprimento, ou se <i>length</i> &lt;= 0.</entry>
</row>
<row>
<entry colname="1"><i>long</i></entry>
<entry colname="2"><i>length()</i></entry>
<entry colname="3"></entry>
</row>
<row>
<entry colname="1"><i>long</i></entry>
<entry colname="2"><i>position(byte[] pattern, long start)</i></entry>
<entry colname="3">São lançadas exceções se <i>pattern</i> == null,
se <i>start</i> &lt; 1, ou se <i>pattern</i> for uma matriz de comprimento 0.
</entry>
</row>
<row>
<entry colname="1"><i>long</i></entry>
<entry colname="2"><i>position(Blob pattern, long start)</i></entry>
<entry colname="3">São lançadas exceções se <i>pattern</i> == null,
se <i>start</i> &lt; 1, se <i>pattern</i> possuir comprimento 0,
ou se for lançada uma exceção ao tentar ler o primeiro byte de <i>pattern</i>.
</entry>
</row>
</tbody>
</tgroup>
</table>
<table pgwide="1" frame="all">
<title>Métodos java.sql.Clob do JDBC 2.0 suportados</title>
<tgroup cols="3" colsep="1" rowsep="1">
<colspec colname="1" colnum="1" colwidth="14*"/>
<colspec colname="2" colnum="2" colwidth="36*"/>
<colspec colname="3" colnum="3" colwidth="50*"/>
<thead>
<row>
<entry align="left" colname="1" valign="bottom">Retorna</entry>
<entry align="left" colname="2" valign="bottom">Assinatura</entry>
<entry align="left" colname="3" valign="bottom">Notas de implementação</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="1"><i>InputStream</i></entry>
<entry colname="2"><i>getAsciiStream()</i></entry>
<entry colname="3"></entry>
</row>
<row>
<entry colname="1"><i>Reader</i></entry>
<entry colname="2"><i>getCharacterStream()</i></entry>
<entry colname="3">NÃO SUPORTADO</entry>
</row>
<row>
<entry colname="1"><i>String</i></entry>
<entry colname="2"><i>getSubString(long pos, int length)</i></entry>
<entry colname="3">São lançadas exceções se <i>pos</i> &lt; 1,
se <i>pos</i> for maior que o comprimento de <i>Clob</i>, ou se
<i>length</i> &lt;= 0.
</entry>
</row>
<row>
<entry colname="1"><i>long</i></entry>
<entry colname="2"><i>length()</i></entry>
<entry colname="3"></entry>
</row>
<row>
<entry colname="1"><i>long</i></entry>
<entry colname="2"><i>position(Clob searchstr, long start) </i></entry>
<entry colname="3">São lançadas exceções se <i>searchStr</i> == null, se
<i>start</i> &lt; 1, se <i>searchStr</i> possuir comprimento 0,
ou se for lançada uma exceção ao tentar ler o primeiro caractere de
<i>searchStr.</i></entry>
</row>
<row>
<entry colname="1"><i>long</i></entry>
<entry colname="2"><i>position(String searchstr, long start) </i></entry>
<entry colname="3">São lançadas exceções se <i>searchStr</i> == null,
se <i>start</i> &lt; 1, ou se o padrão for uma cadeia vazia.</entry>
</row>
</tbody>
</tgroup>
</table>
</p>
</section>
</refbody>
</reference>
