<?xml version="1.0" encoding="utf-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../../dtd/reference.dtd">
<reference id="rrefjavsqlrssc" xml:lang="pt-br">
<title>ResultSets e colunas de fluxo</title>
<prolog>
<metadata>
<keywords>
<indexterm>Requisições getXXXStream</indexterm>
<indexterm>Colunas com fluxo<indexterm>trazer dos ResultSets utilizando os métodos getXXXStream</indexterm></indexterm>
</keywords>
</metadata>
</prolog>
<refbody>
<section>
<p>Se o objeto subjacente também for da classe <i>OutputStream</i>,
<i>getBinaryStream</i> retornará o objeto diretamente.</p>
</section>
<section>
<p><indexterm>getAsciiStream</indexterm>
<indexterm>getUnicodeStream</indexterm>
<indexterm>getBinaryStream</indexterm>
Para obter um campo do <i>ResultSet</i> utilizando colunas de fluxo, podem ser
utilizados os métodos <i>getXXXStream</i> se o tipo suportá-los.
Para obter uma lista dos tipos que suportam vários fluxos deve ser consultado
<xref href="rrefjavsqlprst.dita#rrefjavsqlprst/jdbc25312"></xref>
(Consulte também
<xref href="rrefjdbc20377.dita#rrefjdbc20377/jdbc31241"></xref>.)</p>
</section>
<section>
<p>Os dados de uma coluna com tipo de dado suportado podem ser trazidos na
forma de fluxo, independentemente de terem sido armazenados como um fluxo.</p>
</section>
<section>
<p>O exemplo a seguir mostra como o usuário pode trazer uma coluna LONG VARCHAR
na forma de fluxo:
<codeblock expanse="column"><b><ph>// trazer os dados como um fluxo</ph>
ResultSet rs = s.executeQuery("SELECT b FROM minha_tabela");
while (rs.next()) {
    <ph>// utilizar java.io.InputStream para trazer os dados</ph>
    java.io.InputStream ip = rs.getAsciiStream(1);
    <ph>// processar o fluxo -- esta é apenas uma forma genérica</ph>
    <ph>// de se mostrar os dados</ph>
    int c;
    int tamanhoColuna = 0;
    byte[] buff = new byte[128];
    for (;;) {
        int size = ip.read(buff);
        if (size == -1)
            break;
        tamanhoColuna += size;
        String chunk = new String(buff, 0, size);
        System.out.print(chunk);
    }
}
rs.close();
s.close();
conn.commit();</b>
</codeblock>
</p>
</section>
</refbody>
</reference>
