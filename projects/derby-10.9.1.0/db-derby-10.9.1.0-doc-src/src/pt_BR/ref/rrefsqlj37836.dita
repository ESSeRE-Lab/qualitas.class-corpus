<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../../dtd/reference.dtd">
<!--
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<reference id="rrefsqlj37836" xml:lang="pt-br">
<title>especificação-de-coluna-gerada</title>
<prolog>
<metadata>
<keywords>
<indexterm>Atributos da coluna de identidade</indexterm>
<indexterm>especificação-de-coluna-gerada</indexterm>
</keywords>
</metadata>
</prolog>
<refbody>
<example>
<codeblock><b>[ GENERATED { ALWAYS | BY DEFAULT } AS IDENTITY
[ ( START WITH ConstanteInteira
[ ,INCREMENT BY ConstanteInteira] ) ]  ]  ]
</b>
</codeblock>
</example>
<section id="sqlj69411">
<title>Atributos da coluna de identidade</title>
<p>Nas colunas SMALLINT, INT e BIGINT com atributo de identidade, o
<ph conref="refconrefs.dita#prod/productshortname"></ph>
atribui automaticamente valores inteiros incrementados para a coluna.
Os atributos da coluna de identidade se comportam como os outros valores padrão,
ou seja, quando a instrução de inserção não especifica o valor para a coluna, o
<ph conref="refconrefs.dita#prod/productshortname"></ph>
fornece automaticamente o valor.
Entretanto, o valor não é uma constante; o
<ph conref="refconrefs.dita#prod/productshortname"></ph>
incrementa automaticamente o valor padrão na hora da inserção.</p>
<p>A palavra chave IDENTITY somente pode ser especificada quando o tipo de dado
associado à coluna for um dos seguintes tipos inteiros exatos.
<ul>
<li>SMALLINT</li>
<li>INT</li>
<li>BIGINT</li>
</ul>
</p>
<p>Existem dois tipos de coluna de identidade no
<ph conref="refconrefs.dita#prod/productshortname"></ph>:
aquelas que são sempre geradas (GENERATED ALWAYS), e aquelas que são geradas por
padrão (GENERATED BY DEFAULT).
<dl>
<dlentry>
<dt>GENERATED ALWAYS</dt>
<dd>Uma coluna de identidade que é sempre gerada, incrementa o valor padrão
em todas as inserções e armazena o valor incrementado na coluna.
Ao contrário dos outros valores padrão, não é possível inserir diretamente um
valor ou atualizar uma coluna de identidade que é sempre gerada.
Por isso, deve ser especificada a palavra chave DEFAULT ao fazer inserção
na coluna de identidade, ou não incluir a coluna de identidade na lista
de colunas na inserção.
Por exemplo:
<codeblock>CREATE TABLE SAUDAÇÕES (
    I  INT GENERATED ALWAYS AS IDENTITY,
    CH CHAR(50));
INSERT INTO SAUDAÇÕES VALUES (DEFAULT, 'alô');
INSERT INTO SAUDAÇÕES(CH) VALUES ('bom dia');</codeblock>
Os valores gerados automaticamente na coluna de identidade GENERATED ALWAYS
são únicos.
A criação de uma coluna de identidade não cria um índice para a coluna.
</dd>
</dlentry>
<dlentry>
<dt>GENERATED BY DEFAULT</dt>
<dd><p>Uma coluna de identidade gerada por padrão, somente incrementa e
utiliza o valor padrão nas inserções quando não é fornecido nenhum valor
explícito.
Ao contrário da colunas sempre geradas, pode ser especificado um valor na
instrução de inserção a ser utilizado no lugar do valor padrão gerado.</p>
<p>Para utilizar o valor gerado, deve ser especificada a palavra chave
DEFAULT ao inserir na coluna de identidade, ou não incluir a
coluna de identidade na lista de colunas da inserção.
Para especificar um valor, este deve ser incluído na instrução de inserção.
Por exemplo:
<codeblock>CREATE TABLE SAUDAÇÕES (
    I  INT GENERATED BY DEFAULT AS IDENTITY,
    CH CHAR(50));
<b>-- especificar o valor "1":</b>
INSERT INTO SAUDAÇÕES VALUES (1, 'olá');
<b>-- usar o padrão gerado</b>
INSERT INTO SAUDAÇÕES VALUES (DEFAULT, 'salut');
<b>-- usar o padrão gerado</b>
INSERT INTO SAUDAÇÕES(CH) VALUES ('bonjour'); </codeblock>
Deve ser observado que ao contrário das colunas GENERATED ALWAYS, as colunas
GENERATED BY DEFAULT não garantem unicidade.
Portanto, no exemplo acima as linhas <codeph>olá</codeph> e
<codeph>salut</codeph> possuem o valor de identidade igual a "1", porque a
coluna gerada começa por "1" e o valor especificado pelo usuário também é "1".
Para não permitir duplicidade, especialmente ao carregar ou importar dados, a
tabela deve ser criada utilizando um valor para START WITH correspondente ao
primeiro valor de identidade que o sistema deve atribuir.
Para verificar esta condição e não permiti-la, pode ser utilizada uma chave
primária ou restrição de unicidade na coluna de identidade GENERATED BY DEFAULT.
</p>
</dd>
</dlentry>
</dl>
</p>
<p>Por padrão, o valor inicial da coluna de identidade é 1, e o valor do
incremento é 1.
Podem ser especificados valores diferentes do padrão para o valor inicial e
para o incremento ao definir a coluna utilizando as palavras chave
STARTS WITH e INCREMENT BY.
Se for especificado um número negativo para o valor do incremento, o
<ph conref="refconrefs.dita#prod/productshortname"></ph>
<i>decrementará</i> o valor a cada inserção.
Se o valor for 0, ou positivo, o
<ph conref="refconrefs.dita#prod/productshortname"></ph>
incrementará o valor a cada inserção.</p>
<p>Os valores máximos e mínimos permitidos nas colunas de identidade são
determinados pelo tipo de dado da coluna.
A tentativa de inserir um valor fora da faixa de valores suportados pelo tipo
de dado lança uma exceção.
<table frame="all">
<title>Valores máximos e mínimos para colunas com especificação de coluna gerada</title>
<tgroup cols="3" colsep="1" rowsep="1">
<colspec colname="1" colnum="1" colwidth="16*"/>
<colspec colname="2" colnum="2" colwidth="42*"/>
<colspec colname="3" colnum="3" colwidth="42*"/>
<thead>
<row>
<entry align="left" colname="1" valign="bottom">Tipo de dado</entry>
<entry align="left" colname="2" valign="bottom">Valor máximo</entry>
<entry align="left" colname="3" valign="bottom">Valor mínimo</entry>
</row>
</thead>
<tbody>
<row>
<entry colname="1">SMALLINT</entry>
<entry colname="2">32.767 (<i>java.lang.Short.MAX_VALUE</i>)</entry>
<entry colname="3">-32.768 (<i>java.lang.Short.MIN_VALUE</i>)</entry>
</row>
<row>
<entry colname="1">INT</entry>
<entry colname="2">2.147.483.647 (<i>java.lang.Integer.MAX_VALUE</i>)</entry>
<entry colname="3">-2.147.483.648 (<i>java.lang.Integer.MIN_VALUE</i>)</entry>
</row>
<row>
<entry colname="1">BIGINT</entry>
<entry colname="2">9.223.372.036.854.775.807 (<i>java.lang.Long.MAX_VALUE</i>)</entry>
<entry colname="3">-9.223.372.036.854.775.808 (<i>java.lang.Long.MIN_VALUE</i>)</entry>
</row>
</tbody>
</tgroup>
</table>
</p>
<p>Os valores gerados automaticamente na coluna de identidade são únicos.
Deve ser utilizada uma restrição de chave primária ou de unicidade para
garantir a unicidade.
A criação da coluna de identidade <i>não</i> cria um índice para a coluna.</p>
<p>A função <codeph>IDENTITY_VAL_LOCAL</codeph> é uma função não determinística
que retorna o valor atribuído mais recentemente a uma coluna de identidade.
Consulte <xref href="rrefidentityvallocal.dita#rrefidentityvallocal"></xref>
para obter mais informações.</p>
<note>Deve ser especificado o nome do esquema, da tabela e da coluna
utilizando letras maiúsculas e minúsculas conforme os nomes estejam armazenados
nas tabelas do sistema -- ou seja, todas as letras em maiúsculo, a menos que
tenham sido utilizados identificadores delimitados para criar estes objetos
no banco de dados.</note>
<p>O <ph conref="refconrefs.dita#prod/productshortname"></ph>
mantém o último valor incrementado para a coluna no cache.
Também armazena o próximo valor incrementado para a coluna no disco na
coluna <i>AUTOINCREMENTVALUE</i> da tabela do sistema <i>SYS.SYSCOLUMNS</i>.
Desfazer a transação não desfaz este valor, portanto transações desfeitas
podem deixar "espaços" nos valores inseridos automaticamente na coluna de
identidade.
O <ph conref="refconrefs.dita#prod/productshortname"></ph>
se comporta desta maneira para evitar bloqueio na linha de <i>SYS.SYSCOLUMNS</i>
pela duração da transação, e para manter a simultaneidade alta.
</p>
<p>
<indexterm>Colunas de identidade<indexterm>e gatilhos</indexterm></indexterm>
Quando acontece uma inserção em uma instrução-SQL-engatilhada, o valor
inserido pela instrução-SQL-engatilhada na coluna de identidade é disponível
a partir de <i>ConnectionInfo</i> somente dentro do código do gatilho.
O código do gatilho também pode ver o valor inserido pela instrução que fez
o gatilho disparar.
Entretanto, a instrução que fez o gatilho disparar não pode ver o valor
inserido pela instrução-SQL-engatilhada na coluna de identidade.
Da mesma maneira, os gatilhos podem ser aninhados (ou recursivos).
Uma instrução SQL pode fazer o gatilho T1 disparar.
T1, por sua vez, executa uma instrução SQL que faz o gatilho T2 disparar.
Se tanto T1 quanto T2 inserem linhas em uma tabela que faz o
<ph conref="refconrefs.dita#prod/productshortname"></ph>
inserir em uma coluna de identidade, o gatilho T1 não poderá ver o valor
produzido pela inserção feita por T2, mas T2 poderá ver o valor produzido pela
inserção feita por T1.
Cada nível de aninhamento pode ver os valores incrementados gerados por si
próprio e pelos níveis de aninhamento anteriores, por todo o percurso até a
instrução SQL de nível superior que deu início aos gatilhos recursivos.
Somente podem existir 16 níveis de recursividade de gatilho.</p>
</section>
<section>
<title>Exemplo</title>
<codeblock>CREATE TABLE SAUDAÇÕES (
    I INT GENERATED BY DEFAULT AS IDENTITY (START WITH 2, INCREMENT BY 1),
    CH CHAR(50));
-- especificar o valor  "1":
INSERT INTO SAUDAÇÕES VALUES (1, 'olá');
-- usar o valor gerado
INSERT INTO SAUDAÇÕES VALUES (DEFAULT, 'salut');
-- usar o valor gerado
INSERT INTO SAUDAÇÕES(CH) VALUES ('bonjour'); </codeblock>
</section>
</refbody>
</reference>
