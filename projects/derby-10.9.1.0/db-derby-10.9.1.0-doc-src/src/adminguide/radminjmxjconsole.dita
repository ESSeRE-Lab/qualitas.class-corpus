<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<reference id="radminjmxjconsole" xml:lang="en-us">
<title>Using JConsole to access the
<ph conref="../conrefs.dita#prod/productshortname"></ph> MBeans</title>
<prolog><metadata>
<keywords><indexterm>Java Management Extensions (JMX) technology</indexterm>
<indexterm>JMX<indexterm>using JConsole</indexterm></indexterm>
</keywords>
</metadata></prolog>
<refbody>
<section>
<p>JConsole is a graphical JMX-compliant tool that is available in recent
versions of the Oracle JDKs. JConsole enables you to monitor and manage Java
applications and virtual machines on a local or remote machine.</p>
<p>You may use JConsole from JDK 6 or later even if you are running
<ph conref="../conrefs.dita#prod/productshortname"></ph> using an earlier
version of the JDK (or just the JRE). (You could also use JConsole from JDK 5 if
you are running <ph conref="../conrefs.dita#prod/productshortname"></ph> using
JDK 6 or later.) It is recommended that you use the newest version possible.
More information about JConsole is available in the OpenJDK project at
<xref format="html"
href="http://openjdk.java.net/tools/svc/jconsole/index.html"
scope="external">http://openjdk.java.net/tools/svc/jconsole/index.html</xref>.</p>
</section>
<section><title>Starting JConsole and connecting to Derby</title>
<p>In the Oracle JDK, the JConsole binary is available in
<codeph>JDK_HOME/bin</codeph>, where JDK_HOME is the directory in which the JDK
is installed. To start JConsole, use the <codeph>jconsole</codeph> command, as
in the following example on a UNIX system:</p>
<codeblock><b>/usr/local/java/jdk1.7.0/bin/jconsole</b></codeblock>
<p>If you did not disable SSL when booting the managed JVM, you probably have
to provide a truststore containing the server's SSL certificate to be able to
establish JMX connections. If SSL client authentication is enabled, a keystore
must be configured as well (see
<xref href="radminjmxenablepwdssl.dita#radminjmxenablepwdssl"></xref> for
details). The following example shows how to start JConsole with SSL client and
server authentication:</p>
<codeblock><b>jconsole -J-Djavax.net.ssl.trustStore=/home/user/.truststoreForClient
-J-Djavax.net.ssl.trustStorePassword=myTruststorePassword
-J-Djavax.net.ssl.keyStore=/home/user/.keystoreForClient
-J-Djavax.net.ssl.keyStorePassword=myKeyStorePassword</b></codeblock>
<p>A graphical user interface (GUI) appears. For additional startup options,
refer to the JConsole documentation. Once the GUI starts, you are presented with
a list of the JVMs that are accessible on the local host. Locate the JVM that is
running <ph conref="../conrefs.dita#prod/productshortname"></ph> and connect to
it.</p>
<p>To connect to a JVM on a remote host, you will need to supply the host name
and port number, or a JMX service URL, instead.</p>
<p>If you cannot find the Derby JVM running on the local host, make sure you are
running JConsole as the same user as the Derby JVM, or as a different user with
sufficient file system permissions. If you are using Java SE 5, make sure you
have enabled JMX. When you use Java SE 6 or later, local JMX access is enabled
by default.</p>
</section>
<section><title>Accessing MBeans</title>
<p>Once you have connected to a JVM via JConsole, the JVM's MBeans should be
available on a separate tab in the internal JConsole window. Under the domain
<codeph>org.apache.derby</codeph> you should see a list of MBeans. Browse the
MBeans and their attributes and operations by navigating the hierarchy
presented.</p>
<p>Another useful JConsole feature is that you can view dynamic data represented
as JMX attributes in graph form. To view these graphs, double-click an attribute
value that is a number.</p>
</section>
</refbody>
</reference>
