<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="cadminsslserver" xml:lang="en-us">
<title>Starting the server with SSL/TLS</title>
<prolog><metadata>
<keywords><indexterm>Network Server<indexterm>SSL</indexterm></indexterm><indexterm>Network Server<indexterm>TLS</indexterm></indexterm><indexterm>SSL</indexterm><indexterm>TLS</indexterm></keywords>
</metadata></prolog>

<conbody>
<p>
For server SSL/TLS, a server key pair needs to be generated. If the
server is going to do client authentication, the client sertificates
need to be installed in the trust store. These operations are
described in <xref href="cadminsslkeys.dita#cadminsslkeys"></xref>.
</p>
<p>SSL at the server side is activated with the property
<codeph>derby.drda.sslMode</codeph> (default off) or the
<codeph>-ssl</codeph> option for the server start command. 
</p>

<section>
<title>Starting the server with basic SSL encryption</title>
<p>When the SSL mode is set to <codeph>basic</codeph>, the server will
only accept SSL encrypted connections.</p>

<p>The properties <codeph>javax.net.ssl.keyStore</codeph> and
<codeph>javax.net.ssl.keyStorePassword</codeph> need to be set with
the proper values.</p>
</section>
<example><title>Example</title>
<codeblock>java -Djavax.net.ssl.keyStore=serverKeyStore.key \
     -Djavax.net.ssl.keyStorePassword=qwerty \
     -jar derbyrun.jar server start -ssl basic</codeblock>
</example>

<section>
<title>Starting a server which authenticates clients</title>

<p>When the server's SSL mode is set to
<codeph>peerAuthentication</codeph>, then the server authenticates its
clients' identity in addition to encrypting network traffic. In this
situation, the server's <i>trust store</i> must contain a certificate for
each client which will connect.
</p>
<p>The <codeph>javax.net.ssl.trustStore</codeph> and
<codeph>javax.net.ssl.trustStorePassword</codeph> need to be set in
addition to the properties above.</p>
<p>See <xref href="cadminsslclient.dita#cadminsslclient"></xref> for
client settings when the server does client authentication.</p>
</section>
<example><title>Example</title>
<codeblock>java -Djavax.net.ssl.keyStore=serverKeyStore.key \
     -Djavax.net.ssl.keyStorePassword=qwerty \
     -Djavax.net.ssl.trustStore=serverTrustStore.key \
     -Djavax.net.ssl.trustStorePassword=qwerty \
     -jar derbyrun.jar server start -ssl peerAuthentication</codeblock>
</example>

</conbody>
</concept>