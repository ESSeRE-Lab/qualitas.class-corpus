<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "../dtd/concept.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<concept id="cadminhubbkup75469" xml:lang="en-us">
<title>Using operating system commands with the freeze and unfreeze system
procedures to perform an online backup</title>
<prolog><metadata>
<keywords><indexterm>SYSCS_FREEZE_DATABASE system procedure</indexterm><indexterm>SYSCS_UNFREEZE_DATABASE
system procedure</indexterm></keywords>
</metadata></prolog>
<conbody>
<p>Typically, these procedures are used to speed up the copy operation involved
in an online backup. In this scenario, <ph conref="../conrefs.dita#prod/productshortname"></ph> does
not perform the copy operation for you. You use the SYSCS_UTIL.SYSCS_FREEZE_DATABASE
procedure to lock the database, and then you explicitly copy the database
directory by using operating system commands. </p>
<p>For example, because the UNIX tar command uses operating system file-copying
routines, and the SYSCS_UTIL.SYSCS_BACKUP_DATABASE procedure uses java I/O
calls with additional internal synchronization that allow updates during the
backup, the tar command might provide faster backups than the SYSCS_UTIL.SYSCS_BACKUP_DATABASE
procedure.</p>
<p>To use operating system commands for online database backups, call the
SYSCS_UTIL.SYSCS_FREEZE_DATABASE system procedure. The SYSCS_UTIL.SYSCS_FREEZE_DATABASE
system procedure puts the database into a state in which it can be safely
copied. After the database has been copied, use the SYSCS_UTIL.SYSCS_UNFREEZE_DATABASE
system procedure to continue working with the database. Only after SYSCS_UTIL.SYSCS_UNFREEZE_DATABASE
has been specified can transactions once again write to the database. Read
operations can proceed while the database is "frozen."</p>
<note>To ensure a consistent backup of the database, <ph conref="../conrefs.dita#prod/productshortname"></ph> might
block applications that attempt to write to a frozen database until the backup
is completed and the SYSCS_UTIL.SYSCS_UNFREEZE_DATABASE system procedure is
called.</note>
<p>The following example demonstrates how the freeze and unfreeze procedures
are used to surround an operating system copy command:</p>
<codeblock>public static void backUpDatabaseWithFreeze(Connection conn)
	throws SQLException
{
Statement s = conn.createStatement();
s.executeUpdate(
    "CALL SYSCS_UTIL.SYSCS_FREEZE_DATABASE()");
<b>//copy the database directory during this interval</b>
s.executeUpdate(
    "CALL SYSCS_UTIL.SYSCS_UNFREEZE_DATABASE()");
s.close();
}</codeblock>
</conbody>
</concept>
