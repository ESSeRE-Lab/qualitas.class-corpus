<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

   http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<reference id="radminjmxenabledisable" xml:lang="en-us">
<title>Enabling and disabling JMX</title>
<prolog><metadata>
<keywords><indexterm>Java Management Extensions (JMX) technology</indexterm>
<indexterm>JMX<indexterm>enabling and disabling</indexterm></indexterm>
</keywords>
</metadata></prolog>
<refbody>
<section>
<p>You can use JMX management and monitoring both locally and remotely. The
term <term>local</term> means <i>on the same host (machine)</i> and <i>running
as the same user</i>. For example, this means that local JMX access is possible
only if the JVM you want to access is running on the same host and as the same
user as the user who is running a JMX client such as JConsole (or a different user
with sufficient file system permissions). In order to allow other users to access
the JVM, or to allow access from other hosts, remote JMX must be enabled.</p>
</section>
<section><title>Local JMX access</title>
<p>If you are using a Java SE 6 or later JVM, local JMX management and
monitoring are most likely enabled by default.</p>
<p>Some JVMs, for example Java SE 5 JVMs, do not enable local JMX management by
default. Refer to the documentation for your JVM for details. A common way to
enable local JMX access on these JVMs is to include the
<codeph>-Dcom.sun.management.jmxremote</codeph> option on the command line when
you start the JVM.</p>
</section>
<section><title>Remote JMX access</title>
<p>Remote JMX management and monitoring is a powerful Java feature, allowing you
to monitor a specific JVM from a remote location. Enabling remote JMX requires
explicit actions by the JVM administrator, since it may involve exposing
sensitive information about your system.</p>
<p>The most common way to enable remote JMX access to your JVM is to specify a
TCP/IP port number and some basic security settings when you start the JVM. The
security settings commonly include authentication and SSL (Secure Socket
Layer). <ph conref="../conrefs.dita#prod/productshortname"></ph> attempts to use
the JVM's built-in platform MBean server. For a list of current command line
options (system properties) and their meanings, refer to the table in the
<cite>Java SE Monitoring and Management Guide</cite> at <xref format="html"
href="http://docs.oracle.com/javase/7/docs/technotes/guides/management/agent.html#gdeum"
scope="external">http://docs.oracle.com/javase/7/docs/technotes/guides/management/agent.html#gdeum
</xref>.</p>
<p>The following topics describe ways to enable and disable remote JMX
access.</p>
</section>
</refbody>
</reference>
