<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<reference id="radminexportarguments" xml:lang="en-us">
<title>Parameters for the export procedures</title>
<shortdesc>The <ph conref="../conrefs.dita#prod/productshortname"></ph> export
procedures use specific parameters.</shortdesc>
<prolog><metadata><keywords>
<indexterm>import and export procedures<indexterm>export parameters</indexterm></indexterm>
<indexterm>bulk export<indexterm>procedure parameters</indexterm></indexterm>
<indexterm>exporting data<indexterm>procedure parameters</indexterm></indexterm>
</keywords></metadata></prolog>
<refbody>
<section><dl><dlentry>
<dt id="radminexportschemaname">SCHEMANAME</dt>
<dd>Specifies the schema of the table. You can specify a NULL value to use the
default schema name. The <parmname>SCHEMANAME</parmname> parameter takes an
input argument that is a VARCHAR(128) data type.</dd>
</dlentry><dlentry>
<dt id="radminexportselectstatement">SELECTSTATEMENT</dt>
<dd>Specifies the SELECT statement query that returns the data to be exported.
Specifying a NULL value will result in an error. The
<parmname>SELECTSTATEMENT</parmname> parameter takes an input argument that is
a VARCHAR(32672) data type.</dd>
</dlentry><dlentry>
<dt id="radminexporttablename">TABLENAME</dt>
<dd>Specifies the table name of the table or view from which the data is to
be exported. This table cannot be a system table or a declared temporary table.
The string must exactly match the case of the table name. Specifying a NULL
value results in an error. The <parmname>TABLENAME</parmname> parameter takes
an input argument that is a VARCHAR(128) data type.</dd>
</dlentry><dlentry>
<dt id="radminexportfilename">FILENAME</dt>
<dd>Specifies the file to which the data is to be exported. If the path is
omitted, the current working directory is used. If the name of a file that
already exists is specified, the export utility overwrites the contents of the
file; it does not append the information. The specified location of the file
should refer to the server-side location if you are using the Network Server.
Specifying a NULL value results in an error. The <parmname>FILENAME</parmname>
parameter takes an input argument that is a VARCHAR(32672) data type.</dd>
</dlentry><dlentry>
<dt id="radminexportcolumndelimiter">COLUMNDELIMITER</dt>
<dd>Specifies a column delimiter. The specified character is used in place of a
comma to signify the end of a column. You can specify a NULL value to use the
default value of a comma. The <parmname>COLUMNDELIMITER</parmname> parameter
must be a CHAR(1) data type.</dd>
</dlentry><dlentry>
<dt id="radminexportcharacterdelimiter">CHARACTERDELIMITER</dt>
<dd>Specifies a character delimiter. The specified character is used in place of
double quotation marks to enclose a character string. You can specify a NULL
value to use the default value of a double quotation mark. The
<parmname>CHARACTERDELIMITER</parmname> parameter takes an input argument that
is a CHAR(1) data type.</dd>
</dlentry><dlentry>
<dt id="radminexportcodeset">CODESET</dt>
<dd>Specifies the code set of the data in the export file. The code set name
should be one of the Java supported character encoding sets.  Data is converted
from the database code page to the specified code page before writing to the
file. You can specify a NULL value to write the data in the same code page
as the JVM in which it is being executed. The <parmname>CODESET</parmname>
parameter takes an input argument that is a VARCHAR(128) data type.</dd>
</dlentry><dlentry>
<dt id="radminexportlobsfilename">LOBSFILENAME</dt>
<dd>Specifies the file that the large object data is exported to. If the path is
omitted, the LOB file is created in the same directory as the main export file.
If you specify the name of an existing file, the export utility overwrites the
contents of the file. The data is not appended to the file. If you are using the
Network Server, the file should be in a server-side location. Specifying a NULL
value results in an error. The <parmname>LOBSFILENAME</parmname> parameter takes
an input argument that is a VARCHAR(32672) data type.</dd>
</dlentry></dl>
<p>If you create a schema, table, or column name as a non-delimited identifier,
you must pass the name to the export procedure using all uppercase characters.
If you created a schema or table name as a delimited identifier, you must pass
the name to the export procedure using the same case that was used when it was
created.</p>
</section>
</refbody>
</reference>
