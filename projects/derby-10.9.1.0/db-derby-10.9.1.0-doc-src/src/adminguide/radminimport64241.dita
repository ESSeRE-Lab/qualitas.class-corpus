<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "../dtd/reference.dtd">
<!-- 
Licensed to the Apache Software Foundation (ASF) under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
The ASF licenses this file to You under the Apache License, Version 2.0
(the "License"); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at      

http://www.apache.org/licenses/LICENSE-2.0  

Unless required by applicable law or agreed to in writing, software  
distributed under the License is distributed on an "AS IS" BASIS,  
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
See the License for the specific language governing permissions and  
limitations under the License.
-->
<reference id="radminimport64241" xml:lang="en-us">
<title>Parameters for the import procedures</title>
<shortdesc>The <ph conref="../conrefs.dita#prod/productshortname"></ph> import
procedures use specific parameters.</shortdesc>
<prolog><metadata><keywords>
<indexterm>import and export procedures<indexterm>import parameters</indexterm></indexterm>
<indexterm>bulk import<indexterm>procedure parameters</indexterm></indexterm>
<indexterm>importing data<indexterm>procedure parameters</indexterm></indexterm>
</keywords></metadata></prolog>
<refbody>
<section>
<dl><dlentry>
<dt id="radminimportschemaname">SCHEMANAME</dt>
<dd>Specifies the schema of the table. You can specify a NULL value to use
the default schema name. The <parmname>SCHEMANAME</parmname> parameter takes
an input argument that is a VARCHAR(128) data type.</dd>
</dlentry><dlentry>
<dt id="radminimport27122">TABLENAME</dt>
<dd>Specifies the name of the table into which the data is to be imported.
This table cannot be a system table or a declared temporary table. The string
must exactly match the case of the table name. Specifying a NULL value results
in an error. The <parmname>TABLENAME</parmname> parameter takes an input
argument that is a VARCHAR(128) data type.</dd>
</dlentry><dlentry>
<dt id="radminimportinsertcolumns">INSERTCOLUMNS</dt>
<dd>Specifies the comma-separated column names of the table into which the
data will be imported. You can specify a NULL value to import into all columns
of the table. The <parmname>INSERTCOLUMNS</parmname> parameter takes an input
argument that is a VARCHAR(32672) data type.</dd>
</dlentry><dlentry>
<dt id="radminimportcolumnindexes">COLUMNINDEXES</dt>
<dd>Specifies the comma-separated column indexes (numbered from one) of the
input data fields that will be imported. You can specify a NULL value to use all
input data fields in the file. The <parmname>COLUMNINDEXES</parmname> parameter
takes an input argument that is a VARCHAR(32672) data type.</dd>
</dlentry><dlentry>
<dt id="radminimportfilename">FILENAME</dt>
<dd>Specifies the name of the file that contains the data to be imported.
If the path is omitted, the current working directory is used. The specified
location of the file should refer to the server side location if you are using
the Network Server. Specifying a NULL value results in an error. The
<parmname>FILENAME</parmname> parameter takes an input argument that is a
VARCHAR(32672) data type.</dd>
</dlentry><dlentry>
<dt id="radminimportcolumndelimiter">COLUMNDELIMITER</dt>
<dd>Specifies a column delimiter. The specified character is used in place
of a comma to signify the end of a column. You can specify a NULL value to
use the default value of a comma. The <parmname>COLUMNDELIMITER</parmname>
parameter takes an input argument that is a CHAR(1) data type.</dd>
</dlentry><dlentry>
<dt id="radminimportcharacterdelimiter">CHARACTERDELIMITER</dt>
<dd>Specifies a character delimiter. The specified character is used in place
of double quotation marks to enclose a character string. You can specify a
NULL value to use the default value of a double quotation mark. The
<parmname>CHARACTERDELIMITER</parmname> parameter takes an input argument that
is a CHAR(1) data type.</dd>
</dlentry><dlentry>
<dt id="radminimportcodesetarg">CODESET</dt>
<dd>Specifies the code set of the data in the input file. The code set name
should be one of the Java supported character encoding sets. Data is converted
from the specified code set to the database code set (UTF-8). You can specify
a NULL value to interpret the data file in the same code set as the JVM in
which it is being executed. The <parmname>CODESET</parmname> parameter takes
an input argument that is a VARCHAR(128) data type.</dd>
</dlentry><dlentry>
<dt id="radminimportreplace">REPLACE</dt>
<dd>A non-zero value for the replace parameter will import in REPLACE mode,
while a zero value will import in INSERT mode. REPLACE mode deletes all existing
data from the table by truncating the table and inserts the imported data.
The table definition and the index definitions are not changed. You can import
with REPLACE mode only if the table already exists. INSERT mode adds the
imported data to the table without changing the existing table data. Specifying
a NULL value results in an error. The <parmname>REPLACE</parmname> parameter
takes an input argument that is a SMALLINT data type.</dd>
</dlentry></dl>
<p>If you create a schema, table, or column name as a non-delimited identifier,
you must pass the name to the import procedure using all uppercase characters.
If you created a schema, table, or column name as a delimited identifier, you
must pass the name to the import procedure using the same case that was used
when it was created.</p>
</section>
</refbody>
</reference>
